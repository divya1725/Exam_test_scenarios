<?xml version="1.0" encoding="UTF-8"?>
<con:interface xsi:type="con:WsdlInterface" id="6d491868-fd9d-49d3-96e6-1cfae4611c2d" wsaVersion="NONE" name="FNDSReservationService_V1.0PortTypeSoap11" type="wsdl" bindingName="{urn:fnd.payment.fs.evry.com:ws:fnd-reservation-ws-types:v1_0}FNDSReservationService_V1.0PortTypeSoap11" soapVersion="1_1" anonymous="optional" definition="http://10.246.89.106:27661/fundscheck/services/FNDSReservationService_V10?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="6d491868-fd9d-49d3-96e6-1cfae4611c2dfileName">FNDSReservationService_V1.0PortTypeSoap11</con:setting>
  </con:settings>
  <con:definitionCache type="TEXT" rootPart="http://10.246.89.106:27661/fundscheck/services/FNDSReservationService_V10?wsdl">
    <con:part>
      <con:url>http://10.246.89.106:27661/fundscheck/services/FNDSReservationService_V10?wsdl</con:url>
      <con:content><![CDATA[<wsdl:definitions targetNamespace="urn:fnd.payment.fs.evry.com:ws:fnd-reservation-ws-types:v1_0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:fnd.payment.fs.evry.com:ws:fnd-reservation-ws-types:v1_0" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:sch4="urn:fnd.payment.fs.evry.com:domain:fnd-reservation:v1_0" xmlns:sch3="urn:fnd.payment.fs.evry.com:domain:fnd-common:v1_0" xmlns:sch2="urn:fnd.payment.fs.evry.com:domain:fnd-common-iso:v1_0" xmlns:sch1="http://edb.com/ws/WSCommon_v22" xmlns:sch0="urn:fnd.payment.fs.evry.com:ws:fnd-reservation-ws-types:v1_0">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:fnd.payment.fs.evry.com:ws:fnd-reservation-ws-types:v1_0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:reservation="urn:fnd.payment.fs.evry.com:domain:fnd-reservation:v1_0" xmlns:common="urn:fnd.payment.fs.evry.com:domain:fnd-common:v1_0">
      <xs:annotation>
        <xs:documentation>Reservation specific operations for FC systems.
			Response status codes:
			0 = OK
			69 = User not authorized
			6031 = Organization Id not supported
			6034 = Account does not exist
			6036 = Account is closed
			6038 = Invalid input items
			6039 = {0}Transaction amount currency should be same as Account Currency
			6040 = {0}Account is blocked, with the status {1}
			6041 = Not enough funds, available funds are {0,number,#.#####} {1}
			6042 = Reservation not found for the account.
			6043 = CAAI already exists
			6048 = Account number must be of {0} digits for {1} country code
			6053 = {0} reservations are not processed in {1} minutes
			6056 = Reservation with 0 amount is not possible
			6059 = Description is missing
			6060 = Reconciliation rule present and reconciliation value missing
			6061 = Send to Cash pool failed
			6062 = Send to Rule Machine failed
			6063 = Reservation already exists
			6064 = Transaction on cash pool account is legal only on operational account
			6065 = Old and new CP hierarchy are different
			6066 = Transaction on cash pool counter account is legal only on operational account
			6069 = CAAI shall be numeric and maximum 6 digits are allowed for {0}transaction
			6067 = One of the non OPA cashpool {0}account is either closed or blocked
			6068 = Currency exchange is not possible for {0} currency due to unavailability of exchange rate
			6072 = Reconciliation value of Rule "RSID" should be of length 39
			6075 = Not enough funds, available funds are {0,number,#.#####} {1} for {2}
			6086 = Ledger {0} not found for the account {1}
			6088 = Double reservation is a duplicate of an earlier double reservation
			6089 = Debit and Credit account cannot be equal
			6090 = CdtDbtInd should always be DBIT in the input request
			6154 = Reservation rejected as an alarm exist for the cheque number {0}</xs:documentation>
      </xs:annotation>
      <xs:import namespace="urn:fnd.payment.fs.evry.com:domain:fnd-reservation:v1_0"/>
      <xs:import namespace="urn:fnd.payment.fs.evry.com:domain:fnd-common:v1_0"/>
      <xs:element name="doubleReservationCreateRequest" type="tns:doubleReservationCreateRequest">
        <xs:annotation>
          <xs:documentation>Creates a reservation on an existing and valid account if coverage. It is possible to force coverage when appropriate. The service returns service responses and available balance.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="reservationCreateRequest" type="tns:reservationCreateRequest">
        <xs:annotation>
          <xs:documentation>Creates a reservation on an existing and valid account if coverage. It is possible to force coverage when appropriate. The service returns service responses and available balance.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="doubleReservationCreateResponse" type="tns:doubleReservationResponse"/>
      <xs:element name="doubleReservationCreateFault" type="common:responseStateCodedFault"/>
      <xs:element name="reservationCreateResponse" type="tns:reservationResponse"/>
      <xs:element name="reservationCreateFault" type="common:responseStateCodedFault"/>
      <xs:element name="reservationUpdateRequest" type="tns:reservationUpdateRequest">
        <xs:annotation>
          <xs:documentation>Used to update an existing reservation with new amount, short message or expiry date. All original information should be present.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="reservationUpdateResponse" type="tns:reservationUpdateResponse"/>
      <xs:element name="reservationUpdateFault" type="common:responseStateCodedFault"/>
      <xs:element name="doubleReservationDeleteRequest" type="tns:doubleReservationDeleteRequest">
        <xs:annotation>
          <xs:documentation>Used to delete an existing double reservation.The service returns service responses and available balance of pre and post states.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="reservationDeleteRequest" type="tns:reservationDeleteRequest">
        <xs:annotation>
          <xs:documentation>Used to delete an existing reservation. A valid reconciliation Id must be present. I.e. Reservation Id.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="doubleReservationDeleteResponse" type="tns:doubleReservationDeleteResponse"/>
      <xs:element name="doubleReservationDeleteFault" type="common:responseStateCodedFault"/>
      <xs:element name="reservationDeleteResponse" type="tns:reservationDeleteResponse"/>
      <xs:element name="reservationDeleteFault" type="common:responseStateCodedFault"/>
      <xs:complexType name="reservationCreateRequest">
        <xs:annotation>
          <xs:documentation>Create reservation</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="GrpHdr" type="common:GroupHeaderV01">
            <xs:annotation>
              <xs:documentation>Group of information that provides correct processing of an online transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Resv" type="reservation:ReservationCreateType">
            <xs:annotation>
              <xs:documentation>Group of information for a reservation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="doubleReservationCreateRequest">
        <xs:annotation>
          <xs:documentation>Create reservation</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="GrpHdr" type="common:GroupHeaderV01">
            <xs:annotation>
              <xs:documentation>Group of information that provides correct processing of an online transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Resv" type="reservation:DoubleReservationType">
            <xs:annotation>
              <xs:documentation>Group of information for a reservation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reservationUpdateRequest">
        <xs:annotation>
          <xs:documentation>An update is used to change an existing reservation. Change amount, purpose, value date and/or expiry date.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="GrpHdr" type="common:GroupHeaderV01">
            <xs:annotation>
              <xs:documentation>Group of information that provides a correct processing of an online transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Resv" type="reservation:ReservationUpdateType">
            <xs:annotation>
              <xs:documentation>Information to update a reservation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="doubleReservationDeleteRequest">
        <xs:annotation>
          <xs:documentation>Delete double reservation</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="GrpHdr" type="common:GroupHeaderV01">
            <xs:annotation>
              <xs:documentation>Group of information that provides correct processing of an online transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Resv" type="reservation:DoubleReservationType">
            <xs:annotation>
              <xs:documentation>Group of information for a reservation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="reservationDeleteRequest">
        <xs:annotation/>
        <xs:sequence>
          <xs:element name="GrpHdr" type="common:GroupHeaderV01">
            <xs:annotation>
              <xs:documentation>Group of information that provides a correct processing of an online transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Resv" type="reservation:ReservationDeleteType">
            <xs:annotation>
              <xs:documentation>Information to delete a reservation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="doubleReservationDeleteResponse">
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ResvRsp" type="reservation:DoubleReservationDeleteResponseType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="reservationDeleteResponse">
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ResvRsp" type="reservation:ReservationDeleteResponseType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="reservationUpdateResponse">
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ResvRsp" type="reservation:ReservationUpdateResponseType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="reservationResponse">
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ResvRsp" type="reservation:ReservationResponseType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="doubleReservationResponse">
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ResvRsp" type="reservation:DoubleReservationResponseType"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://edb.com/ws/WSCommon_v22" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://edb.com/ws/WSCommon_v22">
      <xsd:complexType name="ClientContextType">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the person who initiated the action This could either be the customer itself in a netbank) or an employee</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="credentials" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Authorization data. This is typically a security Object retriewed from a logon, but can also be a plain password.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="channel" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Indicated what type of application that initiated the request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="orgid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The OrganizationalId - will in a banking context be Financial Institution / Konsernnr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="orgunit" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The Organizational unit will in a banking context be Branch / Registernr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="customerid" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Id of the customer on which the operation is requested, may be the same as userid, but may well be different</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="locale" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Locale in a java syntax e.g "en_EN". May be used if application supports localized response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ip" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The ip adress of the client</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="itemType">
            <xsd:annotation>
              <xsd:documentation>Optionnal extention items - Add key/value pairs for application specific extentions</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="itemType">
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="EDBHeaderType">
        <xsd:sequence>
          <xsd:element name="SourceApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the source that initiated the message. Used to separate different service consumers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="DestinationApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the destination of the message. Used to separate different service providers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Function" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the service to be called.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Version" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Service version "X.Y.Z" according to this standard:
                X = Main release (major changes, not necessarily backwards compatible)
                Y = Minor release (backwards compatible, new functionality)
                Z = Bugfix (backwards compatible, error correction only)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ClientContext" type="ClientContextType">
            <xsd:annotation>
              <xsd:documentation>Elements for identifying client context information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="AutHeader" type="EDBHeaderType"/>
      <xsd:complexType name="ResponseStateType">
        <xsd:sequence>
          <xsd:element name="ErrorCode" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Numeric error code reported for this error.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Severity" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Response Status Severity Code</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ComponentId" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Unique code identifying the component returning the service response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Message" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Message describing the error. Default is english language. Optionally localized according to the locale parameter in the service request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="LogSequence" nillable="true" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>Optional key generated to be used for log correlation purposes.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="errorItem" nillable="true" type="errorItemType">
            <xsd:annotation>
              <xsd:documentation>Optional extention items - key/value pairs are used for extented error inforamtion.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="errorItemType">
        <xsd:annotation/>
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
    </xsd:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:fnd.payment.fs.evry.com:domain:fnd-common-iso:v1_0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:iso="urn:fnd.payment.fs.evry.com:domain:fnd-common-iso:v1_0" xmlns:common="urn:fnd.payment.fs.evry.com:domain:fnd-common:v1_0">
      <xs:annotation>
        <xs:documentation>Common ISO20022 type definitions.</xs:documentation>
      </xs:annotation>
      <xs:import namespace="urn:fnd.payment.fs.evry.com:domain:fnd-common:v1_0"/>
      <xs:complexType name="AccountSchemeName1Choice">
        <xs:choice>
          <xs:element name="Cd" type="iso:ExternalAccountIdentification1Code"/>
          <xs:element name="Prtry" type="iso:Max35Text"/>
        </xs:choice>
      </xs:complexType>
      <xs:complexType name="AccountIdentification4Choice">
        <xs:choice>
          <xs:element name="IBAN" type="iso:IBAN2007Identifier"/>
          <xs:element name="Othr" type="iso:GenericAccountIdentification1"/>
        </xs:choice>
      </xs:complexType>
      <xs:complexType name="ActiveOrHistoricCurrencyAndAmount">
        <xs:simpleContent>
          <xs:extension base="iso:ActiveOrHistoricCurrencyAndAmount_SimpleType">
            <xs:attribute name="Ccy" type="iso:ActiveOrHistoricCurrencyCode" use="required"/>
          </xs:extension>
        </xs:simpleContent>
      </xs:complexType>
      <xs:complexType name="BranchAndFinancialInstitutionIdentification5">
        <xs:sequence>
          <xs:element name="FinInstnId" type="iso:FinancialInstitutionIdentification8"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReservationOrConfirmationId">
        <xs:annotation>
          <xs:documentation>Reservation or confirmation identification details.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="System" type="iso:Fixed3Text">
            <xs:annotation>
              <xs:documentation>3 letter system name, depicting which system generated the UUID (FND or TRG)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Id" type="iso:Max36Text">
            <xs:annotation>
              <xs:documentation>Universally unique identifier (UUID)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CashAccountType2Choice">
        <xs:choice>
          <xs:element name="Cd" type="iso:ExternalCashAccountType1Code"/>
          <xs:element name="Prtry" type="iso:Max35Text"/>
        </xs:choice>
      </xs:complexType>
      <xs:complexType name="FinancialIdentificationSchemeName1Choice">
        <xs:choice>
          <xs:element name="Cd" type="iso:ExternalFinancialInstitutionIdentification1Code"/>
          <xs:element name="Prtry" type="iso:Max35Text"/>
        </xs:choice>
      </xs:complexType>
      <xs:complexType name="FinancialInstitutionIdentification8">
        <xs:sequence>
          <xs:element minOccurs="0" name="BICFI" type="iso:BICFIIdentifier"/>
          <xs:element name="Othr" type="iso:GenericFinancialIdentification1"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GenericAccountIdentification1">
        <xs:sequence>
          <xs:element name="Id" type="iso:Max34Text">
            <xs:annotation>
              <xs:documentation>Domestic account number (BBAN).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="SchmeNm" type="iso:AccountSchemeName1Choice"/>
          <xs:element minOccurs="0" name="Issr" type="iso:Max35Text"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GenericFinancialIdentification1">
        <xs:sequence>
          <xs:element name="Id" type="iso:Max35Text"/>
          <xs:element minOccurs="0" name="SchmeNm" type="iso:FinancialIdentificationSchemeName1Choice"/>
          <xs:element minOccurs="0" name="Issr" type="iso:Max35Text"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BankTransactionCodeStructure4">
        <xs:sequence>
          <xs:element name="Domn" type="iso:BankTransactionCodeStructure5">
            <xs:annotation>
              <xs:documentation>Examples of Domains: Payments, Cash Management, Loans and Deposits etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Prtry" type="iso:ProprietaryBankTransactionCodeStructure1">
            <xs:annotation>
              <xs:documentation>The proprietary transaction code is an EVRY internal supplementary code and may be used to further specify internal variations of the domain model.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BankTransactionCodeStructure5">
        <xs:sequence>
          <xs:element name="Cd" type="iso:ExternalBankTransactionDomain1Code">
            <xs:annotation>
              <xs:documentation>The Cd is a 4 letter combination, ie.: PMNT</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Fmly" type="iso:BankTransactionCodeStructure6">
            <xs:annotation>
              <xs:documentation>Examples of Family: Customer/Merchant Card Transactions, Counter Transactions, Issued Credits etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BankTransactionCodeStructure6">
        <xs:sequence>
          <xs:element name="Cd" type="iso:ExternalBankTransactionFamily1Code"/>
          <xs:element minOccurs="0" name="SubFmlyCd" type="iso:ExternalBankTransactionSubFamily1Code">
            <xs:annotation>
              <xs:documentation>Examples of SubFamily: Cash Deposits, Point-Of-Sale, Corporate Own AccountTransfer etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CurrencyExchange5">
        <xs:sequence>
          <xs:element name="SrcCcy" type="iso:ActiveOrHistoricCurrencyCode"/>
          <xs:element minOccurs="0" name="TrgtCcy" type="iso:ActiveOrHistoricCurrencyCode"/>
          <xs:element minOccurs="0" name="UnitCcy" type="iso:ActiveOrHistoricCurrencyCode"/>
          <xs:element name="XchgRate" type="iso:BaseOneRate"/>
          <xs:element minOccurs="0" name="CtrctId" type="iso:Max35Text"/>
          <xs:element minOccurs="0" name="QtnDt" type="iso:ISODateTime"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ProprietaryBankTransactionCodeStructure1">
        <xs:sequence>
          <xs:element name="Cd" type="iso:Max35Text"/>
          <xs:element minOccurs="0" name="Issr" type="iso:Max35Text">
            <xs:annotation>
              <xs:documentation>Ie.: EVRY</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PurposeType">
        <xs:sequence>
          <xs:element minOccurs="0" name="Cd" type="iso:ExternalPurpose1Code">
            <xs:annotation>
              <xs:documentation>ISO20022 codeset specifies the low-level purpose of the transaction based on a set of pre-defined values. Not to be used in TG.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Prtry" type="iso:Max150Text">
            <xs:annotation>
              <xs:documentation>Short message used for the beneficiary's statement of account.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AmountAndCurrencyExchangeDetails3">
        <xs:sequence>
          <xs:element name="Amt" type="iso:ActiveOrHistoricCurrencyAndAmount"/>
          <xs:element minOccurs="0" name="CcyXchg" type="iso:CurrencyExchange5"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AmountAndCurrencyExchangeDetails4">
        <xs:sequence>
          <xs:element name="Tp" type="iso:Max35Text"/>
          <xs:element name="Amt" type="iso:ActiveOrHistoricCurrencyAndAmount"/>
          <xs:element minOccurs="0" name="CcyXchg" type="iso:CurrencyExchange5"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionAccountDetailsV01">
        <xs:sequence>
          <xs:element name="Id" type="iso:AccountIdentification4Choice"/>
          <xs:element minOccurs="0" name="Tp" type="iso:CashAccountType2Choice"/>
          <xs:element minOccurs="0" name="Ccy" type="iso:ActiveOrHistoricCurrencyCode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DateAndTimeV01">
        <xs:annotation>
          <xs:documentation>Group of different date types included in the transaction.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="ValDt" type="iso:ISODate">
            <xs:annotation>
              <xs:documentation>The assigned value date for this transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpDt" type="iso:ISODate">
            <xs:annotation>
              <xs:documentation>Expiry date.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionTypeInfoV01">
        <xs:annotation>
          <xs:documentation>The transaction type info contains information categorizing different transaction types.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="BkTxCd" type="iso:BankTransactionCodeStructure4">
            <xs:annotation>
              <xs:documentation>Bank Transaction Code. The Domain model is divided into three levels. Ie.: Domain=PMNT (Payments), Family=CCRD (Customer Card Transactions), SubFamily=POSD (Point-Of-Sale Debit card). See all at: http://www.iso20022.org/external_code_list.page</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PeriodNumber">
        <xs:annotation>
          <xs:documentation>Information about the ledgers batch cycle.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="LdgDt" type="iso:ISODate">
            <xs:annotation>
              <xs:documentation>Booking date in Ledger</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="LdgSyncId">
            <xs:annotation>
              <xs:documentation>Sequence number within Ledger date.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="iso:Max2Num">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="99"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="LedgerInfoV01">
        <xs:annotation>
          <xs:documentation>Information about the ledgers batch cycle.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="LdgId" type="iso:Max35Text">
            <xs:annotation>
              <xs:documentation>An identification of a ledger system. Ie.: CORE</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LdgDt" type="iso:ISODate">
            <xs:annotation>
              <xs:documentation>Bookung date in Ledger</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="LdgSyncId">
            <xs:annotation>
              <xs:documentation>Sequence number within Ledger date.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="iso:Max2Num">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="99"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="Desc" type="iso:Max50Text">
            <xs:annotation>
              <xs:documentation>Short message used for ledger</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReconciliationIdV01">
        <xs:annotation>
          <xs:documentation>External References makes it possible to transfer references not specified by the format.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="RconItmKey" type="iso:ReconciliationItem1Code">
            <xs:annotation>
              <xs:documentation>This item holds information about how to reconcile a reservation. i.e.: RSID=ReservationId or CAAI=Card authorization Id</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RconItmVal" type="iso:Max39Text">
            <xs:annotation>
              <xs:documentation>Item used for reconciliation if it is not possible to send reservation id in the booking.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="RconItemsV01">
        <xs:annotation>
          <xs:documentation>External References makes it possible to transfer references not specified by the format.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="RconRule" type="iso:ReconciliationItem1Code">
            <xs:annotation>
              <xs:documentation>This item holds information about how to reconcile a reservation. i.e.: RSID=ReservationId or CAAI=Card authorization Id</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RconRef" type="iso:Max39Text">
            <xs:annotation>
              <xs:documentation>Item used for reconciliation if it is not possible to send reservation id in the booking.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RconGenRef" type="iso:RconGenRefVal">
            <xs:annotation>
              <xs:documentation>Use this item to say that Fundscheck shall generate the vallue in item RconRef.  Valid values in current version: CAAI generates 6 digits.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="ActiveOrHistoricCurrencyAndAmount_SimpleType">
        <xs:restriction base="xs:decimal">
          <xs:fractionDigits value="5"/>
          <xs:totalDigits value="18"/>
          <xs:minInclusive value="0"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ActiveOrHistoricCurrencyCode">
        <xs:restriction base="xs:string">
          <xs:pattern value="[A-Z]{3,3}"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Fixed3Text">
        <xs:restriction base="xs:string">
          <xs:pattern value="[A-Z]{3,3}"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BaseOneRate">
        <xs:restriction base="xs:decimal">
          <xs:fractionDigits value="10"/>
          <xs:totalDigits value="11"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="BICFIIdentifier">
        <xs:restriction base="xs:string">
          <xs:pattern value="[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExternalAccountIdentification1Code">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="4"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExternalBankTransactionDomain1Code">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="4"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExternalBankTransactionFamily1Code">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="4"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExternalBankTransactionSubFamily1Code">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="4"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExternalCashAccountType1Code">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="4"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExternalFinancialInstitutionIdentification1Code">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="4"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ExternalPurpose1Code">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="4"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="IBAN2007Identifier">
        <xs:restriction base="xs:string">
          <xs:pattern value="[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max15Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="15"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ISODateTime">
        <xs:annotation>
          <xs:documentation>Specify date and time value. Supports ISO_LOCAL_DATE_TIME, ISO_OFFSET_DATE_TIME formats. 
			Examples: 2015-12-12T10:15:30+01:00, 2015-12-12T10:15:30, 2015-12-12T10:15:30+01:00Z</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:dateTime"/>
      </xs:simpleType>
      <xs:simpleType name="Max34Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="34"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max35Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="35"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ISODate">
        <xs:restriction base="xs:date"/>
      </xs:simpleType>
      <xs:simpleType name="ReconciliationItem1Code">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="4"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CreditDebitIndicator1Code">
        <xs:annotation>
          <xs:documentation>Indicates an amount's sign</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="CRDT"/>
          <xs:enumeration value="DBIT"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="AccountResponseStateV01">
        <xs:annotation>
          <xs:documentation>Status of the account OK(Shall display when Account
				exists), NF(Shall display when Account not found) and UE(Unspecified
				error shall display if input request fails with any error other than
				account closed and account not found)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="OK"/>
          <xs:enumeration value="NF"/>
          <xs:enumeration value="UE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="TrueOrFalseIndicator">
        <xs:restriction base="xs:boolean"/>
      </xs:simpleType>
      <xs:simpleType name="Max36Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="36"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Fixed36Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="36"/>
          <xs:maxLength value="36"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max39Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="39"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max50Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="50"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max70Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="70"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max250Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="250"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max128Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="128"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max140Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="140"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max150Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="150"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max255Text">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="255"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ISOCountry">
        <xs:restriction base="xs:string">
          <xs:pattern value="[A-Z]{2,2}"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="CoverageControlType1Code">
        <xs:restriction base="xs:string">
          <xs:minLength value="1"/>
          <xs:maxLength value="4"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="ConfId">
        <xs:restriction base="iso:Max35Text"/>
      </xs:simpleType>
      <xs:simpleType name="Max2Num">
        <xs:restriction base="xs:integer">
          <xs:minInclusive value="0"/>
          <xs:maxInclusive value="99"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max3Num">
        <xs:restriction base="xs:integer">
          <xs:minInclusive value="1"/>
          <xs:maxInclusive value="999"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max18Num">
        <xs:restriction base="xs:integer">
          <xs:pattern value="[0-9]{1,18}"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="Max19Num">
        <xs:restriction base="xs:integer">
          <xs:pattern value="[0-9]{1,19}"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="RconGenRefVal">
        <xs:restriction base="xs:string">
          <xs:length value="4"/>
          <xs:enumeration value="CAAI"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:fnd.payment.fs.evry.com:domain:fnd-common:v1_0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:iso="urn:fnd.payment.fs.evry.com:domain:fnd-common-iso:v1_0" xmlns:common="urn:fnd.payment.fs.evry.com:domain:fnd-common:v1_0" xmlns:autheader="http://edb.com/ws/WSCommon_v22">
      <xs:annotation>
        <xs:documentation>Common type definitions.</xs:documentation>
      </xs:annotation>
      <xs:import namespace="http://edb.com/ws/WSCommon_v22"/>
      <xs:import namespace="urn:fnd.payment.fs.evry.com:domain:fnd-common-iso:v1_0"/>
      <xs:group name="AuditInfo">
        <xs:annotation/>
        <xs:sequence>
          <xs:element name="CrtdBy" type="iso:Max35Text">
            <xs:annotation>
              <xs:documentation>Created user information</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ModfBy" type="iso:Max35Text">
            <xs:annotation>
              <xs:documentation>Modified user information</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="CrtdTm" type="iso:ISODateTime">
            <xs:annotation>
              <xs:documentation>Time of creation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="ModfTm" type="iso:ISODateTime">
            <xs:annotation>
              <xs:documentation>Last time that an account is modified. Time with date.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:group>
      <xs:complexType name="GroupHeaderV01">
        <xs:annotation>
          <xs:documentation>The online header is used for possible duplicate controls and to hold other technical references.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="MsgId" type="common:MessageInfoV01">
            <xs:annotation>
              <xs:documentation>A unique identification from sender.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="CreDtTm" type="iso:ISODateTime">
            <xs:annotation>
              <xs:documentation>Created time is a timestamp from sender.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PssblDpl" type="iso:TrueOrFalseIndicator">
            <xs:annotation>
              <xs:documentation>Flag used to indicate that this request might be a duplicate.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Countrycode" type="iso:ISOCountry">
            <xs:annotation>
              <xs:documentation>Gives the country code</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="MessageInfoV01">
        <xs:annotation>
          <xs:documentation>Information about the received message (file).</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="BSId" type="iso:Max35Text">
            <xs:annotation>
              <xs:documentation>An identification of a senders business system. Ie.: NETS</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="MsgTp" type="iso:Max35Text">
            <xs:annotation>
              <xs:documentation>The message type of this file. Ie.: FINPAY</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="UId" type="iso:Max36Text">
            <xs:annotation>
              <xs:documentation>A unique identification of this message Ie.: 01 (file delivery number) in batch or de305d54-75b4-431b-adb2-eb6b9e546013 (UUID) in online.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="pageLengthType">
        <xs:annotation>
          <xs:documentation>An type capable of describing a segments length or wished length</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:int">
          <xs:minInclusive value="0"/>
          <xs:maxInclusive value="500"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="pageIndexType">
        <xs:annotation>
          <xs:documentation>Index of segment start</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:int">
          <xs:minInclusive value="0"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="pagingInputElementType">
        <xs:annotation>
          <xs:documentation>Describes a paging segment</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="startIndex" type="common:pageIndexType"/>
          <xs:element name="pageSize" type="common:pageLengthType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pagingOutputElementType">
        <xs:annotation>
          <xs:documentation>Describes the returned segment</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="numberOfElements" type="common:pageLengthType">
            <xs:annotation>
              <xs:documentation>Number of elements returned</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="moreElementsAvailable" type="iso:TrueOrFalseIndicator">
            <xs:annotation>
              <xs:documentation>Boolean variable indicating whether there are more occurrences available.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="pageResultType">
        <xs:annotation>
          <xs:documentation>Wraps paging and data elements</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="pagingOutput" type="common:pagingOutputElementType"/>
          <xs:element name="elements">
            <xs:complexType>
              <xs:sequence>
                <xs:any namespace="##other"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="responseStateCodedFault">
        <xs:annotation>
          <xs:documentation>Generic SoapFault type</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="ResponseState" type="autheader:ResponseStateType">
            <xs:annotation>
              <xs:documentation>Contains the distinct error-code and additional information on the actual error.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="LogId" type="iso:Max128Text">
            <xs:annotation>
              <xs:documentation>Represents the log identification mapped to correlation id generated by business event log. For list and read operations the value of this field will be "0"</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType abstract="true" name="baseResponseType">
        <xs:annotation>
          <xs:documentation>Base response type which all services should extend off</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="ResponseState" type="autheader:ResponseStateType">
            <xs:annotation>
              <xs:documentation>The response state which describes the outcome of calling the service.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="LogId" type="iso:Max128Text">
            <xs:annotation>
              <xs:documentation>Represents the log identification mapped to correlation id generated by business event log. For list and read operations the value of this field will be "0"</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AuditInfoType">
        <xs:annotation/>
        <xs:sequence>
          <xs:group ref="common:AuditInfo"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="BalanceAndCurrencyDetailsV01">
        <xs:sequence>
          <xs:element name="Amt" type="iso:ActiveOrHistoricCurrencyAndAmount"/>
          <xs:element name="CdtDbtInd" type="iso:CreditDebitIndicator1Code">
            <xs:annotation>
              <xs:documentation>Value will be CRDT i amount is zero or above, DBIT if amount is negative.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TransactionBalanceDetailsV01">
        <xs:sequence>
          <xs:element name="AvlbBalBfrTx" type="common:BalanceAndCurrencyDetailsV01">
            <xs:annotation>
              <xs:documentation>Available balance before the transaction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="AvlbBalAftTx" type="common:BalanceAndCurrencyDetailsV01">
            <xs:annotation>
              <xs:documentation>Available balance after the transaction. For confirmations this might be equal the before balance because a reservation might have been reconciliated.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="AmountDetailsV01">
        <xs:sequence>
          <xs:element name="TxAmt" type="iso:AmountAndCurrencyExchangeDetails3">
            <xs:annotation>
              <xs:documentation>Transaction amount in the accounts currency. This is the amount to be posted on the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="CdtDbtInd" type="iso:CreditDebitIndicator1Code">
            <xs:annotation>
              <xs:documentation>Value will be CRDT if amount is zero or above, DBIT if amount is negative.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="TxnCntrValAmountDetailsV01">
        <xs:sequence>
          <xs:element name="TxAmt" type="iso:AmountAndCurrencyExchangeDetails3">
            <xs:annotation>
              <xs:documentation>Transaction amount in the accounts currency. This is the amount to be posted on the account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CntrValAmt" type="iso:AmountAndCurrencyExchangeDetails3">
            <xs:annotation>
              <xs:documentation>Counter Value Amount. This is the amount used to send
						to cashpool. This element should not be passed for Double reservation
						delete request, it is added in double reservation delete request to
						avoid duplicate</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="CdtDbtInd" type="iso:CreditDebitIndicator1Code">
            <xs:annotation>
              <xs:documentation>Value will be CRDT if amount is zero or above, DBIT if amount is negative.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceDetailsV01">
        <xs:sequence>
          <xs:element minOccurs="0" name="PssblDpl" type="iso:TrueOrFalseIndicator">
            <xs:annotation>
              <xs:documentation>Flag used to indicate that this request might be a duplicate.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="SimulateReservationCode">
        <xs:annotation>
          <xs:documentation>Indicates types of Simulate Reservation</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="A"/>
          <xs:enumeration value="B"/>
          <xs:enumeration value="C"/>
          <xs:enumeration value="N"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="errorItemType">
        <xs:annotation>
          <xs:documentation>Key/value pair, error Code and error message</xs:documentation>
        </xs:annotation>
        <xs:attribute name="errorCode" type="xs:string" use="required"/>
        <xs:attribute name="errorMessage" type="xs:string" use="required"/>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:fnd.payment.fs.evry.com:domain:fnd-reservation:v1_0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:reservation="urn:fnd.payment.fs.evry.com:domain:fnd-reservation:v1_0" xmlns:iso="urn:fnd.payment.fs.evry.com:domain:fnd-common-iso:v1_0" xmlns:common="urn:fnd.payment.fs.evry.com:domain:fnd-common:v1_0">
      <xs:import namespace="urn:fnd.payment.fs.evry.com:domain:fnd-common:v1_0"/>
      <xs:import namespace="urn:fnd.payment.fs.evry.com:domain:fnd-common-iso:v1_0"/>
      <xs:group name="DoubleResvType">
        <xs:annotation/>
        <xs:sequence>
          <xs:element minOccurs="0" name="SvcDtls" type="reservation:ServiceDetailsV01">
            <xs:annotation>
              <xs:documentation>Service details used to set specific service attributes</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TxTpInfCrdt" type="iso:TransactionTypeInfoV01">
            <xs:annotation>
              <xs:documentation>Group categorizing the transaction type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TxTpInfDbit" type="iso:TransactionTypeInfoV01">
            <xs:annotation>
              <xs:documentation>Group categorizing the transaction type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Agt" type="iso:BranchAndFinancialInstitutionIdentification5">
            <xs:annotation>
              <xs:documentation>Identifies the bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="AcctCrdt" type="iso:TransactionAccountDetailsV01">
            <xs:annotation>
              <xs:documentation>Credit account number.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="AcctDbit" type="iso:TransactionAccountDetailsV01">
            <xs:annotation>
              <xs:documentation>Debit account number.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="AmtDtls" type="common:TxnCntrValAmountDetailsV01">
            <xs:annotation>
              <xs:documentation>Amount details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="PurpCrdt" type="iso:PurposeType">
            <xs:annotation>
              <xs:documentation>Prtry is used to show a short message describing
						the purpose of the credit part of the reservation. It is
						recommended that this message equals the message that will be sent
						in the corresponding confirmation (booking).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="PurpDbit" type="iso:PurposeType">
            <xs:annotation>
              <xs:documentation>Prtry is used to show a short message describing
						the purpose of the debit part of the the reservation. It is
						recommended that this message equals the message that will be sent
						in the corresponding confirmation (booking).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DtTmCrdt" type="iso:DateAndTimeV01">
            <xs:annotation>
              <xs:documentation>Group of dates set on the reservation related to
						the credit part of the reservation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DtTmDbit" type="iso:DateAndTimeV01">
            <xs:annotation>
              <xs:documentation>Group of dates set on the reservation related to
						the debit part of the reservation</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:group>
      <xs:group name="ReservationType">
        <xs:annotation/>
        <xs:sequence>
          <xs:element minOccurs="0" name="SvcDtls" type="reservation:ServiceDetailsV01">
            <xs:annotation>
              <xs:documentation>Service details used to set specific service attributes</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TxTpInf" type="iso:TransactionTypeInfoV01">
            <xs:annotation>
              <xs:documentation>Group categorizing the transaction type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="InstgAgt" type="iso:BranchAndFinancialInstitutionIdentification5">
            <xs:annotation>
              <xs:documentation>Identifies the instructing bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Agt" type="iso:BranchAndFinancialInstitutionIdentification5">
            <xs:annotation>
              <xs:documentation>Identifies the bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Acct" type="iso:TransactionAccountDetailsV01">
            <xs:annotation>
              <xs:documentation>Account number.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="AmtDtls" type="common:TxnCntrValAmountDetailsV01">
            <xs:annotation>
              <xs:documentation>Amount details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Purp" type="iso:PurposeType">
            <xs:annotation>
              <xs:documentation>Prtry is used to show a short message describing
						the purpose of the reservation. It is recommended that this
						message equals the message that will be sent in the corresponding
						confirmation (booking).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="DtTm" type="iso:DateAndTimeV01">
            <xs:annotation>
              <xs:documentation>Group of dates set on the reservation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CounterAcctDtls" type="reservation:CounterAccountDetailsV01">
            <xs:annotation>
              <xs:documentation>Counter account details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ChqNbr" type="iso:Max36Text">
            <xs:annotation>
              <xs:documentation>Cheque Number used to check if any alarms present</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:group>
      <xs:complexType name="DoubleReservationType">
        <xs:annotation/>
        <xs:sequence>
          <xs:element minOccurs="0" name="PwhId" type="iso:Max35Text">
            <xs:annotation>
              <xs:documentation>Reference to information stored in the Payment WareHouse database.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RconIdCrdt" type="iso:RconItemsV01">
            <xs:annotation>
              <xs:documentation>Item used for reconciliation of a confirmation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RconIdDbit" type="iso:RconItemsV01">
            <xs:annotation>
              <xs:documentation>Item used for reconciliation of a confirmation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:group ref="reservation:DoubleResvType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReservationCreateType">
        <xs:annotation/>
        <xs:sequence>
          <xs:element minOccurs="0" name="PwhId" type="iso:Max35Text">
            <xs:annotation>
              <xs:documentation>Reference to information stored in the Payment
						WareHouse database.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RconId" type="iso:RconItemsV01">
            <xs:annotation>
              <xs:documentation>Item used for reconciliation of a confirmation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:group ref="reservation:ReservationType"/>
          <xs:element minOccurs="0" name="Simulate" type="common:SimulateReservationCode">
            <xs:annotation>
              <xs:documentation>Simulate Reservation concept simulates the reservation by
						performing all the requested checks/validations in reservation process,
						but ignores to update available balance and to insert the reservation
						in database. A indicates only Account Control validation, C indicates only Coverage Control, 
						B indicates both Account Control and Coverage Control validation, 
						N indicates No simulation will be done</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReservationUpdateType">
        <xs:annotation/>
        <xs:sequence>
          <xs:element name="ResvUpdateQualification">
            <xs:annotation>
              <xs:documentation>Contains reservation qualification items to identify a reservation.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Acct" type="iso:AccountIdentification4Choice">
                  <xs:annotation>
                    <xs:documentation>Account number</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="Agt" type="iso:BranchAndFinancialInstitutionIdentification5">
                  <xs:annotation>
                    <xs:documentation>Identifies the bank</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element name="ResvQual" type="reservation:ReservationQualificationType"/>
                <xs:element name="SvcDtls" type="reservation:ServiceDetailsV01"/>
                <xs:element minOccurs="0" name="CounterAcctDtls" type="reservation:CounterAccountDetailsV01">
                  <xs:annotation>
                    <xs:documentation>Counter account number.When transfer Dr/Cr
									happens with in same CP hierarchy, To account is Counter
									account number.(That is within same CP hierarchy which belongs
									to same CP hierarchy in this case Dr/Cr shall happen with in the
									same CP hierarchy ).This acts as a update qualification for
									updating CP reservation in which it validates whether
									transaction on cash pool counter account is legal only on operational account</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="ResvUpdateItems">
            <xs:annotation>
              <xs:documentation>Contains ireservation items that can be updated</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" name="ExpDt" type="iso:ISODate"/>
                <xs:element minOccurs="0" name="Prtry" type="iso:Max150Text">
                  <xs:annotation>
                    <xs:documentation>Short message used for the beneficiary's statement of account.</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element minOccurs="0" name="AmtDtls" type="common:TxnCntrValAmountDetailsV01">
                  <xs:annotation>
                    <xs:documentation>New amount on the reservation</xs:documentation>
                  </xs:annotation>
                </xs:element>
                <xs:element default="false" minOccurs="0" name="IsAddAmt" type="iso:TrueOrFalseIndicator">
                  <xs:annotation>
                    <xs:documentation>If True add an amount specified to already reserved amount</xs:documentation>
                  </xs:annotation>
                </xs:element>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReservationDeleteType">
        <xs:annotation/>
        <xs:sequence>
          <xs:element name="ResvQual" type="reservation:ReservationQualificationType"/>
          <xs:element minOccurs="0" name="InstgAgt" type="iso:BranchAndFinancialInstitutionIdentification5">
            <xs:annotation>
              <xs:documentation>Identifies the instructing bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Agt" type="iso:BranchAndFinancialInstitutionIdentification5">
            <xs:annotation>
              <xs:documentation>Identifies the bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Acct" type="iso:TransactionAccountDetailsV01">
            <xs:annotation>
              <xs:documentation>Account number.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DoubleReservationResponseType">
        <xs:annotation/>
        <xs:sequence>
          <xs:element name="RefIdCrdt" type="reservation:ReferenceResponseIdsV01">
            <xs:annotation>
              <xs:documentation>Group of reservation references related to credit
						part of transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RefIdDbit" type="reservation:ReferenceResponseIdsV01">
            <xs:annotation>
              <xs:documentation>Group of reservation references related to
						debitpart of transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="BlncDtlsCrdt" type="common:TransactionBalanceDetailsV01">
            <xs:annotation>
              <xs:documentation>Group of returned balances related to credit
						account in the transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="BlncDtlsDbit" type="common:TransactionBalanceDetailsV01">
            <xs:annotation>
              <xs:documentation>Group of returned balances related to debit
						account in the transaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpDtCrdt" type="iso:ISODate">
            <xs:annotation>
              <xs:documentation>Expiry date credit part of reservation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpDtDbit" type="iso:ISODate">
            <xs:annotation>
              <xs:documentation>Expiry date debit part of reservation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PartialPaymentResponse" type="reservation:PartialPaymentResponseType">
            <xs:annotation>
              <xs:documentation>When using Partial payment, this item contains
						actually posted amount and remaining amount if a partial payment
						occur.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReservationResponseType">
        <xs:annotation/>
        <xs:sequence>
          <xs:element name="RefId" type="reservation:ReferenceResponseIdsV01">
            <xs:annotation>
              <xs:documentation>Group of reservation references.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="BlncDtls" type="common:TransactionBalanceDetailsV01">
            <xs:annotation>
              <xs:documentation>Group of returned balances</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ExpDt" type="iso:ISODate"/>
          <xs:element minOccurs="0" name="PartialPaymentResponse" type="reservation:PartialPaymentResponseType">
            <xs:annotation>
              <xs:documentation>When using Partial payment, this item contains
						actually posted amount and remaining amount if a partial payment occur.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReservationUpdateResponseType">
        <xs:annotation/>
        <xs:sequence>
          <xs:element name="BlncDtls" type="common:TransactionBalanceDetailsV01">
            <xs:annotation>
              <xs:documentation>Group of returned balances</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="PartialPaymentResponse" type="reservation:PartialPaymentResponseType">
            <xs:annotation>
              <xs:documentation>When using Partial payment, this item contains
						actually posted amount and remaining amount if a partial payment occur.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="DoubleReservationDeleteResponseType">
        <xs:annotation/>
        <xs:sequence>
          <xs:element name="BlncDtlsDbit" type="common:TransactionBalanceDetailsV01">
            <xs:annotation>
              <xs:documentation>Group of returned balances</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="BlncDtlsCrdt" type="common:TransactionBalanceDetailsV01">
            <xs:annotation>
              <xs:documentation>Group of returned balances</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReservationDeleteResponseType">
        <xs:annotation/>
        <xs:sequence>
          <xs:element name="BlncDtls" type="common:TransactionBalanceDetailsV01">
            <xs:annotation>
              <xs:documentation>Group of returned balances</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReferenceResponseIdsV01">
        <xs:sequence>
          <xs:element name="ResId" type="iso:ReservationOrConfirmationId">
            <xs:annotation>
              <xs:documentation>A unique id generated in FC on all reservations.
						This id is returned in all response messages when a reservation is
						created. Normally this id follow the booking to TG so that the
						reservation can be reconciliated.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RconRef" type="iso:Max39Text"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ServiceDetailsV01">
        <xs:sequence>
          <xs:element minOccurs="0" name="CvrgCntrlTp" type="iso:CoverageControlType1Code">
            <xs:annotation>
              <xs:documentation>If special types of coverage control are required
						use this item. An example is special rules for gambling
						transactions (GMBL) or special rules for due date of loans (DDLN).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Frcd" type="iso:TrueOrFalseIndicator">
            <xs:annotation>
              <xs:documentation>Flag used to indicate that this request should be
						forced (i.e. omit coverage control).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="PartialPaymentResponseType">
        <xs:sequence>
          <xs:element name="PostedAmt" type="common:BalanceAndCurrencyDetailsV01">
            <xs:annotation>
              <xs:documentation>Actually posted amount</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RemainingAmt" type="common:BalanceAndCurrencyDetailsV01">
            <xs:annotation>
              <xs:documentation>Remaining amount</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="CounterAccountDetailsV01">
        <xs:sequence>
          <xs:element name="CounterAgt" type="iso:BranchAndFinancialInstitutionIdentification5">
            <xs:annotation>
              <xs:documentation>Identifies the counter bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="CounterAcct" type="iso:TransactionAccountDetailsV01">
            <xs:annotation>
              <xs:documentation>Counter account number.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ReservationQualificationType">
        <xs:annotation>
          <xs:documentation>Qualification of delete and update reservation,
				choice of a)reservation id b) reconciliation reference or c)delete
				by criteria.</xs:documentation>
        </xs:annotation>
        <xs:choice>
          <xs:element name="ResId" type="iso:ReservationOrConfirmationId">
            <xs:annotation>
              <xs:documentation>Reservation Id.System and Uuid of Reservation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RconRef" type="iso:Max39Text">
            <xs:annotation>
              <xs:documentation>Reconciliation reference.It carries either
						Reconciliation Reference value or Reconciliation Item value.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="Criteria" type="reservation:ReservationCriteriaType">
            <xs:annotation>
              <xs:documentation>Delete or Update by criteria</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:choice>
      </xs:complexType>
      <xs:complexType name="ReservationCriteriaType">
        <xs:annotation>
          <xs:documentation>Choice in the request reservation for Delete By Criteria or Update By Criteria.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="AmtDtls" type="common:AmountDetailsV01">
            <xs:annotation>
              <xs:documentation>Amount details.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="TxTpInf" type="iso:TransactionTypeInfoV01">
            <xs:annotation>
              <xs:documentation>Group categorizing the transaction type</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Desc" type="iso:Max150Text">
            <xs:annotation>
              <xs:documentation>A textual description of the transaction like
						Salary, name of a shop, name of receiver of a bill payment etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="RconId" type="iso:RconItemsV01">
            <xs:annotation>
              <xs:documentation>Item used for reconciliation of a confirmation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="reservationCreateResponse">
    <wsdl:part element="tns:reservationCreateResponse" name="reservationCreateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="doubleReservationDeleteResponse">
    <wsdl:part element="tns:doubleReservationDeleteResponse" name="doubleReservationDeleteResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reservationDeleteRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:reservationDeleteRequest" name="reservationDeleteRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reservationUpdateFault">
    <wsdl:part element="tns:reservationUpdateFault" name="reservationUpdateFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="doubleReservationDeleteFault">
    <wsdl:part element="tns:doubleReservationDeleteFault" name="doubleReservationDeleteFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="doubleReservationCreateFault">
    <wsdl:part element="tns:doubleReservationCreateFault" name="doubleReservationCreateFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="doubleReservationDeleteRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:doubleReservationDeleteRequest" name="doubleReservationDeleteRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reservationUpdateResponse">
    <wsdl:part element="tns:reservationUpdateResponse" name="reservationUpdateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reservationDeleteFault">
    <wsdl:part element="tns:reservationDeleteFault" name="reservationDeleteFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="doubleReservationCreateRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:doubleReservationCreateRequest" name="doubleReservationCreateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reservationUpdateRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:reservationUpdateRequest" name="reservationUpdateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="doubleReservationCreateResponse">
    <wsdl:part element="tns:doubleReservationCreateResponse" name="doubleReservationCreateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reservationCreateRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:reservationCreateRequest" name="reservationCreateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reservationDeleteResponse">
    <wsdl:part element="tns:reservationDeleteResponse" name="reservationDeleteResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="reservationCreateFault">
    <wsdl:part element="tns:reservationCreateFault" name="reservationCreateFault"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="FNDSReservationService_V1.0PortType">
    <wsdl:operation name="reservationCreate">
      <wsdl:input message="tns:reservationCreateRequest" name="reservationCreateRequest"></wsdl:input>
      <wsdl:output message="tns:reservationCreateResponse" name="reservationCreateResponse"></wsdl:output>
      <wsdl:fault message="tns:reservationCreateFault" name="reservationCreateFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="doubleReservationDelete">
      <wsdl:input message="tns:doubleReservationDeleteRequest" name="doubleReservationDeleteRequest"></wsdl:input>
      <wsdl:output message="tns:doubleReservationDeleteResponse" name="doubleReservationDeleteResponse"></wsdl:output>
      <wsdl:fault message="tns:doubleReservationDeleteFault" name="doubleReservationDeleteFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reservationDelete">
      <wsdl:input message="tns:reservationDeleteRequest" name="reservationDeleteRequest"></wsdl:input>
      <wsdl:output message="tns:reservationDeleteResponse" name="reservationDeleteResponse"></wsdl:output>
      <wsdl:fault message="tns:reservationDeleteFault" name="reservationDeleteFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reservationUpdate">
      <wsdl:input message="tns:reservationUpdateRequest" name="reservationUpdateRequest"></wsdl:input>
      <wsdl:output message="tns:reservationUpdateResponse" name="reservationUpdateResponse"></wsdl:output>
      <wsdl:fault message="tns:reservationUpdateFault" name="reservationUpdateFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="doubleReservationCreate">
      <wsdl:input message="tns:doubleReservationCreateRequest" name="doubleReservationCreateRequest"></wsdl:input>
      <wsdl:output message="tns:doubleReservationCreateResponse" name="doubleReservationCreateResponse"></wsdl:output>
      <wsdl:fault message="tns:doubleReservationCreateFault" name="doubleReservationCreateFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="FNDSReservationService_V1.0PortTypeSoap11" type="tns:FNDSReservationService_V1.0PortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="reservationCreate">
      <soap:operation soapAction=""/>
      <wsdl:input name="reservationCreateRequest">
        <soap:header message="tns:reservationCreateRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="reservationCreateRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="reservationCreateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="reservationCreateFault">
        <soap:fault name="reservationCreateFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="doubleReservationDelete">
      <soap:operation soapAction=""/>
      <wsdl:input name="doubleReservationDeleteRequest">
        <soap:header message="tns:doubleReservationDeleteRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="doubleReservationDeleteRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="doubleReservationDeleteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="doubleReservationDeleteFault">
        <soap:fault name="doubleReservationDeleteFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reservationDelete">
      <soap:operation soapAction=""/>
      <wsdl:input name="reservationDeleteRequest">
        <soap:header message="tns:reservationDeleteRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="reservationDeleteRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="reservationDeleteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="reservationDeleteFault">
        <soap:fault name="reservationDeleteFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="reservationUpdate">
      <soap:operation soapAction=""/>
      <wsdl:input name="reservationUpdateRequest">
        <soap:header message="tns:reservationUpdateRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="reservationUpdateRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="reservationUpdateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="reservationUpdateFault">
        <soap:fault name="reservationUpdateFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="doubleReservationCreate">
      <soap:operation soapAction=""/>
      <wsdl:input name="doubleReservationCreateRequest">
        <soap:header message="tns:doubleReservationCreateRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="doubleReservationCreateRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="doubleReservationCreateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="doubleReservationCreateFault">
        <soap:fault name="doubleReservationCreateFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="FNDSReservationService_V1.0">
    <wsdl:port binding="tns:FNDSReservationService_V1.0PortTypeSoap11" name="FNDSReservationService_V1.0PortTypeSoap11">
      <soap:address location="http://10.246.89.106:27661/fundscheck/services/FNDSReservationService_V10"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
      <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
    </con:part>
  </con:definitionCache>
  <con:endpoints>
    <con:endpoint>http://10.246.89.106:27661/fundscheck/services/FNDSReservationService_V10</con:endpoint>
  </con:endpoints>
  <con:environmentSpec>
    <con:entry environmentId="1719ae2f-131a-4863-848d-f3a466cbfbdb">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:interface>
