<?xml version="1.0" encoding="UTF-8"?>
<con:interface xsi:type="con:WsdlInterface" id="f626a278-fc79-4d79-b4a1-ab3e651dc103" wsaVersion="NONE" name="PBDSPaymentParameters_V4_5PortTypeSoap11" type="wsdl" bindingName="{urn:srv.pbd.fs.edb.com:ws:paymentparameters:v4_5}PBDSPaymentParameters_V4_5PortTypeSoap11" soapVersion="1_1" anonymous="optional" definition="http://10.246.89.245:10780/pbdsrv/services/PBDSPaymentParameters_V4_5Service?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="f626a278-fc79-4d79-b4a1-ab3e651dc103fileName">PBDSPaymentParameters_V4_5PortTypeSoap11</con:setting>
  </con:settings>
  <con:definitionCache type="TEXT" rootPart="http://10.246.89.245:10780/pbdsrv/services/PBDSPaymentParameters_V4_5Service?wsdl">
    <con:part>
      <con:url>http://10.246.89.245:10780/pbdsrv/services/PBDSPaymentParameters_V4_5Service?wsdl</con:url>
      <con:content><![CDATA[<wsdl:definitions targetNamespace="urn:srv.pbd.fs.edb.com:ws:paymentparameters:v4_5" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:srv.pbd.fs.edb.com:ws:paymentparameters:v4_5" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:sch4="urn:srv.pbd.fs.edb.com:domain:paymentparameters:v4_5" xmlns:sch3="urn:srv.pbd.fs.edb.com:domain:common:v1_0" xmlns:sch2="http://edb.com/ws/WSCommon_v22" xmlns:sch1="http://edb.com/ws/WSCommon_v21" xmlns:sch0="urn:srv.pbd.fs.edb.com:ws:paymentparameters:v4_5">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.pbd.fs.edb.com:ws:paymentparameters:v4_5" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:paymentparameters="urn:srv.pbd.fs.edb.com:domain:paymentparameters:v4_5" xmlns:common="urn:srv.pbd.fs.edb.com:domain:common:v1_0">
      <xs:annotation>
        <xs:documentation>Payment parameters specific operations for external
			systems.
			Response status codes:
			0 = OK
			3034 = Bank not
			found.
			4000 =
			System Error</xs:documentation>
      </xs:annotation>
      <xs:import namespace="urn:srv.pbd.fs.edb.com:domain:paymentparameters:v4_5"/>
      <xs:import namespace="urn:srv.pbd.fs.edb.com:domain:common:v1_0"/>
      <xs:element name="paymentParametersReadRequest" type="tns:paymentParametersReadRequestType">
        <xs:annotation>
          <xs:documentation>Payment Parameters Read Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="paymentParametersReadResponse" type="tns:paymentParametersReadResponseType">
        <xs:annotation>
          <xs:documentation>Payment Parameters Read Response</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:complexType name="paymentParametersReadRequestType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the Request to Read the
				Payment parameters</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="institutionCode" type="common:bankOrgId">
            <xs:annotation>
              <xs:documentation>an institutionCode represents bankOrgId</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paymentParametersReadResponseType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the Response to Read the
				Payment parameters</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="accesspaymentParameters" type="paymentparameters:accessPaymentParametersDetails">
                <xs:annotation>
                  <xs:documentation>Describes the payment parameters Response
								Object.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="fundscheckpaymentParameters" type="paymentparameters:fundsCheckPaymentParametersDetails">
                <xs:annotation>
                  <xs:documentation>Describes the payment parameters Response
								Object.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="foreignexchangepaymentParameters" type="paymentparameters:fxPaymentParametersDetails">
                <xs:annotation>
                  <xs:documentation>Describes the payment parameters Response
								Object.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="generalpaymentParameters" type="paymentparameters:generalPaymentParametersDetails">
                <xs:annotation>
                  <xs:documentation>Describes the payment parameters Response
								Object.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="standingorderpaymentParameters" type="paymentparameters:standingOrderPaymentParametersDetails">
                <xs:annotation>
                  <xs:documentation>Describes the payment parameters Response
								Object.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="internalaccountpaymentParameters" type="paymentparameters:internalAccountsPaymentParametersDetails">
                <xs:annotation>
                  <xs:documentation>Describes the payment parameters Response
								Object.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="paymentEnginePaymentParameters" type="paymentparameters:paymentEnginePaymentParametersDetails">
                <xs:annotation>
                  <xs:documentation>Describes Payment Engine Parameters parameters
								details
								for
								response</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://edb.com/ws/WSCommon_v21" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://edb.com/ws/WSCommon_v21">
      <xsd:complexType name="ClientContextType">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the person who initiated the action This could either be the customer itself in a netbank) or an employee</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="credentials" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Authorization data. This is typically a security Object retriewed from a logon, but can also be a plain password.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="channel" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Indicated what type of application that initiated the request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="orgid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The OrganizationalId - will in a banking context be Financial Institution / Konsernnr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="orgunit" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The Organizational unit will in a banking context be Branch / Registernr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="customerid" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Id of the customer on which the operation is requested, may be the same as userid, but may well be different</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="locale" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Locale in a java syntax e.g "en_EN". May be used if application supports localized response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ip" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The ip adress of the client</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="itemType">
            <xsd:annotation>
              <xsd:documentation>Optionnal extention items - Add key/value pairs for application specific extentions</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="itemType">
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="EDBHeaderType">
        <xsd:sequence>
          <xsd:element name="SourceApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the source that initiated the message. Used to separate different service consumers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="DestinationApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the destination of the message. Used to separate different service providers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Function" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the service to be called.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Version" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Service version "X.Y.Z" according to this standard:
                X = Main release (major changes, not necessarily backwards compatible)
                Y = Minor release (backwards compatible, new functionality)
                Z = Bugfix (backwards compatible, error correction only)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ClientContext" type="ClientContextType">
            <xsd:annotation>
              <xsd:documentation>Elements for identifying client context information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="AutHeader" type="EDBHeaderType"/>
      <xsd:complexType name="ResponseStateType">
        <xsd:sequence>
          <xsd:element name="ErrorCode" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>3 digit Numeric error code reported for this error.
						200-299  Reserved for the Input Errors 
						300-399  Reserved for the Logic/Business Errors
						400-499  System Errors</xsd:documentation>
              <xsd:documentation>Cash Pool Main Setup Error codes.
						200=Invalid Customer Identification number
						300=Cash pool already exist
						301=Update of cash pool status from Production to Simulation is not allowed
						400=Could not establish connection to Customer Information System 
						401=Could not establish connection to Bank Business Data</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Severity" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Response Status Severity Code</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ComponentId" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Unique code identifying the component returning the service response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StrErrorCode" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Deprecated: Error code represented as String</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Message" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Message describing the error. Default is english language. Optionally localized according to the locale parameter in the service request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="NativeError" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Deprecated: Optional detailed error information reported from involved components. Used for diagnostics purposes.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="LogSequence" nillable="true" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>Optional key generated to be used for log correlation purposes.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="errorItem" nillable="true" type="errorItemType">
            <xsd:annotation>
              <xsd:documentation>Optional extention items - key/value pairs are used for extented error inforamtion.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="errorItemType">
        <xsd:annotation/>
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://edb.com/ws/WSCommon_v22" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://edb.com/ws/WSCommon_v22">
      <xsd:complexType name="ClientContextType">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the person who initiated the action This could either be the customer itself in a netbank) or an employee</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="credentials" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Authorization data. This is typically a security Object retriewed from a logon, but can also be a plain password.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="channel" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Indicated what type of application that initiated the request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="orgid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The OrganizationalId - will in a banking context be Financial Institution / Konsernnr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="orgunit" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The Organizational unit will in a banking context be Branch / Registernr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="customerid" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Id of the customer on which the operation is requested, may be the same as userid, but may well be different</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="locale" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Locale in a java syntax e.g "en_EN". May be used if application supports localized response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ip" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The ip adress of the client</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="itemType">
            <xsd:annotation>
              <xsd:documentation>Optionnal extention items - Add key/value pairs for application specific extentions</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="itemType">
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="EDBHeaderType">
        <xsd:sequence>
          <xsd:element name="SourceApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the source that initiated the message. Used to separate different service consumers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="DestinationApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the destination of the message. Used to separate different service providers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Function" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the service to be called.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Version" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Service version "X.Y.Z" according to this standard:
                X = Main release (major changes, not necessarily backwards compatible)
                Y = Minor release (backwards compatible, new functionality)
                Z = Bugfix (backwards compatible, error correction only)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ClientContext" type="ClientContextType">
            <xsd:annotation>
              <xsd:documentation>Elements for identifying client context information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="AutHeader" type="EDBHeaderType"/>
      <xsd:complexType name="ResponseStateType">
        <xsd:sequence>
          <xsd:element name="ErrorCode" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Numeric error code reported for this error.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Severity" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Response Status Severity Code</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ComponentId" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Unique code identifying the component returning the service response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Message" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Message describing the error. Default is english language. Optionally localized according to the locale parameter in the service request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="LogSequence" nillable="true" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>Optional key generated to be used for log correlation purposes.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="errorItem" nillable="true" type="errorItemType">
            <xsd:annotation>
              <xsd:documentation>Optional extention items - key/value pairs are used for extented error inforamtion.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="errorItemType">
        <xsd:annotation/>
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
    </xsd:schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.pbd.fs.edb.com:domain:common:v1_0" xmlns:tns="urn:srv.pbd.fs.edb.com:domain:common:v1_0" xmlns:edbheaderv22="http://edb.com/ws/WSCommon_v22" xmlns:edbheader="http://edb.com/ws/WSCommon_v21" xmlns:common="urn:srv.pbd.fs.edb.com:domain:common:v1_0" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <import namespace="http://edb.com/ws/WSCommon_v21"/>
      <import namespace="http://edb.com/ws/WSCommon_v22"/>
      <simpleType name="pageLengthType">
        <annotation>
          <documentation>An type capable of describing a segments length or
				wished length, if set to 0 then system defaults to 500.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="500"/>
        </restriction>
      </simpleType>
      <simpleType name="pageIndexType">
        <annotation>
          <documentation>Index of segment start</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <complexType name="pagingInputElementType">
        <annotation>
          <documentation>Describes a paging segment. pageSize must be greater
				than or equal to 1.</documentation>
        </annotation>
        <sequence>
          <element name="startIndex" type="common:pageIndexType"/>
          <element name="pageSize" type="common:pageLengthType"/>
        </sequence>
      </complexType>
      <complexType name="pagingOutputElementType">
        <annotation>
          <documentation>Describes the returned segment</documentation>
        </annotation>
        <sequence>
          <element name="numberOfElements" type="common:pageLengthType">
            <annotation>
              <documentation>Number of elements returned</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType abstract="true" name="pageResultType">
        <annotation>
          <documentation>Wraps paging and data elements</documentation>
        </annotation>
        <sequence>
          <element name="pagingOutput" type="common:pagingOutputElementType"/>
          <element name="elements">
            <complexType>
              <sequence>
                <any namespace="##other"/>
              </sequence>
            </complexType>
          </element>
        </sequence>
      </complexType>
      <simpleType name="generatedPkType">
        <annotation>
          <documentation>Generated primary key in database</documentation>
        </annotation>
        <restriction base="long">
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <simpleType name="optimisticLockVersionType">
        <annotation>
          <documentation>Version counter field used for optimistic locking
				See:
				http://en.wikipedia.org/wiki/Optimistic_concurrency_control
				This
				ensures data consistency when data travels across
				layers.</documentation>
        </annotation>
        <restriction base="long">
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <complexType abstract="true" name="basePersistentEntityType">
        <annotation>
          <documentation>base Persistent Entity Type Holds the primary key
				Value</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="pk" type="common:generatedPkType">
            <annotation>
              <documentation>Bearer of the primary key.
						Not present for an
						non-persisted entity.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="version" type="common:optimisticLockVersionType">
            <annotation>
              <documentation>The optimistic locking version field.
						Not present for
						an non-persisted entity.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType abstract="true" name="baseResponseType">
        <annotation>
          <documentation>Base response type which all services should extend
				off</documentation>
        </annotation>
        <sequence>
          <element name="ResponseState" type="edbheader:ResponseStateType">
            <annotation>
              <documentation>The response state which describes the outcome of
						calling the service.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="dateTime">
        <annotation>
          <documentation>Generic Datatype for date and Time</documentation>
        </annotation>
        <restriction base="dateTime"/>
      </simpleType>
      <simpleType name="date">
        <annotation>
          <documentation>Generic Datatype for dates</documentation>
        </annotation>
        <restriction base="date"/>
      </simpleType>
      <simpleType name="userId">
        <annotation>
          <documentation>String supporting 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="50"/>
        </restriction>
      </simpleType>
      <simpleType name="userTimeFormat">
        <restriction base="string">
          <pattern value="(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]"/>
        </restriction>
      </simpleType>
      <simpleType name="max1digit">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 9.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max2digit">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 99.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="99"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max2Digit10MaxValue">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 10.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max3Digit120MaxValue">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 120.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="120"/>
        </restriction>
      </simpleType>
      <simpleType name="max2digit">
        <annotation>
          <documentation>Integer supporting 2 integers.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="10"/>
          <maxInclusive value="99"/>
        </restriction>
      </simpleType>
      <simpleType name="max6digit">
        <annotation>
          <documentation>Integer supporting 6 integers.</documentation>
        </annotation>
        <restriction base="int">
          <maxInclusive value="999999"/>
        </restriction>
      </simpleType>
      <simpleType name="max3digit">
        <annotation>
          <documentation>Integer supporting 3 integers.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max6digit">
        <annotation>
          <documentation>Integer supporting 6 integers where minimum expecting
				1.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999999"/>
        </restriction>
      </simpleType>
      <simpleType name="orderNumber">
        <annotation>
          <documentation>Integer supporting 6 integers where minimum expecting
				1.</documentation>
        </annotation>
        <restriction base="long">
          <minInclusive value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="order">
        <annotation>
          <documentation>Simple type to represent order number
				1.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="min4max6digit">
        <annotation>
          <documentation>Integer supporting 6 integers where minumum expecting
				1.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{4,6}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString50">
        <annotation>
          <documentation>String supporting 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,50}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString20">
        <annotation>
          <documentation>String supporting 20 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString21">
        <annotation>
          <documentation>String supporting 21 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,21}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaCharacter4">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-z//A-Z]{3,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyISOCode">
        <annotation>
          <documentation>ISO 4217 alpha code (3 positions)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z]{3}"/>
        </restriction>
      </simpleType>
      <simpleType name="countryISOCode">
        <annotation>
          <documentation>ISO 3166 Country code(2 positions) and this is
				optional filed for Bank Info</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z]{2}"/>
        </restriction>
      </simpleType>
      <simpleType name="languageISOCode">
        <annotation>
          <documentation>ISO 3166 Language code(2 positions)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_-]{2,5}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max2AlphabetType">
        <annotation>
          <documentation>ISO 3166 Country code(2 positions) and this is
				optional filed for Bank Info</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z]{1,2}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max2caseInsensitiveAlphabetType">
        <annotation>
          <documentation>ISO 3166 Country code(2 positions) and this is
				optional filed for Bank Info</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z]{1,2}"/>
        </restriction>
      </simpleType>
      <simpleType name="max10StringType">
        <annotation>
          <documentation>String supporting 10 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.# ]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="max20StringType">
        <annotation>
          <documentation>String supporting 20 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.# ]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="max34StringType">
        <annotation>
          <documentation>String supporting 34 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.# ]{1,34}"/>
        </restriction>
      </simpleType>
      <simpleType name="max50StringType">
        <annotation>
          <documentation>String supporting 34 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.# ]{1,50}"/>
        </restriction>
      </simpleType>
      <simpleType name="max200StringType">
        <annotation>
          <documentation>String supporting 200 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,200}"/>
        </restriction>
      </simpleType>
      <simpleType name="max255StringType">
        <annotation>
          <documentation>String supporting 255 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,255}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString320">
        <annotation>
          <documentation>String supporting 320 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{0,320}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric35WithoutSpecialChar">
        <annotation>
          <documentation>String supporting max 35 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9 ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric35withspecificchar">
        <annotation>
          <documentation>String supporting max 35 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[!\[\]anc\d-]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric40withoutspeicalchar">
        <annotation>
          <documentation>String supporting max 40 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,40}"/>
        </restriction>
      </simpleType>
      <simpleType name="min2max5AlphaNumericwithoutspeicalchar">
        <annotation>
          <documentation>String supporting min 2 and max 5 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{2,5}"/>
        </restriction>
      </simpleType>
      <simpleType name="min4max18AlphaNumericwithoutspeicalchar">
        <annotation>
          <documentation>String supporting min 4 and max 18 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{4,18}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric50">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 50</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.#0-9 ]{1,50}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric250Type">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 250</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W_,.#0-9 ]{1,250}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric20">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 20</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z0-9 ]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric20withoutspeicalchar">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 20</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric18withoutspeicalchar">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 18</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9]{1,18}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric34speicalcharwithSpace">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 34</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9 ]{1,34}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric35speicalcharwithSpace">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 35</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9 ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric40SpeicalcharWithSpace">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 40</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9 ]{1,40}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric80SpeicalcharWithSpace">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 80</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9 ]{1,80}"/>
        </restriction>
      </simpleType>
      <simpleType name="booleanType">
        <annotation>
          <documentation>Boolean Type</documentation>
        </annotation>
        <restriction base="boolean"/>
      </simpleType>
      <simpleType name="bankOrgId">
        <annotation>
          <documentation>Bank Organizational Identification</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="bbanAccountNumberType">
        <annotation>
          <documentation>Type for representing an international bank account
				number, e.g. 33660663301</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="\S.*\S|\S"/>
          <minLength value="1"/>
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <simpleType name="max34AlphaNumeric">
        <annotation>
          <documentation>Type for representing a account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="34"/>
          <pattern value="[a-zA-Z0-9]{1,34}"/>
        </restriction>
      </simpleType>
      <simpleType name="max11Numeric">
        <annotation>
          <documentation>Type for representing a numeric account number upto 11
				digits</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="11"/>
          <pattern value="[0-9]{1,11}"/>
        </restriction>
      </simpleType>
      <simpleType name="max10Numeric">
        <annotation>
          <documentation>Type for representing a numeric 
			account number upto 10 digits.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="10"/>
          <pattern value="[0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="max70AplphaNumeric">
        <annotation>
          <documentation>Type for representing a account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="70"/>
          <pattern value="[a-zA-Z0-9]{1,70}"/>
        </restriction>
      </simpleType>
      <simpleType name="max35AlphaNumeric">
        <annotation>
          <documentation>Type for representing a account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="35"/>
          <pattern value="[a-zA-Z0-9]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="max35AlphaNumericWithSpaceWithoutSpecialCharacters">
        <annotation>
          <documentation>Type for representing a account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="35"/>
          <pattern value="[a-zA-Z0-9 ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="max3AlphaNumeric">
        <annotation>
          <documentation>Type for representing a AlphaNumericString with 3
				characters</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="3"/>
          <pattern value="[a-zA-Z0-9]{1,3}"/>
        </restriction>
      </simpleType>
      <simpleType name="standardAgreementLabelInput" tns:nil="true">
        <restriction base="string">
          <enumeration value="ALL">
            <annotation>
              <documentation>Standard Agreement Label is All.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="NONE">
            <annotation>
              <documentation>Standard Agreement Label is None.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="customerIdentificationNumber">
        <annotation>
          <documentation>Customer Identification Number, being a unique
				external identifier of customer.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="ibanAccountNumberType">
        <annotation>
          <documentation>Type for representing an international bank account
				number, e.g. DE89370400440532013001</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="\S.*\S|\S"/>
          <minLength value="1"/>
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <complexType name="address">
        <annotation>
          <documentation>Complex type to represent the Address in pbd</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="postalCode" type="common:maxString20">
            <annotation>
              <documentation>Describes the postal code of the address.It is a
						optional field</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="place" type="common:maxString50">
            <annotation>
              <documentation>Describes the place of address.It is a optional
						field</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="countryCode" type="common:countryISOCode">
            <annotation>
              <documentation>Describes the country code of address.It is a
						optional field in corporate Group and Mandatory field in
						BankInformation</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="countryName" type="common:min1max70stringTypeWithSpace">
            <annotation>
              <documentation>Describes the country name of address.It is a
						optional field in corporate Group and BankInformation</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressLine1" type="common:maxAlphaNumeric250Type">
            <annotation>
              <documentation>Describes the address Line1.It is a optional field</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressLine2" type="common:maxAlphaNumeric250Type">
            <annotation>
              <documentation>Describes the address Line2.It is a optional field</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="accountType" tns:nil="true">
        <restriction base="string">
          <enumeration value="OPA">
            <annotation>
              <documentation>Operational account</documentation>
            </annotation>
          </enumeration>
          <enumeration value="ICA">
            <annotation>
              <documentation>Intermediate concentration account</documentation>
            </annotation>
          </enumeration>
          <enumeration value="GCA">
            <annotation>
              <documentation>Group concentration account</documentation>
            </annotation>
          </enumeration>
          <enumeration value="MCLA">
            <annotation>
              <documentation>Multi currency limit account</documentation>
            </annotation>
          </enumeration>
          <enumeration value="CRA">
            <annotation>
              <documentation>Corporate report account (Organization)</documentation>
            </annotation>
          </enumeration>
          <enumeration value="PMA">
            <annotation>
              <documentation>PMA account</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="bankIdentificationNumber">
        <annotation>
          <documentation>Describes the primary identification number for
				particular Bank</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="bankIdentificationCode">
        <annotation>
          <documentation>Describes the primary identification code for
				particular Bank</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z0-9]{8,11}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphanumeric">
        <annotation>
          <documentation>This is just a restriction on string to contain only
				alphabets and digits</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z0-9]{1,11}"/>
        </restriction>
      </simpleType>
      <complexType name="productInfoType">
        <annotation>
          <documentation>Complex Type Describes the value for ProductInfo
				in
				PBD.</documentation>
        </annotation>
        <sequence>
          <element name="productCode" type="common:maxAlphaNumeric18withoutspeicalchar">
            <annotation>
              <documentation>Describes the code for the product being
						used in
						PBD.</documentation>
            </annotation>
          </element>
          <element name="productLabel" type="common:maxString50">
            <annotation>
              <documentation>Describes the name of the product being
						used in
						PBD.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="period" tns:nil="true">
        <annotation>
          <documentation>Enumeration over the different type of periods allowed
				in terms and conditions</documentation>
        </annotation>
        <restriction base="duration">
          <enumeration value="P1D">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on DAILY
						basis</documentation>
            </annotation>
          </enumeration>
          <enumeration value="P7D">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on WEEKLY
						basis</documentation>
            </annotation>
          </enumeration>
          <enumeration value="P14D">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on BIWEEKLY
						basis</documentation>
            </annotation>
          </enumeration>
          <enumeration value="P1M">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on MONTLY
						basis</documentation>
            </annotation>
          </enumeration>
          <enumeration value="P4M">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on QUARTERLY
						basis</documentation>
            </annotation>
          </enumeration>
          <enumeration value="P1Y">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on YEARLY
						basis</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="textType">
        <annotation>
          <documentation>Enumeration to define the Field Type.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ALPHABETIC">
            <annotation>
              <documentation>Specified Filed is allow only Alphabetics.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="NUMERIC">
            <annotation>
              <documentation>Specified Filed is allow only numbers.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="ALPHANUMERIC">
            <annotation>
              <documentation>Specified Filed is allow both Alphabetic and
						numbers.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="paymentOffice">
        <annotation>
          <documentation>Enumeration for Payment Location.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="HEAD">
            <annotation>
              <documentation>Payment Specified to Head Office.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BRANCH">
            <annotation>
              <documentation>Payment Specified to branch Office.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="paymentMethod">
        <annotation>
          <documentation>Enumeration for Payment Method.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="SERIAL">
            <annotation>
              <documentation>Payment Specified to Serial Method.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="COVER">
            <annotation>
              <documentation>Payment Specified to Cover Method.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="usageType">
        <annotation>
          <documentation>Enumeration for Usage Type.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="YES">
            <annotation>
              <documentation>Usage Type is Specified to Yes.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="NO">
            <annotation>
              <documentation>Usage Type is Specified to No.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="MUST">
            <annotation>
              <documentation>Usage Type is Specified to Must.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="itemType">
        <annotation>
          <documentation>Enumeration for Item Type.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="COUNTRY">
            <annotation>
              <documentation>Item Type Specified to COUTNRY.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BANK">
            <annotation>
              <documentation>Item Type Specified to BANK.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="CUSTOMER">
            <annotation>
              <documentation>Item Type Specified to CIN.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="ACCOUNT">
            <annotation>
              <documentation>Item Type Specified to ACCOUNT.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="businessArea">
        <annotation>
          <documentation>Enumeration for Business Area.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PAYMENTS">
            <annotation>
              <documentation>Business Area Specified to PAYMENTS.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="CHEQUES">
            <annotation>
              <documentation>Business Area Specified to CHEQUES.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="direction">
        <annotation>
          <documentation>Enumeration over the different type of periods allowed
				in terms and conditions</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="DAILY">
            <annotation>
              <documentation>fee charges will be applicable on daily basis for
						the cashpool</documentation>
            </annotation>
          </enumeration>
          <enumeration value="WEEKLY">
            <annotation>
              <documentation>fee charges will be applicable on weekly basis for
						the cashpool</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BI_WEEKLY">
            <annotation>
              <documentation>fee charges will be applicable on biweekly basis for
						the cashpool</documentation>
            </annotation>
          </enumeration>
          <enumeration value="MONTHLY">
            <annotation>
              <documentation>fee charges will be applicable on biweekly basis for
						the cashpool</documentation>
            </annotation>
          </enumeration>
          <enumeration value="QUARTERLY">
            <annotation>
              <documentation>fee charges will be applicable on quarterly basis
						for the cashpool</documentation>
            </annotation>
          </enumeration>
          <enumeration value="YEARLY">
            <annotation>
              <documentation>fee charges will be applicable on yearly basis for
						the cashpool</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="verifyDirection">
        <annotation>
          <documentation>Enumeration over the different type of direction for</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="INPUT">
            <annotation>
              <documentation>Only accepted in input</documentation>
            </annotation>
          </enumeration>
          <enumeration value="OUTPUT">
            <annotation>
              <documentation>Only shown in output</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BOTH">
            <annotation>
              <documentation>accepted in input and show in output too</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="moniteryAmount">
        <annotation>
          <documentation>common decimal type used for amounts in cashpool</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="3"/>
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="chargeAmount">
        <annotation>
          <documentation>common decimal type used for amounts in cashpool</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="3"/>
          <totalDigits value="21"/>
          <minExclusive value="-1"/>
        </restriction>
      </simpleType>
      <simpleType name="toleranceAmount">
        <annotation>
          <documentation>Decimal type used for funds check tolerance.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="2"/>
          <totalDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="amount">
        <annotation>
          <documentation>Decimal type used for payments.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="18"/>
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <simpleType name="amountType">
        <annotation>
          <documentation>Decimal type used for payments.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="23"/>
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <simpleType name="baseAmount">
        <annotation>
          <documentation>Amount that is ISO20022. Use this for amount types by
				extending it</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="paymentAmount">
        <annotation>
          <documentation>Used for charge amounts in Payment product and product
				Agreement</documentation>
        </annotation>
        <restriction>
          <simpleType>
            <restriction base="common:baseAmount">
              <minInclusive value="0"/>
              <maxInclusive value="9999999999999.99999"/>
            </restriction>
          </simpleType>
        </restriction>
      </simpleType>
      <simpleType name="toleranceMin">
        <annotation>
          <documentation>Describes funds check tolerance minimum.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="9999"/>
        </restriction>
      </simpleType>
      <simpleType name="retryDays">
        <annotation>
          <documentation>Describes funds check retry days.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="99"/>
        </restriction>
      </simpleType>
      <simpleType name="max30StringType">
        <annotation>
          <documentation>Value restricted to min of 1 and max of 30 characters</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric35">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric60">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{1,60}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric70">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{1,70}"/>
        </restriction>
      </simpleType>
      <simpleType name="AlphaNumericmin4max40">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{4,40}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmin1max10">
        <annotation>
          <documentation>String supporting 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}A-Za-z_,.#0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmin1max75">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,75}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax75">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 75 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{0,75}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric35withspeicalchar">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString35">
        <annotation>
          <documentation>String supporting 35 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max105StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,105}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max35StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max15StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,15}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max16StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,16}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max4StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max5StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,5}"/>
        </restriction>
      </simpleType>
      <simpleType name="max4StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{4}"/>
        </restriction>
      </simpleType>
      <simpleType name="max5StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{5}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max10StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max60StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,60}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max50StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,60}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max90StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,90}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max100StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,100}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max70stringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,70}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric11">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{11}"/>
        </restriction>
      </simpleType>
      <simpleType name="AlphaNumericmin4max18">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{4,18}"/>
        </restriction>
      </simpleType>
      <simpleType name="AlphaNumericmin1max4">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="AlphaNumericmin1max5">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,5}"/>
        </restriction>
      </simpleType>
      <simpleType name="AlphaNumericmin1max12">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,12}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax4">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 4 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z0-9]{4}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax9">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 9 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{0,9}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax30">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 30 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{0,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax50">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{0,50}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max8Alphanumeric">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 8 and minLength of 1 char.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,8}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max60stringType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{1,60}"/>
        </restriction>
      </simpleType>
      <simpleType name="max70stringType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{0,70}"/>
        </restriction>
      </simpleType>
      <simpleType name="cutOffDayType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="99"/>
        </restriction>
      </simpleType>
      <simpleType name="accountTypeInfo">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="NOSTRO"/>
          <enumeration value="VOSTRO"/>
        </restriction>
      </simpleType>
      <simpleType name="userDateformat">
        <restriction base="string">
          <pattern value="yyyy-mm-dd"/>
        </restriction>
      </simpleType>
      <simpleType name="dayType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="31"/>
        </restriction>
      </simpleType>
      <simpleType name="monthType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="yearType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{4}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max18stringType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,18}"/>
        </restriction>
      </simpleType>
      <simpleType name="max35AlphabeticTypeWithSpace">
        <annotation>
          <documentation>Describes the pattern for a alphabetic string with
				whitespace and size limit of 35</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="contactPersonEmail">
        <annotation>
          <documentation>Describes the pattern for correspondent contact
				person's email</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z.@_]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="phoneNum">
        <annotation>
          <documentation>Describes the pattern for correspondent contact
				person's phone number</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9 -()+]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="previousOrNextEnum">
        <annotation>
          <documentation>Describes the next or previous Enum.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="NEXT"/>
          <enumeration value="PREVIOUS"/>
        </restriction>
      </simpleType>
      <simpleType name="unitNumber">
        <annotation>
          <documentation>Describes the unit Number.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="1"/>
          <enumeration value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="max4NumericValue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{4}"/>
        </restriction>
      </simpleType>
      <simpleType name="max3NumericValue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{3}"/>
        </restriction>
      </simpleType>
      <simpleType name="max34numericvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{34}"/>
        </restriction>
      </simpleType>
      <simpleType name="min0max6numericvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="999999"/>
        </restriction>
      </simpleType>
      <simpleType name="max11decimalvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit decimal with ten digit fraction that are
				not otherwise restricted by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="10"/>
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="bankIdentifierCode">
        <annotation>
          <documentation>Describes the Bank Identifier Code for Bank</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{11}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max11stringType">
        <annotation>
          <documentation>Describes the Bank Identifier Code for Bank</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,11}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max15AlphaNumericType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,15}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max15AlphaNumericWithSpaceType">
        <annotation>
          <documentation>Allows alphabets (any case), numbers and space with
				length 1 to 15</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9 ]{1,15}"/>
        </restriction>
      </simpleType>
      <simpleType name="timeFormat">
        <annotation>
          <documentation>User defined time format.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString70">
        <annotation>
          <documentation>String supporting 70 chars.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="0"/>
          <maxLength value="70"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString72">
        <annotation>
          <documentation>String supporting 72 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.# ]{1,72}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString75">
        <annotation>
          <documentation>String supporting 75 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,75}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString140">
        <annotation>
          <documentation>String supporting 140 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,140}"/>
        </restriction>
      </simpleType>
      <simpleType name="piFormat">
        <annotation>
          <documentation>Enumeration for Message Format.</documentation>
        </annotation>
        <restriction base="string">
          <annotation>
            <documentation>Specifies from and to format for Payment
					Initiation</documentation>
          </annotation>
          <enumeration value="MT101"/>
        </restriction>
      </simpleType>
      <simpleType name="eodFormat">
        <annotation>
          <documentation>Enumeration for Message Format.</documentation>
        </annotation>
        <restriction base="string">
          <annotation>
            <documentation>Specifies from and to format for EOD Account
					Information Format</documentation>
          </annotation>
          <enumeration value="MT940"/>
        </restriction>
      </simpleType>
      <simpleType name="intradayFormat">
        <annotation>
          <documentation>Enumeration for Message Format.</documentation>
        </annotation>
        <restriction base="string">
          <annotation>
            <documentation>Specifies from and to format for Intraday Account
					Information Format</documentation>
          </annotation>
          <enumeration value="MT942"/>
        </restriction>
      </simpleType>
      <simpleType name="messageExchangeType">
        <annotation>
          <documentation>Enumeration for Message Format.</documentation>
        </annotation>
        <restriction base="string">
          <annotation>
            <documentation>Specifies Message Exchange Type</documentation>
          </annotation>
          <enumeration value="PI"/>
          <enumeration value="EOD"/>
          <enumeration value="INTRADAY"/>
        </restriction>
      </simpleType>
      <simpleType name="max21decimalvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit decimal with ten digit fraction that are
				not otherwise restricted by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="21"/>
          <fractionDigits value="3"/>
          <minInclusive value="000000000000000000000.000"/>
          <maxInclusive value="999999999999999999.999"/>
        </restriction>
      </simpleType>
      <simpleType name="max15alphabeticType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{1,15}"/>
        </restriction>
      </simpleType>
      <simpleType name="min0max5numericvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{0,5}"/>
        </restriction>
      </simpleType>
      <simpleType name="statusType">
        <annotation>
          <documentation>Enumeration for Status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE">
            <annotation>
              <documentation>Describes active status.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="CLOSED">
            <annotation>
              <documentation>Describes closed status.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="FUTURE">
            <annotation>
              <documentation>Describes future status.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="statusActiveFuture">
        <annotation>
          <documentation>Enumeration for Status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE">
            <annotation>
              <documentation>Describes active status.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="FUTURE">
            <annotation>
              <documentation>Describes future status.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="max3screenRank">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{1,3}"/>
        </restriction>
      </simpleType>
      <simpleType name="max6decimalvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit decimal with ten digit fraction that are
				not otherwise restricted by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="6"/>
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="max8totaldigits">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit decimal with ten digit fraction that are
				not otherwise restricted by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="6"/>
          <totalDigits value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="percentage">
        <restriction base="decimal">
          <totalDigits value="3"/>
          <minInclusive value="0"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="percentageInt">
        <restriction base="int">
          <totalDigits value="3"/>
          <minInclusive value="0"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="percentageUnitSplit">
        <restriction base="decimal">
          <totalDigits value="5"/>
          <fractionDigits value="2"/>
          <minInclusive value="0"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="max5numericvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{5}"/>
        </restriction>
      </simpleType>
      <complexType name="accountTypewithCashPool">
        <choice>
          <element minOccurs="0" name="accountType" type="common:accountType">
            <annotation>
              <documentation>Describes the Accounts that are available in
						PBD .</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="CashPool" type="string">
            <annotation>
              <documentation>Describes the Cash Pool Type that are available in
						PBD
						.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <simpleType name="status">
        <annotation>
          <documentation></documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE"/>
          <enumeration value="AWAITING_VERIFICATION"/>
          <enumeration value="UNDER_VERIFICATION"/>
          <enumeration value="VERIFIED"/>
          <enumeration value="CLOSED"/>
          <enumeration value="INACTIVE"/>
          <enumeration value="FUTURE"/>
        </restriction>
      </simpleType>
      <simpleType name="gmtDifference">
        <restriction base="string">
          <pattern value="[+\-](0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]"/>
        </restriction>
      </simpleType>
      <simpleType name="fxMargin">
        <restriction base="int">
          <minInclusive value="-100"/>
          <maxInclusive value="+999"/>
        </restriction>
      </simpleType>
      <complexType name="accountIdentifier">
        <annotation>
          <documentation>Account Identifier for BBAN or IBAN</documentation>
        </annotation>
        <choice>
          <element name="IBANAccountNumber" type="common:ibanAccountNumberType">
            <annotation>
              <documentation>represents International Bank Identification Number</documentation>
            </annotation>
          </element>
          <element name="BBANAccountNumber" type="common:bbanAccountNumberType">
            <annotation>
              <documentation>represents Basic Bank Account Number</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <simpleType name="agreementType">
        <annotation>
          <documentation>Enum for Agreement type like SpecialAgreements or ApplyStandardAgreements or StandardAgreements</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="SPECIALAGREEMENT">
            <annotation>
              <documentation>This enum only for list to
						fetch special agreements</documentation>
            </annotation>
          </enumeration>
          <enumeration value="APPLYSTANDARDAGREEMENT">
            <annotation>
              <documentation>This enum only for list to
						fetch apply standard agreements</documentation>
            </annotation>
          </enumeration>
          <enumeration value="STANDARDAGREEMENT">
            <annotation>
              <documentation>This enum only for list to
						fetch standard agreements</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="interestRatePercentageType">
        <annotation>
          <documentation>Common decimal type used for interest rate in
				PBD. Can
				be negative.
				1.0 is 1%</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="4"/>
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="max7DigitsWith5Fraction">
        <annotation>
          <documentation>Common decimal type used for interest rate in
				PBD. Can
				be negative.
				1.0 is 1%</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="marginType">
        <annotation>
          <documentation>Common decimal type used for margins rate in PBD</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="4"/>
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="interestRatePositivePercentageType">
        <annotation>
          <documentation>Common decimal type used for interest rate in
				cashpool. Must be positive
				1.0 is 1%</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="4"/>
          <totalDigits value="6"/>
          <minExclusive value="0"/>
        </restriction>
      </simpleType>
      <simpleType name="positive7MaxDigitsWith5Fraction">
        <annotation>
          <documentation>Common decimal type used for interest rate in
				cashpool. Must be positive
				1.0 is 1%</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="7"/>
          <minExclusive value="0"/>
        </restriction>
      </simpleType>
      <complexType name="currency">
        <annotation>
          <documentation>Complex type to represent the Currency Value.</documentation>
        </annotation>
        <choice>
          <element name="currencyId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the Currency Id .</documentation>
            </annotation>
          </element>
          <element name="currency" type="common:currencyISOCode">
            <annotation>
              <documentation>Describes the Currency Id .</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="bank">
        <annotation>
          <documentation>Complex type to represent the bank Value.</documentation>
        </annotation>
        <choice>
          <element name="bankId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the bankId .</documentation>
            </annotation>
          </element>
          <element name="bankCode" type="common:bankIdentificationNumber">
            <annotation>
              <documentation>Describes the bankCode.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="oldBankCode" type="common:bankIdentificationNumber">
            <annotation>
              <documentation>Describes the Old bankCode.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="country">
        <annotation>
          <documentation>Complex type to represent the country Value.</documentation>
        </annotation>
        <choice>
          <element name="countryId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the country Id .</documentation>
            </annotation>
          </element>
          <element name="countryCode" type="common:countryISOCode">
            <annotation>
              <documentation>Describes the country code .</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="bankProduct">
        <annotation>
          <documentation>Complex type to represent the bankProduct Value.</documentation>
        </annotation>
        <choice>
          <element name="bankProductId" type="common:generatedPkType">
            <annotation>
              <documentation>Holds the Bank defined product name Id for
						Prodcut
						which
						will
						be used by BANK .</documentation>
            </annotation>
          </element>
          <element name="bankProductName" type="common:alphaNumericmin1max35">
            <annotation>
              <documentation>Describes the bank Product Keys
						which
						will
						be used
						by
						BANK .</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="category">
        <annotation>
          <documentation>Complex type to represent the category Values.</documentation>
        </annotation>
        <choice>
          <element name="categoryId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the category Id which will be used in
						Interestrates and Commission.</documentation>
            </annotation>
          </element>
          <element name="categoryType" type="common:maxString50">
            <annotation>
              <documentation>Describes the category Type which will be used in
						Interestrates and Commission.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="products">
        <annotation>
          <documentation>Complex type to represent the for product info.</documentation>
        </annotation>
        <choice>
          <element name="productId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the product Id .</documentation>
            </annotation>
          </element>
          <element name="productName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Name.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productArea">
        <annotation>
          <documentation>Complex type to represent the for product Area
				info.</documentation>
        </annotation>
        <choice>
          <element minOccurs="0" name="productAreaId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the productArea Id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productAreaName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Area Name.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productGroup">
        <annotation>
          <documentation>Complex type to represent the for product Group
				info.</documentation>
        </annotation>
        <choice>
          <element minOccurs="0" name="productGroupId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the productGroup Id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productGroupName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Group Name.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productFamily">
        <annotation>
          <documentation>Complex type to represent the for product Family
				info.</documentation>
        </annotation>
        <choice>
          <element name="productFamilyId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the productFamily Id.</documentation>
            </annotation>
          </element>
          <element name="productFamilyName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Family Name.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productAreaType">
        <annotation>
          <documentation>Complex type to represent the for product Area
				info.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productAreaId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the product Area Id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productAreaName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Area Name.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productGroupType">
        <annotation>
          <documentation>Complex type to represent the for product Group
				info.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productGroupId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the product Group Id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productGroupName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Group Name.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productFamilyType">
        <annotation>
          <documentation>Complex type to represent the for product Family
				info.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productFamilyId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the product Family Id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productFamilyName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Family Name.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="bankProductType">
        <annotation>
          <documentation>Complex type to represent the bankProduct Value.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="bankProductId" type="common:generatedPkType">
            <annotation>
              <documentation>Holds the Bank defined product name Id for
						Prodcut
						which
						will
						be used by BANK .</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="bankProductName" type="common:alphaNumericmin1max35">
            <annotation>
              <documentation>Describes the bank Product Keys
						which
						will
						be used
						by
						BANK .</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="categoryType">
        <annotation>
          <documentation>Complex type to represent the category Values.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="categoryId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the category Id which will be used in
						Interestrates and Commission.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="categoryType" type="common:maxString50">
            <annotation>
              <documentation>Describes the category Type which will be used in
						Interest rates and Commission.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="currencyType">
        <annotation>
          <documentation>Complex type to represent the Currency Value.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="currencyId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the Currency Id .</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="currency" type="common:currencyISOCode">
            <annotation>
              <documentation>Describes the Currency Id .</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="bankType">
        <annotation>
          <documentation>Complex type to represent the Currency Value.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="bankId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the bankId .</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="bankCode" type="common:bankIdentificationNumber">
            <annotation>
              <documentation>Describes the bankCode.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productType">
        <annotation>
          <documentation>Complex type to represent the for product info.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the product Id .</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productName" type="common:max35AlphabeticTypeWithSpace">
            <annotation>
              <documentation>Describes the product Name.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="currencyAndAmountType">
        <annotation>
          <documentation>Type for an amount in a given currency</documentation>
        </annotation>
        <sequence>
          <element name="amount" type="common:moniteryAmount"/>
          <element minOccurs="0" name="currency" type="common:currencyISOCode"/>
        </sequence>
      </complexType>
      <complexType name="currencyAndPaymentAmountType">
        <annotation>
          <documentation>Type for an amount in a given currency Payment Product
				and Product Agreement.</documentation>
        </annotation>
        <sequence>
          <element name="amount" type="common:paymentAmount"/>
          <element minOccurs="0" name="currency" type="common:currencyISOCode"/>
        </sequence>
      </complexType>
      <complexType name="currencyAndBigPaymentAmountType">
        <annotation>
          <documentation>Type for an amount in a given currency Payment Product
				and Product Agreement.</documentation>
        </annotation>
        <sequence>
          <element name="amount" type="common:amountType"/>
          <element minOccurs="0" name="currency" type="common:currencyISOCode"/>
        </sequence>
      </complexType>
      <complexType name="currencyAndBigPaymentAmountTypeWithVat">
        <annotation>
          <documentation>Type for an amount in a given currency Payment Product
				and Product Agreement.</documentation>
        </annotation>
        <sequence>
          <element name="amount" type="common:amountType"/>
          <element minOccurs="0" name="totalCharge" type="common:amountType"/>
          <element minOccurs="0" name="vat" type="common:amountType"/>
          <element minOccurs="0" name="currency" type="common:currencyISOCode"/>
        </sequence>
      </complexType>
      <complexType name="currencyAndChargeAmountType">
        <annotation>
          <documentation>Type for an charge amount in a given currency</documentation>
        </annotation>
        <sequence>
          <element name="amount" type="common:chargeAmount"/>
          <element minOccurs="0" name="currency" type="common:currencyISOCode"/>
        </sequence>
      </complexType>
      <complexType name="translationDetails">
        <annotation>
          <documentation>Complex Type for transaction details list</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="languageCode" type="common:languageISOCode">
            <annotation>
              <documentation>Language Code
						Valid values:EN,NB(till now). Any
						language support is there.
						Language Code is optional in input and
						output.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="description" type="common:max255StringType">
            <annotation>
              <documentation>Describes the additional Description for
						translated
						field. This is an optional field in output.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="ipctranslationDetails">
        <annotation>
          <documentation>Complex Type for transaction details list</documentation>
        </annotation>
        <complexContent>
          <extension base="common:translationDetails">
            <sequence>
              <element minOccurs="0" name="internalProductName" type="common:alphaNumericmax75">
                <annotation>
                  <documentation>Translated internal product name of length 75. This will show
								translated value for internal product code name. This is an optional field
								in
								output.</documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <simpleType name="alphaNumericmin1max35">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit alphanumeric that are not otherwise
				restricted by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmin1max20">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit alphanumeric that are not otherwise
				restricted by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="orderDirectionType">
        <annotation>
          <documentation>Order direction when sorting</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ASC">
            <annotation>
              <documentation>Ascending</documentation>
            </annotation>
          </enumeration>
          <enumeration value="DESC">
            <annotation>
              <documentation>Descending</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="BICLevelEnum">
        <annotation>
          <documentation>This enumeration to represent the BIC level.like
				BIC04, BIC06, BIC08 and BIC11.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="BIC04"/>
          <enumeration value="BIC06"/>
          <enumeration value="BIC08"/>
          <enumeration value="BIC11"/>
        </restriction>
      </simpleType>
      <simpleType name="BICMaintStatusEnum">
        <annotation>
          <documentation>This enumeration to represent the status for
				bankIdentifierCode.like
				Completed or Pending.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PENDING"/>
          <enumeration value="COMPLETE"/>
        </restriction>
      </simpleType>
      <simpleType name="ActionEnum">
        <annotation>
          <documentation>This enumeration to represent the action for
				bankIdentifierCode.like
				Modify or Delete.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="DELETED"/>
          <enumeration value="MODIFIED"/>
        </restriction>
      </simpleType>
      <simpleType name="BICMaintAreaEnum">
        <annotation>
          <documentation>This enumeration to represent the PBDAreaName for
				bankIdentifierCode.like
				WBRULE,BANK,BANKAGREEMENT or
				CUSTOMERAGREEMENT .</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="WBRULE"/>
          <enumeration value="BANK"/>
          <enumeration value="BANKAGREEMENT"/>
          <enumeration value="CUSTOMERAGREEMENT"/>
        </restriction>
      </simpleType>
      <simpleType name="codeWordValidForEnum">
        <restriction base="string">
          <enumeration value="INWARD">
            <annotation>
              <documentation>Describes if a code word will be used on incoming
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="OUTWARD">
            <annotation>
              <documentation>Describes if a code word will be used on outgoing
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BOTH">
            <annotation>
              <documentation>Describes if a code word will be used both on
						incoming and outgoing payments</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="codeWordValidDirection">
        <restriction base="string">
          <enumeration value="INWARD">
            <annotation>
              <documentation>Describes if a code word will be used on incoming
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="OUTWARD">
            <annotation>
              <documentation>Describes if a code word will be used on outgoing
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="ANY">
            <annotation>
              <documentation>Describes if a code word will be used on
						outgoing/incoming
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BANKTOBANK">
            <annotation>
              <documentation>Describes if a code word will be used on
						outgoing/incoming
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="TOTALPOSTING">
            <annotation>
              <documentation>Describes if a code word will be used on
						outgoing/incoming
						payments</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="paymentDirectionEnum">
        <restriction base="string">
          <enumeration value="INCOMING">
            <annotation>
              <documentation>Describes if a payment direction will be used on
						incoming
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="OUTGOING">
            <annotation>
              <documentation>Describes if a payment direction will be used on
						outgoing
						payments</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="alphabetic4CharactersString">
        <annotation>
          <documentation>Restriction on a string value to contain 4 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}a-zA-Z]{4}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphanumeric4CharactersString">
        <annotation>
          <documentation>Restriction on a string value to contain 4 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}a-zA-Z]{4}"/>
        </restriction>
      </simpleType>
      <complexType name="previousOrNextDate">
        <annotation>
          <documentation>Describes the previous or next date</documentation>
        </annotation>
        <sequence>
          <choice>
            <element name="previousValidDate" type="common:date"/>
            <element name="nextValidDate" type="common:date"/>
          </choice>
        </sequence>
      </complexType>
      <simpleType name="min1max140String">
        <annotation>
          <documentation>String supporting 140 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,140}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString105">
        <annotation>
          <documentation>String supporting 105 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,105}"/>
        </restriction>
      </simpleType>
      <simpleType name="PBDAreaEnum">
        <annotation>
          <documentation>This enumeration to represent the PBDAreaName like
				CG,BG,BI .</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="CORPORATE_GROUP"/>
          <enumeration value="BANK_GROUP"/>
          <enumeration value="BANK"/>
          <enumeration value="BANK_STANDARDS"/>
          <enumeration value="CASH_POOL_STANDARDS"/>
          <enumeration value="CASH_POOL_TYPES"/>
          <enumeration value="MARKET_INTEREST_RATE_TYPES"/>
          <enumeration value="OBS_ACCOUNTS"/>
          <enumeration value="ICP_ACCOUNTS"/>
          <enumeration value="PRODUCT_MAPPING"/>
          <enumeration value="CA"/>
          <enumeration value="CCT"/>
          <enumeration value="CRSP"/>
          <enumeration value="CRSPCD"/>
          <enumeration value="SYSTEM_CURRENCY"/>
          <enumeration value="BANK_CURRENCY"/>
          <enumeration value="PRODUCT_MODULE"/>
          <enumeration value="PRODUCT_AGREEMENT"/>
          <enumeration value="WBRULE"/>
          <enumeration value="BANKCOUNTRY"/>
          <enumeration value="CODEWORDS"/>
          <enumeration value="BANKAGREEMENT"/>
          <enumeration value="CUSTOMERAGREEMENT"/>
          <enumeration value="PAYMENTPRODUCT"/>
          <enumeration value="INTEREST_ADJUSTMENT"/>
          <enumeration value="PAYMENTPRODUCTAGREEMENT"/>
          <enumeration value="PAYMENTSTANDARDAGREEMENT"/>
          <enumeration value="APPLYSTANDARDAGREEMENT"/>
          <enumeration value="PRODUCTMAP"/>
          <enumeration value="EXCHANGE_RATE"/>
          <enumeration value="CORRESPONDENT"/>
          <enumeration value="DEFAULTBANK"/>
          <enumeration value="ACCOUNT_REPLACEMENT_AGREEMENT"/>
          <enumeration value="AGENT_BANK"/>
          <enumeration value="AGENCY_PARAMETER"/>
          <enumeration value="FORWARD_ACCOUNT_AGREEMENT"/>
          <enumeration value="NUMBER_OF_VERIFIER"/>
          <enumeration value="CHARGE_ACCUMULATION_AGREEMENT"/>
          <enumeration value="SWEEPING_TOPPING_AGREEMENT"/>
          <enumeration value="STANDARD_SETTLEMENT_INSTRUCTION"/>
          <enumeration value="GLOBAL_LIQUIDITY_TYPES"/>
          <enumeration value="MESSAGE_RELEASE_SCHEDULER"/>
          <enumeration value="RESERVATION_DAYS"/>
          <enumeration value="SCHEDULER_PARAMETERS"/>
          <enumeration value="GENERAL_PAYMENT_PARAMETERS"/>
          <enumeration value="ACCESS_PAYMENT_PARAMETERS"/>
          <enumeration value="PAYMENT_PARAMETERS"/>
          <enumeration value="FUNDS_CHECK_PAYMENT_PARAMETERS"/>
          <enumeration value="CHARGE_ENGINE_PAYMENT_PARAMETERS"/>
          <enumeration value="PAYMENT_ENGINE_PAYMENT_PARAMETERS"/>
          <enumeration value="FOREIGN_EXCHANGE_PAYMENT_PARAMETERS"/>
          <enumeration value="INTERNAL_ACCOUNTS_PAYMENT_PARAMETERS"/>
          <enumeration value="STANDING_ORDER_PAYMENT_PARAMETERS"/>
          <enumeration value="SETTLEMENT_MECHANISM"/>
          <enumeration value="ROUTING_PRIORITY"/>
          <enumeration value="SETTLEMENT_PRIORITY"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max4Alphanumeric">
        <annotation>
          <documentation>Restriction on a string value to contain 4 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max12numericvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="0"/>
          <totalDigits value="12"/>
          <minExclusive value="0"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max10Alphanumeric">
        <annotation>
          <documentation>Restriction on a string value to contain 4 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="max120AlphaNumericWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,120}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max80Alphanumeric">
        <annotation>
          <documentation>Restriction on a string value to contain 4 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,80}"/>
        </restriction>
      </simpleType>
      <simpleType name="max12AlphaNumericWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,12}"/>
        </restriction>
      </simpleType>
      <simpleType name="max35AlphaNumericWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="max10AlphaNumeric">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="max20StringNorwegianType">
        <annotation>
          <documentation>String supporting 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="max10StringNorwegianType">
        <annotation>
          <documentation>String supporting 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="productIdType">
        <annotation>
          <documentation>This will be right zero-padded before sent to core.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="max35StringType">
        <annotation>
          <documentation>Value restricted to min of 1 and max of 35 characters</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
          <minLength value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="max3StringType">
        <annotation>
          <documentation>ISO 4217 alpha code (3 positions)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{3}"/>
        </restriction>
      </simpleType>
      <simpleType name="max5decimalvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit decimal with five digit fraction that are
				not otherwise restricted by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="changeStatus">
        <annotation>
          <documentation>Describes the change status.
				Supported Status are:
				ACTIVE, AWAITING_VERIFICATION, UNDER_VERIFICATION", VERIFIED",
				INACTIVE,
				FUTURE, CLOSED.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE"/>
          <enumeration value="AWAITING_VERIFICATION"/>
          <enumeration value="UNDER_VERIFICATION"/>
          <enumeration value="VERIFIED"/>
          <enumeration value="INACTIVE"/>
          <enumeration value="FUTURE"/>
          <enumeration value="CLOSED"/>
        </restriction>
      </simpleType>
      <simpleType name="changeStatusWithAll">
        <annotation>
          <documentation>Describes the change status.
				Supported Status are:
				ACTIVE, AWAITING_VERIFICATION, UNDER_VERIFICATION", VERIFIED",
				INACTIVE,
				FUTURE, CLOSED and ALL.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ALL"/>
          <enumeration value="ACTIVE"/>
          <enumeration value="AWAITING_VERIFICATION"/>
          <enumeration value="UNDER_VERIFICATION"/>
          <enumeration value="VERIFIED"/>
          <enumeration value="INACTIVE"/>
          <enumeration value="FUTURE"/>
          <enumeration value="CLOSED"/>
        </restriction>
      </simpleType>
      <simpleType name="max35AlphaNumericType">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 35 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="yesOrNoStatus">
        <annotation>
          <documentation>Describes the Yes or No status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="YES"/>
          <enumeration value="NO"/>
        </restriction>
      </simpleType>
      <simpleType name="yesNoAndBothStatus">
        <annotation>
          <documentation>Describes the Yes No and BOTH status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="YES"/>
          <enumeration value="NO"/>
          <enumeration value="BOTH"/>
        </restriction>
      </simpleType>
      <simpleType name="trueOrFalseStatus">
        <annotation>
          <documentation>Describes the True or False status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="TRUE"/>
          <enumeration value="FALSE"/>
        </restriction>
      </simpleType>
      <simpleType name="trueFalseAndAnyStatus">
        <annotation>
          <documentation>Describes the True, False and Any status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="TRUE"/>
          <enumeration value="FALSE"/>
          <enumeration value="ANY"/>
        </restriction>
      </simpleType>
      <simpleType name="messageType">
        <annotation>
          <documentation>Describes the message type.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PAYMENT"/>
          <enumeration value="COVER"/>
          <enumeration value="FILE"/>
          <enumeration value="INVESTIGATION"/>
        </restriction>
      </simpleType>
      <simpleType name="messageFormat">
        <annotation>
          <documentation>Describes the message format.String supporting Alpha
				Numeric type with a maxlength
				of 35</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9 ]{1,40}"/>
        </restriction>
      </simpleType>
      <simpleType name="min4max35AlphaNumericWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{4,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="emailId">
        <annotation>
          <documentation>Describes the pattern for contact person's email</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z0-9.@_]{1,70}"/>
        </restriction>
      </simpleType>
      <simpleType name="paymentPriority">
        <annotation>
          <documentation>This enumeration to represent the priority of the
				payment transaction</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="NORMAL"/>
          <enumeration value="HIGH"/>
        </restriction>
      </simpleType>
      <simpleType name="closeToSEPA">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 4.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="dateIfHoliday">
        <annotation>
          <documentation>Enumeration for dateIfHoliday.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="MOVE_TO_NEXT_BUSINESS_DAY"/>
          <enumeration value="MOVE_TO_FORMER_BUSINESS_DAY"/>
          <enumeration value="REJECT"/>
        </restriction>
      </simpleType>
      <simpleType name="payAwayCurrency">
        <annotation>
          <documentation>Enumeration for the handling of incoming pay-aways.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="OK"/>
          <enumeration value="EXCEPTION"/>
        </restriction>
      </simpleType>
      <simpleType name="settlementTypeEnum">
        <annotation>
          <documentation>Describes allowed for Settlement types.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="SEPA"/>
          <enumeration value="AGENT"/>
          <enumeration value="S"/>
          <enumeration value="MASS"/>
          <enumeration value="ORDINARY_MECHANISM"/>
          <enumeration value="SEPA_SALA"/>
        </restriction>
      </simpleType>
      <simpleType name="standardSettlementInstruction">
        <annotation>
          <documentation>Enumeration for Standard Settlement Instruction.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="DEFAULT_BANK"/>
          <enumeration value="EXCEPTION"/>
        </restriction>
      </simpleType>
      <simpleType name="blockRateSetting">
        <annotation>
          <documentation>Enumeration for PE Block Rate.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PE_BLOCK_RATE_MODULE"/>
          <enumeration value="TREASURY_SYSTEM"/>
        </restriction>
      </simpleType>
      <simpleType name="marketLedger">
        <annotation>
          <documentation>Enumeration for Market Ledger.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="EVRY_LEDGER"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max2digit24maxvalue">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 24.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="24"/>
        </restriction>
      </simpleType>
      <simpleType name="snapshotTimeEnum">
        <annotation>
          <documentation>This enumeration to represent the SnapshotTime in half
				an hour intervals like
				06:00,06:30,07:00,07:30 .. .Range range of
				06:00 to 18:00</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="06:00"/>
          <enumeration value="06:30"/>
          <enumeration value="07:00"/>
          <enumeration value="07:30"/>
          <enumeration value="08:00"/>
          <enumeration value="08:30"/>
          <enumeration value="09:00"/>
          <enumeration value="09:30"/>
          <enumeration value="10:00"/>
          <enumeration value="10:30"/>
          <enumeration value="11:00"/>
          <enumeration value="11:30"/>
          <enumeration value="12:00"/>
          <enumeration value="12:30"/>
          <enumeration value="13:00"/>
          <enumeration value="13:30"/>
          <enumeration value="14:00"/>
          <enumeration value="14:30"/>
          <enumeration value="15:00"/>
          <enumeration value="15:30"/>
          <enumeration value="16:00"/>
          <enumeration value="16:30"/>
          <enumeration value="17:00"/>
          <enumeration value="17:30"/>
          <enumeration value="18:00"/>
        </restriction>
      </simpleType>
      <simpleType name="checktolerance">
        <annotation>
          <documentation>Decimal type used for funds check tolerance.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="2"/>
          <totalDigits value="5"/>
          <maxInclusive value="100.00"/>
          <minInclusive value="-100.00"/>
        </restriction>
      </simpleType>
      <simpleType name="holidayTypeEnum">
        <annotation>
          <documentation>Describes the holiday type.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="H"/>
        </restriction>
      </simpleType>
      <simpleType name="alphabetic140CharactersString">
        <annotation>
          <documentation>Restriction on a string value to contain 140 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="140"/>
        </restriction>
      </simpleType>
      <simpleType name="statusActiveInactive">
        <annotation>
          <documentation>Enumeration for Status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE">
            <annotation>
              <documentation>Describes active status.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="INACTIVE">
            <annotation>
              <documentation>Describes Inactive status.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="statusActiveInactiveFuture">
        <annotation>
          <documentation>Describes State status as Active, Inactive, Future</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE"/>
          <enumeration value="INACTIVE"/>
          <enumeration value="FUTURE"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max50AlphaNumericWithSpaceType">
        <annotation>
          <documentation>Allows alphabets (any case), numbers and space with
				length 1 to 50</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9 ]{1,50}"/>
        </restriction>
      </simpleType>
      <simpleType name="max4AlphaNumeric">
        <annotation>
          <documentation>ISO 4217 alpha code (4 positions)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="max4Numeric">
        <annotation>
          <documentation>Allows digits/numbers with
				length 1 to 4</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax140">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 140 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,140}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmin1max30">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit alphanumeric that are not otherwise
				restricted by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max10NumericValue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="long">
          <pattern value="[0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="weekDays">
        <annotation>
          <documentation>List of Valid weekDays - MONDAY...FRIDAY..No Short
				Form Allowed</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="MONDAY"/>
          <enumeration value="TUESDAY"/>
          <enumeration value="WEDNESDAY"/>
          <enumeration value="THURSDAY"/>
          <enumeration value="FRIDAY"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max3StringTypeWithSpace">
        <annotation>
          <documentation>Type for representing a AlphaNumericString with 3
				characters like service code only with 3 character</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="3"/>
          <pattern value="[\w\W ]{1,3}"/>
        </restriction>
      </simpleType>
      <simpleType name="sortDirection">
        <annotation>
          <documentation>Enumeration for Sort Direction.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ASC">
            <annotation>
              <documentation>Ascending</documentation>
            </annotation>
          </enumeration>
          <enumeration value="DESC">
            <annotation>
              <documentation>Descending</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="adviceForBank">
        <annotation>
          <documentation>Describes the advice for Bank.
				Supported Status are:
				"DEBIT", "CREDIT", "DEBIT/CREDIT", "NO".</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="DEBIT"/>
          <enumeration value="CREDIT"/>
          <enumeration value="DEBIT/CREDIT"/>
          <enumeration value="NO"/>
        </restriction>
      </simpleType>
      <simpleType name="transactionType">
        <annotation>
          <documentation>Describes the Transaction Type.
				Supported Status are:
				"COPA".</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="COPA"/>
        </restriction>
      </simpleType>
      <simpleType name="max4StringAsNumberOnly">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max3NumericValue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{1,3}"/>
        </restriction>
      </simpleType>
      <simpleType name="max3DigitStrValue">
        <annotation>
          <documentation>This is just a restriction chosen for 3 digits base as
				String(0-9 which can also support prefix as '0')</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{3}"/>
        </restriction>
      </simpleType>
      <simpleType name="max4StringWithoutSpace">
        <annotation>
          <documentation>This is just a restriction chosen for 4 digits base as
				String (Alphabets Only) without space</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}]{4,4}"/>
        </restriction>
      </simpleType>
      <complexType name="auditInfo">
        <annotation>
          <documentation>This type contains fields of Audit Information such Add
			User, Modified User,
			Add Date and Modified Date</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="addDate" type="date">
            <annotation>
              <documentation>Describes the date on which a record was created.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addUser" type="common:userId">
            <annotation>
              <documentation>Describes who created a record.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="modifiedDate" type="date">
            <annotation>
              <documentation>Describes the date on which a record was modified.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="modifiedUser" type="common:userId">
            <annotation>
              <documentation>Describes who modified a record.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="min1max2digit30maxvalue">
        <annotation>
          <documentation>Integer supporting min value 1 and max value 30.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max3digit">
        <annotation>
          <documentation>Integer supporting 3 integers.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
    </schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.pbd.fs.edb.com:domain:paymentparameters:v4_5" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:paymentparameters="urn:srv.pbd.fs.edb.com:domain:paymentparameters:v4_5" xmlns:common="urn:srv.pbd.fs.edb.com:domain:common:v1_0">
      <xs:import namespace="urn:srv.pbd.fs.edb.com:domain:common:v1_0"/>
      <xs:complexType name="paymentParametersDetailsData">
        <xs:annotation>
          <xs:documentation>Describes the Payment parameters Information in PBD
				Systems.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="activePaymentParameters" type="paymentparameters:paymentParametersInformation">
            <xs:annotation>
              <xs:documentation>Payment Parameters details for GUI.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="futurePaymentParameters" type="paymentparameters:paymentParametersInformation">
            <xs:annotation>
              <xs:documentation>payment parameters details for GUI.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paymentParametersInformation">
        <xs:annotation>
          <xs:documentation>Describes the Payment parameters Information in PBD
				Systems.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:basePersistentEntityType">
            <xs:sequence>
              <xs:element minOccurs="0" name="paymentParametersId" type="common:generatedPkType">
                <xs:annotation>
                  <xs:documentation>Describes the Payment parameters Id from
								production table.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="paymentParametersDetails" type="paymentparameters:paymentParametersDetails">
                <xs:annotation>
                  <xs:documentation>Payment parameters Details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="paymentEngineParametersDetails" type="paymentparameters:paymentEngineParametersDetails">
                <xs:annotation>
                  <xs:documentation>Payment Engine parameters Details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="changeStatus" type="common:changeStatus">
                <xs:annotation>
                  <xs:documentation>Describes the change status.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="changeId" type="common:generatedPkType">
                <xs:annotation>
                  <xs:documentation>Describes the Change ID.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="paymentParametersDetails">
        <xs:annotation>
          <xs:documentation>Describes the Payment parameters in PBD Systems.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="closeToSEPA" type="common:closeToSEPA">
            <xs:annotation>
              <xs:documentation>Allows users to choose if they want to provide a
						“close to SEPA” warning for the user if user provides payment
						input that nearly fulfills SEPA requirements.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cutOffTime" type="common:timeFormat">
            <xs:annotation>
              <xs:documentation>Cut-Off time for capturing Payment Instruction.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="maxReqExecDate" type="common:min1max2digit24maxvalue">
            <xs:annotation>
              <xs:documentation>The maximum number of allowed Request execution
						months.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="peAgentBIC" type="common:bankIdentifierCode">
            <xs:annotation>
              <xs:documentation>Indicates authorized foreign exchange bank the
						bank uses.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="reqDateIsBankHoliday" type="common:dateIfHoliday">
            <xs:annotation>
              <xs:documentation>Allows user to choose rules of how payments are
						set to execute on a bank holiday.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="fundsCheckUsed" type="paymentparameters:fundsCheckUsed">
            <xs:annotation>
              <xs:documentation>Describes Funds Check Reservation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fundsCheckTolerance" type="common:checktolerance">
            <xs:annotation>
              <xs:documentation>Describes Funds Check Tolerance.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fundsCheckToleranceMin" type="common:toleranceMin">
            <xs:annotation>
              <xs:documentation>Describes Funds Check Tolerance Minimum.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fundsCheckRetryDays" type="common:retryDays">
            <xs:annotation>
              <xs:documentation>Describes Funds Check Tolerance Retry Days.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="foreignAccount" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Describes Foreign Account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="minDomesticAmount" type="common:amount">
            <xs:annotation>
              <xs:documentation>Describes the minimum allowed amount to send as
						a domestic payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="minInternationalAmt" type="common:amount">
            <xs:annotation>
              <xs:documentation>Describes the minimum allowed amount to send as
						an international payment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="statusStopToRejectDay" type="common:max3digit">
            <xs:annotation>
              <xs:documentation>Describes in how many days a payment will be
						status “Stopped” before it is moved to status “Rejected”.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="payAwayBaseCurrency" type="common:payAwayCurrency">
            <xs:annotation>
              <xs:documentation>Describes handling of incoming pay-aways in base
						currency Type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="twoBanksInRouting" type="paymentparameters:twoBanksInRouting">
            <xs:annotation>
              <xs:documentation>Describes handling of handling of two banks in
						routing.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="payAwayCurrency" type="common:payAwayCurrency">
            <xs:annotation>
              <xs:documentation>Describes handling of incoming pay-aways in
						currency Type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ssiNotFound" type="common:standardSettlementInstruction">
            <xs:annotation>
              <xs:documentation>Describes handling of payment when SSI is not
						found for last bank, and last bank is not in the country of the
						payment currency.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="rgltryReportAmtMgn" type="common:amount">
            <xs:annotation>
              <xs:documentation>Describes Regulatory reporting amount margin for
						regulatory reporting feature for payments.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fxRateMaxAmt" type="common:amount">
            <xs:annotation>
              <xs:documentation>Describes cut-off limit on the amount used for
						Foreign Exchange.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="fxRateWarningPercentage" type="common:percentage">
            <xs:annotation>
              <xs:documentation>Describes warning limit in percentage on the
						change made when rates are updated in PBD Foreign Exchange Rates.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="fxRateBlockingPercentage" type="common:percentage">
            <xs:annotation>
              <xs:documentation>Describes blocking limit in percentage on the
						change made when rates are updated in PBD Foreign Exchange Rates.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fxRateSnapshotTime" type="common:snapshotTimeEnum">
            <xs:annotation>
              <xs:documentation>Describes time of day where the system will take
						a daily rates snapshot in PBD Foreign Exchange rates.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="peBlockRateSet" type="common:blockRateSetting">
            <xs:annotation>
              <xs:documentation>Describes if payments ready for block course
						setting is to be handled in the PE Block Rate Module or the banks
						treasury system.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="peSetSeparateBuySellMidRate" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Toggles the use of single or separate buy / sell
						mid rate in Block rate setting screen.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashRateAllowed" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Describes use of cash rates in EVRY GUI.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="fundsCheckReservation" type="common:max3digit">
            <xs:annotation>
              <xs:documentation>Describes amount of days the system will hold a
						reservation without capitalization, before it is cancelled by
						thesystem.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="pvtMktLedger" type="common:marketLedger">
            <xs:annotation>
              <xs:documentation>Describes what ledger the bank uses for private
						market customers.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="pvtMktLedgerOpenTime" type="common:timeFormat">
            <xs:annotation>
              <xs:documentation>Describes the opening hours of the private
						market ledger</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="pvtMktLedgerCloseTime" type="common:timeFormat">
            <xs:annotation>
              <xs:documentation>Describes the closing hours of the private
						market ledger.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="corpMktLedger" type="common:marketLedger">
            <xs:annotation>
              <xs:documentation>Describes what ledger the bank uses for
						Corporate market customers.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="corpMktLedgerOpenTime" type="common:timeFormat">
            <xs:annotation>
              <xs:documentation>Describes the opening hours of the corporate
						market ledger.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="corpMktLedegerCloseTime" type="common:timeFormat">
            <xs:annotation>
              <xs:documentation>Describes the closing hours of the corporate
						market ledger.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="soDayBeforeDueDate" type="common:max3digit">
            <xs:annotation>
              <xs:documentation>Describes number of days before due date shall
						the payment instruction generated from the Standing Order
						agreement show in the due date list.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="soMinAmt" type="common:amount">
            <xs:annotation>
              <xs:documentation>Describes SO minimum amount.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="paymentEngineId" type="common:generatedPkType">
            <xs:annotation>
              <xs:documentation>Describes the payment engine id.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="startDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>The date when the parameters will be activated.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="endDate" type="xs:date">
            <xs:annotation>
              <xs:documentation>The date when the parameters will be closed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cancelRequestAvailable" type="common:max3digit">
            <xs:annotation>
              <xs:documentation>This indicates for how many days payment will be
						available after completed with an option to cancel request.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="clearClosedSOAgreements" type="common:min1Max2Digit10MaxValue">
            <xs:annotation>
              <xs:documentation>This indicates how long the agreement will show
						in the end user client after it has been closed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="closeInactiveSOAgreements" type="common:min1max2digit24maxvalue">
            <xs:annotation>
              <xs:documentation>This indicates when to delete a standing order
						agreement that has not been used for long time in months.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="limitAutoHandlingChargeRequest" type="common:max3digit">
            <xs:annotation>
              <xs:documentation>This is the limit for automatic handling of
						charge request.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="baseBankCurrencyCode" type="common:currencyISOCode">
            <xs:annotation>
              <xs:documentation>This indicate the currency code for base bank.
						Its Mandatory in response and not required in Create/Update
						operation's input.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cashPositionInterfaceContent" type="paymentparameters:cashPositionInterfaceContent">
            <xs:annotation>
              <xs:documentation>This Indicates a switch in PBD to tell how much
						information to deliver.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="separateLetterFunctionality" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>This parameter will decide if the option to send
						the excess information as a separate letter is active for the bank
						or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="intermediaryBankProvidedByCustomer" type="paymentparameters:twoBanksInRouting">
            <xs:annotation>
              <xs:documentation>Allows bank to choose if payments containing an
						intermediary bank
						will be sent to Exception during PE processing.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="internalAccountsDetails" type="paymentparameters:internalAccountsDetails"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="standingOrderDetails" type="paymentparameters:standingOrderDetails"/>
          <xs:element minOccurs="0" name="transactionGate" type="paymentparameters:transactionGate">
            <xs:annotation>
              <xs:documentation>Describes handling of transaction gates.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="defaultReportingCodeInward" type="common:alphaNumericmin1max10">
            <xs:annotation>
              <xs:documentation>Default Reporting Code Inward regulatory code</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="defaultReportingCodeBankToBank" type="common:alphaNumericmin1max10">
            <xs:annotation>
              <xs:documentation>Default Reporting code bank to bank regulatory
						code</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="twoBanksInRouting">
        <xs:annotation>
          <xs:documentation>Describes list of routing Methods.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PROCEED"/>
          <xs:enumeration value="EXCEPTION"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="fundsCheckUsed">
        <xs:annotation>
          <xs:documentation>Different type of fund check used.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="NOT_APPLICABLE"/>
          <xs:enumeration value="FTS"/>
          <xs:enumeration value="FND"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="cashPositionInterfaceContent">
        <xs:annotation>
          <xs:documentation>Describes list of cash Position interface content.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PURE_CASH_POSITION_DATA"/>
          <xs:enumeration value="CASH_POSITION_WITH_CURRENCY_MOVEMENTS"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="userSegmentType">
        <xs:annotation>
          <xs:documentation>Different type of user segment available.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BANK_USER"/>
          <xs:enumeration value="PRIVATE_USER"/>
          <xs:enumeration value="CORPORATE_USER"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="triggerType">
        <xs:annotation>
          <xs:documentation>Different type of Trigger available.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PERIODIC"/>
          <xs:enumeration value="BALANCE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="standingOrderDetails">
        <xs:annotation>
          <xs:documentation>Describes the Trigger, User segments and period
				details.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="triggerType" type="paymentparameters:triggerType">
            <xs:annotation>
              <xs:documentation>Different type of triggers available.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="userSegment" type="paymentparameters:userSegmentType">
            <xs:annotation>
              <xs:documentation>Different user segment available.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="period" type="common:maxString20"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="internalAccountsDetails">
        <xs:annotation>
          <xs:documentation>Describes the account and system/function
				details.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="systemFunction" type="common:maxAlphaNumeric40SpeicalcharWithSpace">
            <xs:annotation>
              <xs:documentation>System/function correspond to account.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:choice>
            <xs:element minOccurs="0" name="account" type="common:bbanAccountNumberType">
              <xs:annotation>
                <xs:documentation>Account number for immediate storage of funds.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="generalLedgerDetails" type="paymentparameters:generalLedgerDetails">
              <xs:annotation>
                <xs:documentation>General Ledger Account details for Charge
							Accumulator System/Function.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="paymentEngineParametersDetails">
        <xs:annotation>
          <xs:documentation>Describes the Payment Engine parameters in PBD
				Systems.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="engineName" type="common:max20StringNorwegianType">
            <xs:annotation>
              <xs:documentation>Describes Payment Engine Name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="batchBookSupport" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Describes batch booking support.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="engineReservationSupport" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Describes reservation support.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="engineInterface" type="common:max10StringNorwegianType">
            <xs:annotation>
              <xs:documentation>Describes Payment Engine Interface.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="generalLedgerDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="generalLedgerAccount1" type="common:min1Max10NumericValue">
            <xs:annotation>
              <xs:documentation>First General Ledger Account for Charge
						Accumulator System/Function.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="generalLedgerAccount2" type="common:min1Max10NumericValue">
            <xs:annotation>
              <xs:documentation>Second General Ledger Account for Charge
						Accumulator System/Function.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="transactionGate">
        <xs:annotation>
          <xs:documentation>Different types of transaction gates used.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="INNLES"/>
          <xs:enumeration value="TRANSACTION_GATE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="accessPaymentParametersDetails">
        <xs:annotation>
          <xs:documentation>Describes the Access Payment parameters in PBD
				Systems.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:basePersistentEntityType">
            <xs:sequence>
              <xs:element minOccurs="0" name="accessPaymentParametersId" type="common:generatedPkType">
                <xs:annotation>
                  <xs:documentation>Reference Id for
								access payment
								parameter.
								(Applicable for only
								accessPaymnetParameter Update/Read Operation
								Input Request and Mandatory for all output Operations except
								delete)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="foreignAccountSupported" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Describes whether the foreign account is
								supported or not</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="gpiFunctionality" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Describes whether the GPI Functionality is
								supported or not</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="transactionGate" type="paymentparameters:transactionGate">
                <xs:annotation>
                  <xs:documentation>Describes which transaction gate the bank is
								using.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="separateLetterFunctionality" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>This parameter will decide if the option to
								send
								the excess information as a separate letter is active for
								the bank
								or not.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="evryFundsCheckUsed" type="paymentparameters:fundsCheckUsed">
                <xs:annotation>
                  <xs:documentation>Describes Funds Check Used.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="fundsCheckModulePvtMktLedger" type="paymentparameters:marketLedger">
                <xs:annotation>
                  <xs:documentation>Describes what ledger the bank uses for
								private
								market customers.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="pvtMktLedgerOpenTime" type="common:timeFormat">
                <xs:annotation>
                  <xs:documentation>Describes the opening hours of the private
								market ledger</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="pvtMktLedgerCloseTime" type="common:timeFormat">
                <xs:annotation>
                  <xs:documentation>Describes the closing hours of the private
								market ledger.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="fundsCheckModuleCorpMktLedger" type="paymentparameters:marketLedger">
                <xs:annotation>
                  <xs:documentation>Describes what ledger the bank uses for
								Corporate market customers.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="corpMktLedgerOpenTime" type="common:timeFormat">
                <xs:annotation>
                  <xs:documentation>Describes the opening hours of the corporate
								market ledger.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="corpMktLedegerCloseTime" type="common:timeFormat">
                <xs:annotation>
                  <xs:documentation>Describes the closing hours of the corporate
								market ledger.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="startDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be activated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="endDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be closed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="status" type="common:changeStatus">
                <xs:annotation>
                  <xs:documentation>Describes the change status.This is the state
								of the Schedule based on the start and end date.
								This is optional
								in input and mandatory in output</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="fundsCheckPaymentParametersDetails">
        <xs:annotation>
          <xs:documentation>Complex type to represent the request to create
				Funds Check Payment Parameters</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:basePersistentEntityType">
            <xs:sequence>
              <xs:element minOccurs="0" name="fundsCheckPaymentParametersId" type="common:generatedPkType">
                <xs:annotation>
                  <xs:documentation>Reference Id for
								Funds Check Payment Parameters.
								(Applicable for only
								fundsCheckPaymentParameters Update/Read
								Operation Input Request
								and Mandatory for all output Operations
								except delete)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="fundsCheckReservation" type="common:max3digit">
                <xs:annotation>
                  <xs:documentation>Describes amount of days the system will hold
								a
								reservation without capitalization, before it is cancelled by
								thesystem.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="fundsCheckTolerance" type="common:checktolerance">
                <xs:annotation>
                  <xs:documentation>Describes Funds Check Tolerance.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="fundsCheckToleranceMin" type="common:toleranceMin">
                <xs:annotation>
                  <xs:documentation>Describes Funds Check Tolerance Minimum.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="fundsCheckRetryDaysPayments" type="common:retryDays">
                <xs:annotation>
                  <xs:documentation>Describes Funds Check Tolerance Retry Days Payments.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="fundsCheckRetryDaysLoan" type="common:retryDays">
                <xs:annotation>
                  <xs:documentation>Describes Funds Check Tolerance Retry Days Loan.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="startDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>Start date for this record.The date when the
								parameters will be
								activated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="endDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>End date for this record.The date when the
								parameters will be
								closed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="status" type="common:changeStatus">
                <xs:annotation>
                  <xs:documentation>Change status for this record. It can be active
								/ future etc.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="fxPaymentParametersDetails">
        <xs:annotation>
          <xs:documentation>Describes the Foreign Exchange Payment parameters
				in PBD
				Systems.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:basePersistentEntityType">
            <xs:sequence>
              <xs:element minOccurs="0" name="fxPaymentParametersId" type="common:generatedPkType">
                <xs:annotation>
                  <xs:documentation>Foreign Exchange Payment parameters
								referenceId</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="fxRateMaxAmt" type="common:amount">
                <xs:annotation>
                  <xs:documentation>Describes cut-off limit on the amount used for
								Foreign Exchange.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="fxRateWarningPercentage" type="paymentparameters:maxAmntPercentage">
                <xs:annotation>
                  <xs:documentation>Describes warning limit in percentage on the
								change made when rates are updated in PBD Foreign Exchange
								Rates.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="fxRateBlockingPercentage" type="paymentparameters:maxAmntPercentage">
                <xs:annotation>
                  <xs:documentation>Describes blocking limit in percentage on the
								change made when rates are updated in PBD Foreign Exchange
								Rates.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="fxRateSnapshotTime" type="common:snapshotTimeEnum">
                <xs:annotation>
                  <xs:documentation>Describes time of day where the system will
								take
								a daily rates snapshot in PBD Foreign Exchange rates.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="peBlockRateSet" type="paymentparameters:rateSettings">
                <xs:annotation>
                  <xs:documentation>Describes if payments ready for block course
								setting is to be handled in the PE Block Rate Module or the
								banks
								treasury system.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="peSetSeparateBuySellMidRate" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Toggles the use of single or separate buy /
								sell
								mid rate in Block rate setting screen.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="cashRateAllowed" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Describes use of cash rates in EVRY GUI.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="setParameterRate" type="common:timeFormat">
                <xs:annotation>
                  <xs:documentation>Describes time when system will copy active
							 mid rate for all currencies and insert into field parameter rate.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="startDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be activated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="endDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be closed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="status" type="common:changeStatus">
                <xs:annotation>
                  <xs:documentation>Describes the status.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="rateSettings">
        <xs:annotation>
          <xs:documentation>Different types of rate settings used.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PE_BLOCK_RATE_MODULE"/>
          <xs:enumeration value="TREASURY_SYSTEM"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="maxAmntPercentage">
        <xs:annotation>
          <xs:documentation>Describes the percentage for Foreign exchange
				Payment parameters in PBD
				Systems.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
          <xs:totalDigits value="4"/>
          <xs:minInclusive value="0"/>
          <xs:maxInclusive value="99"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="generalPaymentParametersDetails">
        <xs:annotation>
          <xs:documentation>Describes the General Payment parameters in PBD
				Systems.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:basePersistentEntityType">
            <xs:sequence>
              <xs:element minOccurs="0" name="generalPaymentParametersId" type="common:generatedPkType">
                <xs:annotation>
                  <xs:documentation>Reference Id for
								general payment
								parameter.
								(Applicable for only
								generalPaymentParameters Update/Read
								Operation
								Input Request and Mandatory for all output Operations
								except
								delete)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="cancelRequestAvailable" type="common:max3digit">
                <xs:annotation>
                  <xs:documentation>This indicates for how many days payment will
								be
								available after completed with an option to cancel request.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="closeToSEPA" type="common:closeToSEPA">
                <xs:annotation>
                  <xs:documentation>Allows users to choose if they want to provide
								a
								“close to SEPA” warning for the user if user provides payment
								input that nearly fulfills SEPA requirements.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="limitAutoHandlingChargeRequest" type="common:max3digit">
                <xs:annotation>
                  <xs:documentation>This is the limit for automatic handling of
								charge request.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="maxReqFrwdExecDate" type="common:min1max2digit24maxvalue">
                <xs:annotation>
                  <xs:documentation>The maximum number of allowed Request execution
								months.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="minDomesticAmount" type="common:amount">
                <xs:annotation>
                  <xs:documentation>Describes the minimum allowed amount to send
								as
								a domestic payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="minInternationalAmt" type="common:amount">
                <xs:annotation>
                  <xs:documentation>Describes the minimum allowed amount to send
								as
								an international payment.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="statusStopToRejectDay" type="common:max3digit">
                <xs:annotation>
                  <xs:documentation>Describes in how many days a payment will be
								status “Stopped” before it is moved to status “Rejected”.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="payAwayBaseCurrency" type="common:payAwayCurrency">
                <xs:annotation>
                  <xs:documentation>Describes handling of incoming pay-aways in
								base
								currency Type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="payAwayCurrency" type="common:payAwayCurrency">
                <xs:annotation>
                  <xs:documentation>Describes handling of incoming pay-aways in
								currency Type.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="cutOffTime" type="common:timeFormat">
                <xs:annotation>
                  <xs:documentation>Cut-Off time for capturing Payment Instruction.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ssiNotFound" type="common:standardSettlementInstruction">
                <xs:annotation>
                  <xs:documentation>Describes handling of payment when SSI is not
								found for last bank, and last bank is not in the country of the
								payment currency.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="defaultReportingCodeInward" type="common:alphaNumericmin1max10">
                <xs:annotation>
                  <xs:documentation>Default Reporting Code Inward regulatory code</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="defaultReportingCodeBankToBank" type="common:alphaNumericmin1max10">
                <xs:annotation>
                  <xs:documentation>Default Reporting code bank to bank regulatory
								code</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="minOurChargesOnInwardPmnt" type="common:amount">
                <xs:annotation>
                  <xs:documentation>Describes If in an incoming payment ,the
								charges specified in NOK(base ccy) are below the amount
								specified,
								then manual handling will be done. The payment would
								then stop for
								bank operator to review.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="cashPositionInterfaceContent" type="paymentparameters:cashPositionInterfaceContent">
                <xs:annotation>
                  <xs:documentation>This Indicates a switch in PBD to tell how much
								information to deliver.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="rgltryReportAmtMgn" type="common:amount">
                <xs:annotation>
                  <xs:documentation>Describes Regulatory reporting amount margin
								for
								regulatory reporting feature for payments.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="reqDateIsBankHoliday" type="common:dateIfHoliday">
                <xs:annotation>
                  <xs:documentation>Allows user to choose rules of how payments
								are
								set to execute on a bank holiday.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="bsuTotalAmount" type="common:amount">
                <xs:annotation>
                  <xs:documentation>Describes the maximum amount a BSU account can hold</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="bsuAnnualAmount" type="common:amount">
                <xs:annotation>
                  <xs:documentation>Describes the maximum amount that can be deposited
								to a BSU account annually with tax benefits</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="bsuAgeLimit" type="common:max3digit">
                <xs:annotation>
                  <xs:documentation>Describes maximum age the account owner can be and
								still be able to make deposits into the account</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="freePostingMaxFwdValueDate" type="common:max3digit">
                <xs:annotation>
                  <xs:documentation>Describes numerical value to define how far into the future
							 a free posting value date can be set</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="freePostingMaxBackwdValueDate" type="common:max3digit">
                <xs:annotation>
                  <xs:documentation>Describes numerical value to define how far back into the past
							 a free posting value date can be set</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="baseBankCurrencyCode" type="common:currencyISOCode">
                <xs:annotation>
                  <xs:documentation>This indicate the currency code for base bank.
								Its Mandatory in response and not required in Create/Update
								operation's input.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="startDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be activated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="endDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be closed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="status" type="common:changeStatus">
                <xs:annotation>
                  <xs:documentation>Describes the change status.This is the state
								of the Schedule based on the start and end date.
								This is optional
								in input and mandatory in output</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="standingOrderPaymentParametersDetails">
        <xs:annotation>
          <xs:documentation>Describes the Standing Order Payment parameters in
				PBD
				Systems.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:basePersistentEntityType">
            <xs:sequence>
              <xs:element minOccurs="0" name="standingOrderPaymentParametersId" type="common:generatedPkType">
                <xs:annotation>
                  <xs:documentation>Reference Id for
								Standing Order payment
								parameter.
								(Applicable for only
								standingOrderPaymentParameters
								Update/Read Operation
								Input Request and Mandatory for all output
								Operations except
								delete)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="soDayBeforeDueDate" type="common:max3digit">
                <xs:annotation>
                  <xs:documentation>Describes number of days before due date shall
								the payment instruction generated from the Standing Order
								agreement show in the due date list.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="soMinAmtForBalance" type="common:amount">
                <xs:annotation>
                  <xs:documentation>Describes SO minimum amount to be paid</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="closeInactiveSOAgreements" type="common:min1max2digit24maxvalue">
                <xs:annotation>
                  <xs:documentation>This indicates when to delete a standing order
								agreement that has not been used for long time in months.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="clearClosedSOAgreements" type="common:min1Max3Digit120MaxValue">
                <xs:annotation>
                  <xs:documentation>This indicates how long the agreement will show
								in the end user client after it has been closed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="trigger" type="paymentparameters:trigger">
                <xs:annotation>
                  <xs:documentation>Different type of triggers available.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="startDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be activated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="endDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be closed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="status" type="common:changeStatus">
                <xs:annotation>
                  <xs:documentation>Describes the change status.This is the state
								of the Schedule based on the start and end date.
								This is optional
								in input and mandatory in output</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="internalAccountsPaymentParametersDetails">
        <xs:annotation>
          <xs:documentation>Describes the Internal Accounts Payment parameters
				in
				PBD
				Systems.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:basePersistentEntityType">
            <xs:sequence>
              <xs:element minOccurs="0" name="internalAccountsPaymentParametersId" type="common:generatedPkType">
                <xs:annotation>
                  <xs:documentation>Reference Id for
								Internal Accounts payment
								parameter.
								(Applicable for only
								internalAccountsPaymentParameters
								Update/Read Operation
								Input Request and Mandatory for all output
								Operations except
								delete)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="unbounded" name="internalAccountsDetails" type="paymentparameters:internalAccountsDetails">
                <xs:annotation>
                  <xs:documentation>Describes the account and system/function
								details.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="startDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be activated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="endDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be closed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="status" type="common:changeStatus">
                <xs:annotation>
                  <xs:documentation>Describes the change status.This is the state
								of the Schedule based on the start and end date.
								This is optional
								in input and mandatory in output</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="userSegment">
        <xs:annotation>
          <xs:documentation>Different user segment available like bank User ,
				Corporate user etc for a particular trigger type</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="name" type="paymentparameters:userSegmentType">
            <xs:annotation>
              <xs:documentation>Name of the user segment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="period" type="common:maxString20">
            <xs:annotation>
              <xs:documentation>. The bank can set parameters on which periods
						should be available to
						register for each of the trigger types in
						each of the user segments</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="trigger">
        <xs:sequence>
          <xs:element name="name" type="paymentparameters:triggerTypeSO">
            <xs:annotation>
              <xs:documentation>Name of the trigger type like periodic, balance
						etc.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userSegment" type="paymentparameters:userSegment">
            <xs:annotation>
              <xs:documentation>Different user segment available for a trigger
						type</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="triggerTypeSO">
        <xs:annotation>
          <xs:documentation>Different type of Trigger available.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="PERIODIC"/>
          <xs:enumeration value="BALANCE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="paymentEnginePaymentParametersDetails">
        <xs:annotation>
          <xs:documentation>Describes the Payment Engine parameters in
				PBD
				Systems.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:basePersistentEntityType">
            <xs:sequence>
              <xs:element minOccurs="0" name="paymentEngineParametersId" type="common:generatedPkType">
                <xs:annotation>
                  <xs:documentation>Reference Id for
								Payment Engine parameter.
								(Applicable for only
								paymentEngineParameters
								Update/Read Operation
								Input Request and Mandatory for all output
								Operations except
								delete)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="paymentEngineDomesticId" type="common:generatedPkType">
                <xs:annotation>
                  <xs:documentation>Describes Payment Engine Name for Domestic</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="paymentEngineNameDomestic" type="common:max20StringNorwegianType">
                <xs:annotation>
                  <xs:documentation>Describes Payment Engine Name for Domestic</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="peAgentUsedDomestic" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>It is used to decide whether we need to show
								PEAgentBIC, BankName , City and country or not</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="peAgentBICDomestic" type="common:bankIdentifierCode">
                <xs:annotation>
                  <xs:documentation>PE agent BIC for Domestic</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="peInterfaceDomestic" type="common:max10StringNorwegianType">
                <xs:annotation>
                  <xs:documentation>Describes which Interface to be used towards
								payment engine for Domestic</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="peReservationSupportDomestic" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Describes whether PE supports reservation for
								Domestic</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="peBatchBookSupportDomestic" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Describes whether PE supports batch booking for
								Domestic</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="paymentEngineInterntionalId" type="common:generatedPkType">
                <xs:annotation>
                  <xs:documentation>Describes Payment Engine Name for Domestic</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="paymentEngineNameInternational" type="common:max20StringNorwegianType">
                <xs:annotation>
                  <xs:documentation>Describes Payment Engine Name for International</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="peAgentUsedInternational" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>It is used to decide whether we need to show
								PEAgentBIC, BankName , City and country or not</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="peAgentBICInternational" type="common:bankIdentifierCode">
                <xs:annotation>
                  <xs:documentation>PE agent BIC for International</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="peInterfaceInternational" type="common:max10StringNorwegianType">
                <xs:annotation>
                  <xs:documentation>Describes which Interface to be used towards
								payment engine for International</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="peReservationSupportInternational" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Describes whether PE supports reservation for
								International</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="peBatchBookSupportInternational" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Describes whether PE supports batch booking for
								International</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="startDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be activated.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="endDate" type="xs:date">
                <xs:annotation>
                  <xs:documentation>The date when the parameters will be closed.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="status" type="common:changeStatus">
                <xs:annotation>
                  <xs:documentation>Describes the change status.This is the state
								of the Schedule based on the start and end date.
								This is optional
								in input and mandatory in output</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="paymentParameterSystem">
        <xs:annotation>
          <xs:documentation>Complex type to represent paymentParameterSystem</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="systemValue" type="common:maxAlphaNumeric40SpeicalcharWithSpace">
            <xs:annotation>
              <xs:documentation>System/Function Value corresponding to the account</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="generalSystem" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>General system flag to describe whether the
					account is of general ledger type or not</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="marketLedger">
        <xs:annotation>
          <xs:documentation>Enumeration for Market Ledger with Bank Data Ledger.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="EVRY_LEDGER">
            <xs:annotation>
              <xs:documentation>Evry Ledger</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="EVRY_LEDGER_P2">
            <xs:annotation>
              <xs:documentation>Evry Ledger P2</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BANK_DATA_LEDGER">
            <xs:annotation>
              <xs:documentation>Bank Data Ledger</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="paymentParametersReadResponse">
    <wsdl:part element="tns:paymentParametersReadResponse" name="paymentParametersReadResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="paymentParametersReadRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:paymentParametersReadRequest" name="paymentParametersReadRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="PBDSPaymentParameters_V4_5PortType">
    <wsdl:operation name="paymentParametersRead">
      <wsdl:input message="tns:paymentParametersReadRequest" name="paymentParametersReadRequest"></wsdl:input>
      <wsdl:output message="tns:paymentParametersReadResponse" name="paymentParametersReadResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PBDSPaymentParameters_V4_5PortTypeSoap11" type="tns:PBDSPaymentParameters_V4_5PortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="paymentParametersRead">
      <soap:operation soapAction=""/>
      <wsdl:input name="paymentParametersReadRequest">
        <soap:header message="tns:paymentParametersReadRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="paymentParametersReadRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="paymentParametersReadResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PBDSPaymentParameters_V4_5">
    <wsdl:port binding="tns:PBDSPaymentParameters_V4_5PortTypeSoap11" name="PBDSPaymentParameters_V4_5PortTypeSoap11">
      <soap:address location="http://10.246.89.245:10780/pbdsrv/services/PBDSPaymentParameters_V4_5Service"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
      <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
    </con:part>
  </con:definitionCache>
  <con:endpoints>
    <con:endpoint>http://10.246.89.245:10780/pbdsrv/services/PBDSPaymentParameters_V4_5Service</con:endpoint>
  </con:endpoints>
</con:interface>
