<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="0fa63c4f-d60e-46a3-b322-715c1dacfcf2" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="DB_Properties" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="0fa63c4f-d60e-46a3-b322-715c1dacfcf2fileName">DB_Properties</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep type="jdbc" name="FetchAccount" id="7059a197-0cd3-43a7-a094-4df3378bc328">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>PWHDATA</con:dbConnectionName>
      <con:driver>sun.jdbc.odbc.JdbcOdbcDriver</con:driver>
      <con:connectionString>jdbc:oracle:thin:pendata/pen@10.246.89.97:1530/pen_g_functional</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>select distinct CUSTOMERID,ACCOUNTNUMBER  from V_authorisation 
where CUSTBANKID='4201' 
and length(customerID)='11'
and CURRENCY = 'NOK' 
and CUSTOMERID not in (${#TestCase#oldCustId})
fetch FIRST 2 ROWS ONLY</con:query>
      <con:assertion type="Simple Contains" id="952cf5c6-64ff-49d3-99f0-21e3165b92ac" name="Contains">
        <con:configuration>
          <token>${FetchAccount#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/ACCOUNTNUMBER[1]}</token>
          <ignoreCase>false</ignoreCase>
          <useRegEx>false</useRegEx>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="SetAccount" id="456d6618-8685-41ca-a83e-63c268c66ba3">
    <con:settings/>
    <con:config>
      <script>def customerID = context.expand( '${FetchAccount#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/CUSTOMERID[1]}' )
def debtorAccountNumber = context.expand( '${FetchAccount#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/ACCOUNTNUMBER[1]}' )

def creditorAccountNumber = context.expand( '${FetchAccount#ResponseAsXml#//Results[1]/ResultSet[1]/Row[2]/ACCOUNTNUMBER[1]}' )


customerID= customerID.toString().replaceAll("[^a-zA-Z0-9]+","")
debtorAccountNumber= debtorAccountNumber.toString().replaceAll("[^a-zA-Z0-9]+","")
creditorAccountNumber= creditorAccountNumber.toString().replaceAll("[^a-zA-Z0-9]+","")
//debtorAccountCcy=  debtorAccountCcy.toString().replaceAll("[^a-zA-Z0-9]+","")


testRunner.testCase.testSuite.setPropertyValue("customerid",customerID)
testRunner.testCase.testSuite.setPropertyValue("UserID",customerID)
testRunner.testCase.testSuite.setPropertyValue("AgreementId",customerID)
testRunner.testCase.testSuite.setPropertyValue("CreditAccountNumber",debtorAccountNumber)
testRunner.testCase.testSuite.setPropertyValue("CreditAccountNumber",creditorAccountNumber)
testRunner.testCase.testSuite.setPropertyValue("currencyCode","NOK")


def oldCustId = testRunner.testCase.getPropertyValue("oldCustId")
if (oldCustId == null) oldCustId = customerID
testRunner.testCase.setPropertyValue("oldCustId", oldCustId + ',' + customerID)</script>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>oldCustId</con:name>
      <con:value>1234567,32334114456,32339623898,32330381492,32333192658,04125611473,32331191573,32331684812,11047302899,02095902351,08066317197,14017414497,06125822159,10127521900,30086700553,04027110199,16085502224,04086716815,25046902036,21097106638,16074912595,02105900530,24014307113,30045000881</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
</con:testCase>
