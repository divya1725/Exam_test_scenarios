<?xml version="1.0" encoding="UTF-8"?>
<con:interface xsi:type="con:WsdlInterface" id="356992a6-ef84-4825-b83d-5a67b54f9c84" wsaVersion="NONE" name="CCOSCCPermissionService_V20_2PortTypeSoap11" type="wsdl" bindingName="{urn:srv.cco.enterprise.fs.evry.com:ws:permission:v20_2}CCOSCCPermissionService_V20_2PortTypeSoap11" soapVersion="1_1" anonymous="optional" definition="http://10.246.89.245:10710/corewsdpgensrv/services/CCOSCCPermissionService_V20_2?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="356992a6-ef84-4825-b83d-5a67b54f9c84fileName">CCOSCCPermissionService_V20_2PortTypeSoap11</con:setting>
  </con:settings>
  <con:definitionCache type="TEXT" rootPart="http://10.246.89.245:10710/corewsdpgensrv/services/CCOSCCPermissionService_V20_2?wsdl">
    <con:part>
      <con:url>http://10.246.89.245:10710/corewsdpgensrv/services/CCOSCCPermissionService_V20_2?wsdl</con:url>
      <con:content><![CDATA[<wsdl:definitions targetNamespace="urn:srv.cco.enterprise.fs.evry.com:ws:permission:v20_2" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:srv.cco.enterprise.fs.evry.com:ws:permission:v20_2" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:sch9="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v20_1" xmlns:sch8="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v3" xmlns:sch7="urn:corews.enterprise.fs.evry.com:domain:common:v6" xmlns:sch6="urn:srv.cco.enterprise.fs.evry.com:domain:customer:v2" xmlns:sch5="urn:srv.cco.enterprise.fs.evry.com:domain:account:v2" xmlns:sch4="urn:corews.enterprise.fs.evry.com:domain:common:v4" xmlns:sch3="urn:corews.enterprise.fs.evry.com:domain:common:v8" xmlns:sch2="urn:enterprise.fs.evry.com:domain:common:v3" xmlns:sch14="urn:srv.cco.enterprise.fs.evry.com:ws:permission:v20_1" xmlns:sch13="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v20_2" xmlns:sch12="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v4" xmlns:sch11="urn:srv.cco.enterprise.fs.evry.com:domain:account:v3" xmlns:sch10="urn:corews.enterprise.fs.evry.com:domain:common:v10" xmlns:sch1="http://edb.com/ws/WSCommon_v22" xmlns:sch0="urn:srv.cco.enterprise.fs.evry.com:ws:permission:v20_2">
  <wsdl:types>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cco.enterprise.fs.evry.com:ws:permission:v20_2" xmlns:permissionws201="urn:srv.cco.enterprise.fs.evry.com:ws:permission:v20_1" xmlns:permission202="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v20_2" xmlns:enterprisecommon="urn:enterprise.fs.evry.com:domain:common:v3" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation><![CDATA[The service handles information for a given customer account permissions. <br>
            Available operations: <br>
            permissionAccountList               V20_1 <br>
            permissionAccountRead               V20_1 <br>
            permissionAccountProductMultiRead   V20_2 <br>
            permissionAccountHistoryList        V20_2 <br>]]]]>><![CDATA[</documentation>
      </annotation>
      <import namespace="urn:enterprise.fs.evry.com:domain:common:v3"/>
      <import namespace="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v20_1"/>
      <import namespace="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v20_2"/>
      <import namespace="urn:srv.cco.enterprise.fs.evry.com:ws:permission:v20_1"/>
      <element name="permissionAccountListRequest" type="permissionws201:permissionAccountListRequestType"/>
      <element name="permissionAccountListResponse" type="permissionws201:permissionAccountListResponseType"/>
      <element name="permissionAccountListFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="permissionAccountReadRequest" type="permissionws201:permissionAccountReadRequestType"/>
      <element name="permissionAccountReadResponse" type="permissionws201:permissionAccountReadResponseType"/>
      <element name="permissionAccountReadFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="permissionAccountProductMultiReadRequest" type="tns:permissionAccountProductMultiReadRequestType"/>
      <element name="permissionAccountProductMultiReadResponse" type="tns:permissionAccountProductMultiReadResponseType"/>
      <element name="permissionAccountProductMultiReadFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="permissionAccountHistoryListRequest" type="tns:permissionAccountHistoryListRequestType"/>
      <element name="permissionAccountHistoryListResponse" type="tns:permissionAccountHistoryListResponseType"/>
      <element name="permissionAccountHistoryListFault" type="enterprisecommon:responseStateCodedFault"/>
      <complexType name="permissionAccountProductMultiReadRequestType">
        <annotation>
          <documentation><![CDATA[This operation returns account permissions for multiple accounts. <br>
                The account data contains primarily account status and general account permissions. <br>
                Several services are executed to fetch information from: <br>
                - iHub Agreement <br>
                - iHub Customer <br>
                - iHub Product <br>
                - Account specific account status <br>]]]]>><![CDATA[</documentation>
        </annotation>
        <sequence>
          <element name="qualification" type="permission202:permissionAccountProductMultiReadQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="permissionAccountProductMultiReadResponseType">
        <annotation>
          <documentation><![CDATA[Contains the response for the operation permissionAccountMultiRead. <br>
                Service Error Codes:<br>
                2005 - Account owner not found.<br>
                Service Warning codes:<br>
                2017 - None of the accounts were found<br>
                Account Specific Error Codes(can occur on each account separately):<br>
                1001 - Account number not found<br>]]]]>><![CDATA[</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element name="result" type="permission202:permissionAccountProductMultiReadResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="permissionAccountHistoryListRequestType">
        <annotation>
          <documentation>This operation returns a historic list of account permissions for an account.&lt;br></documentation>
        </annotation>
        <sequence>
          <element name="qualification" type="permission202:permissionAccountHistoryListQualificationType"/>
          <element name="pagingElement" type="enterprisecommon:pagingInputElementType"/>
        </sequence>
      </complexType>
      <complexType name="permissionAccountHistoryListResponseType">
        <annotation>
          <documentation>Contains the response for operation permissionAccountHistoryList. &lt;br>
                2005 - Account owner not found.&lt;br></documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element name="result" type="permission202:permissionAccountHistoryListResultType"/>
              <element name="pagingElement" type="enterprisecommon:pagingOutputElementType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://edb.com/ws/WSCommon_v22" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://edb.com/ws/WSCommon_v22">
      <xsd:complexType name="ClientContextType">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the person who initiated the action This could either be the customer itself in a netbank) or an employee</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="credentials" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Authorization data. This is typically a security Object retriewed from a logon, but can also be a plain password.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="channel" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Indicated what type of application that initiated the request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="orgid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The OrganizationalId - will in a banking context be Financial Institution / Konsernnr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="orgunit" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The Organizational unit will in a banking context be Branch / Registernr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="customerid" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Id of the customer on which the operation is requested, may be the same as userid, but may well be different</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="locale" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Locale in a java syntax e.g "en_EN". May be used if application supports localized response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ip" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The ip adress of the client</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="itemType">
            <xsd:annotation>
              <xsd:documentation>Optionnal extention items - Add key/value pairs for application specific extentions</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="itemType">
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="EDBHeaderType">
        <xsd:sequence>
          <xsd:element name="SourceApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the source that initiated the message. Used to separate different service consumers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="DestinationApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the destination of the message. Used to separate different service providers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Function" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the service to be called.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Version" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Service version "X.Y.Z" according to this standard:
                X = Main release (major changes, not necessarily backwards compatible)
                Y = Minor release (backwards compatible, new functionality)
                Z = Bugfix (backwards compatible, error correction only)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ClientContext" type="ClientContextType">
            <xsd:annotation>
              <xsd:documentation>Elements for identifying client context information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="AutHeader" type="EDBHeaderType"/>
      <xsd:complexType name="ResponseStateType">
        <xsd:sequence>
          <xsd:element name="ErrorCode" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Numeric error code reported for this error.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Severity" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Response Status Severity Code</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ComponentId" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Unique code identifying the component returning the service response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Message" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Message describing the error. Default is english language. Optionally localized according to the locale parameter in the service request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="LogSequence" nillable="true" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>Optional key generated to be used for log correlation purposes.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="errorItem" nillable="true" type="errorItemType">
            <xsd:annotation>
              <xsd:documentation>Optional extention items - key/value pairs are used for extented error inforamtion.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="errorItemType">
        <xsd:annotation/>
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
    </xsd:schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:enterprise.fs.evry.com:domain:common:v3" xmlns:tns="urn:enterprise.fs.evry.com:domain:common:v3" xmlns:edbheader="http://edb.com/ws/WSCommon_v22" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <import namespace="http://edb.com/ws/WSCommon_v22"/>
      <complexType name="responseStateCodedFault">
        <annotation>
          <documentation>Generic SoapFault type</documentation>
        </annotation>
        <sequence>
          <element name="responseState" type="edbheader:ResponseStateType">
            <annotation>
              <documentation>Contains the distinct error-code and additional
                        information on the actual error.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="pageLengthType">
        <annotation>
          <documentation>An type capable of describing a segments length or wished length</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="500"/>
        </restriction>
      </simpleType>
      <simpleType name="pageIndexType">
        <annotation>
          <documentation>Index of segment start</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <complexType name="pagingInputElementType">
        <annotation>
          <documentation>Describes a paging segment</documentation>
        </annotation>
        <sequence>
          <element name="startIndex" type="tns:pageIndexType"/>
          <element name="pageSize" type="tns:pageLengthType"/>
        </sequence>
      </complexType>
      <complexType name="pagingOutputElementType">
        <annotation>
          <documentation>Describes the returned segment</documentation>
        </annotation>
        <sequence>
          <element name="numberOfElements" type="tns:pageLengthType">
            <annotation>
              <documentation>Number of elements returned</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType abstract="true" name="pageResultType">
        <annotation>
          <documentation>Wraps paging and data elements</documentation>
        </annotation>
        <sequence>
          <element name="pagingOutput" type="tns:pagingOutputElementType"/>
          <element name="elements">
            <complexType>
              <sequence>
                <any namespace="##other"/>
              </sequence>
            </complexType>
          </element>
        </sequence>
      </complexType>
      <simpleType name="generatedPkType">
        <annotation>
          <documentation>Generated primary key in database</documentation>
        </annotation>
        <restriction base="long"/>
      </simpleType>
      <simpleType name="optimisticLockVersionType">
        <annotation>
          <documentation>Version counter field used for optimistic locking
				See: http://en.wikipedia.org/wiki/Optimistic_concurrency_control
				This ensures data consistency when data travels across
				layers.</documentation>
        </annotation>
        <restriction base="long"/>
      </simpleType>
      <complexType abstract="true" name="basePersistentEntityType">
        <sequence>
          <element minOccurs="0" name="pk" type="tns:generatedPkType">
            <annotation>
              <documentation>Bearer of the primary key.
						Not present for an non-persisted entity.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="version" type="tns:optimisticLockVersionType">
            <annotation>
              <documentation>The optimistic locking version field.
						Not present for an non-persisted entity.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType abstract="true" name="baseResponseType">
        <annotation>
          <documentation>Base response type which all services should extend off</documentation>
        </annotation>
        <sequence>
          <element name="ResponseState" type="edbheader:ResponseStateType">
            <annotation>
              <documentation>The response state which describes the outcome of calling the service.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <element name="languageCode" type="tns:languageCodeType"/>
      <element name="currencyCode" type="tns:currencyCodeType"/>
      <element name="logonId" type="tns:alphanumeric12"/>
      <element name="profitCenterExtId" type="tns:text15"/>
      <element name="issuerNo" type="tns:issuerNoType"/>
      <element name="organisationNo" type="tns:alphanumeric12"/>
      <element name="legalOrganisationNo" type="tns:text15"/>
      <element name="customerIntId" type="tns:generatedCharID12Type"/>
      <element name="customerNumber" type="tns:text15"/>
      <element name="customerNumberNO" type="tns:customerNumberNOType">
        <annotation>
          <documentation>Official/legal customer number,
				f.ex. Social security
				number. Norwegian format</documentation>
        </annotation>
      </element>
      <element name="createDate" type="date">
        <annotation>
          <documentation>the date an occurrence was created in the database</documentation>
        </annotation>
      </element>
      <element name="createTime" type="time">
        <annotation>
          <documentation>the time an occurrence was created in the database</documentation>
        </annotation>
      </element>
      <element name="productElementIntId" type="tns:generatedCharID15Type"/>
      <element name="accountNumber" type="tns:accountNumberType"/>
      <element name="accountNumberNO" type="tns:accountNumberNOType"/>
      <element name="swiftBicCode" type="tns:alphanumeric11"/>
      <element name="listFrom" type="short"/>
      <element name="listTo" type="short"/>
      <element name="countryCode" type="tns:countryCodeType"/>
      <element name="moreOccurences" type="boolean">
        <annotation>
          <documentation>True: there are more occurrences than in the result list 
						   False: there are not more occurrences last occurrency is delivered in the result list</documentation>
        </annotation>
      </element>
      <element name="openDate" type="date">
        <annotation>
          <documentation>Open date of an occurrence, 
			f.ex. the date when the customer became a customer 
			and not the date the customer was registered in the database</documentation>
        </annotation>
      </element>
      <element name="lastChangeDate" type="date">
        <annotation>
          <documentation>The date the customer was last changed.</documentation>
        </annotation>
      </element>
      <element name="lastChangeTime" type="time">
        <annotation>
          <documentation>The time the customer was last changed.</documentation>
        </annotation>
      </element>
      <simpleType name="createdByLogonid">
        <annotation>
          <documentation>Refers to the name of who first time made this record</documentation>
        </annotation>
        <restriction base="tns:alphanumeric12"/>
      </simpleType>
      <simpleType name="lastChangeLogonid">
        <annotation>
          <documentation>User that last changed the occurrence.</documentation>
        </annotation>
        <restriction base="tns:alphanumeric12"/>
      </simpleType>
      <simpleType name="countryCodeType">
        <annotation>
          <documentation>ISO-3166-1 standard country code with length 2</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z]{2}"/>
        </restriction>
      </simpleType>
      <simpleType name="languageCodeType">
        <annotation>
          <documentation>ISO-639-2 language code with length 3</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z]{3}"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyCodeType">
        <annotation>
          <documentation>ISO-4217 currency code with length 3</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode5">
        <annotation>
          <documentation>Alphanumeric value with length 5</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="issuerNoType">
        <annotation>
          <documentation>Issuer identification number</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode10">
        <annotation>
          <documentation>Alphanumeric value with length 10</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="10"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="alphanumeric11">
        <annotation>
          <documentation>Alphanumeric value with length 11</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="generatedCharID12Type">
        <annotation>
          <documentation>system generated ID</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="alphanumeric12">
        <annotation>
          <documentation>Alphanumeric value with length 12</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="generatedCharID15Type">
        <annotation>
          <documentation>system generated ID</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="text15">
        <annotation>
          <documentation>Alphanumeric value with length 15</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
        </restriction>
      </simpleType>
      <simpleType name="generatedNumId18Type">
        <annotation>
          <documentation>system generated ID</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="accountNumberType">
        <annotation>
          <documentation>BBAN account number</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="30"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="accountNumberNOType">
        <annotation>
          <documentation>BBAN account number, norwegian format</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="customerNumberNOType">
        <annotation>
          <documentation>Official/legal customer number. Norwegian format</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="text35">
        <annotation>
          <documentation>Alphanumeric value with length 35</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:corews.enterprise.fs.evry.com:domain:common:v8" xmlns:tns="urn:corews.enterprise.fs.evry.com:domain:common:v8" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <simpleType name="alphaNumMax1Type">
        <annotation>
          <documentation>1 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax2Type">
        <annotation>
          <documentation>2 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax3Type">
        <annotation>
          <documentation>3 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax4Type">
        <annotation>
          <documentation>4 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax5Type">
        <annotation>
          <documentation>5 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax6Type">
        <annotation>
          <documentation>6 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax7Type">
        <annotation>
          <documentation>7 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax8Type">
        <annotation>
          <documentation>8 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax9Type">
        <annotation>
          <documentation>9 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax10Type">
        <annotation>
          <documentation>10 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax11Type">
        <annotation>
          <documentation>11 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax12Type">
        <annotation>
          <documentation>12 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax13Type">
        <annotation>
          <documentation>13 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax15Type">
        <annotation>
          <documentation>15 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax16Type">
        <annotation>
          <documentation>16 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax17Type">
        <annotation>
          <documentation>17 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="17"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax18Type">
        <annotation>
          <documentation>18 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax19Type">
        <annotation>
          <documentation>19 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="19"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax20Type">
        <annotation>
          <documentation>20 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="20"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax22Type">
        <annotation>
          <documentation>22 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="22"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax23Type">
        <annotation>
          <documentation>23 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="23"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax25Type">
        <annotation>
          <documentation>25 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="25"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax26Type">
        <annotation>
          <documentation>26 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="26"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax27Type">
        <annotation>
          <documentation>27 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="27"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax30Type">
        <annotation>
          <documentation>30 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax32Type">
        <annotation>
          <documentation>32 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="32"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax34Type">
        <annotation>
          <documentation>34 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax35Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax36Type">
        <annotation>
          <documentation>36 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="36"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax40Type">
        <annotation>
          <documentation>40 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="40"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax42Type">
        <annotation>
          <documentation>42 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="42"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax50Type">
        <annotation>
          <documentation>50 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="50"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax60Type">
        <annotation>
          <documentation>60 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="60"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax70Type">
        <annotation>
          <documentation>70 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="70"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax78Type">
        <annotation>
          <documentation>78 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="78"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax80Type">
        <annotation>
          <documentation>80 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="80"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax100Type">
        <annotation>
          <documentation>100 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax120Type">
        <annotation>
          <documentation>120 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="120"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax140Type">
        <annotation>
          <documentation>140 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="140"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax150Type">
        <annotation>
          <documentation>150 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="150"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax200Type">
        <annotation>
          <documentation>200 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="200"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax220Type">
        <annotation>
          <documentation>220 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="220"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax240Type">
        <annotation>
          <documentation>240 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="240"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax250Type">
        <annotation>
          <documentation>250 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="250"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax255Type">
        <annotation>
          <documentation>255 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="255"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax256Type">
        <annotation>
          <documentation>256 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="256"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax400Type">
        <annotation>
          <documentation>400 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="400"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax500Type">
        <annotation>
          <documentation>500 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="500"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax1Type">
        <annotation>
          <documentation>Integer value with max length 1</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax2Type">
        <annotation>
          <documentation>Integer value with max length 2</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax3Type">
        <annotation>
          <documentation>Integer value with max length 3</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax4Type">
        <annotation>
          <documentation>Integer value with max length 4</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax5Type">
        <annotation>
          <documentation>Integer value with max length 5</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax6Type">
        <annotation>
          <documentation>Integer value with max length 6</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax7Type">
        <annotation>
          <documentation>Integer value with max length 7</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax8Type">
        <annotation>
          <documentation>Integer value with max length 8</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax9Type">
        <annotation>
          <documentation>Integer value with max length 9</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="intMin1Max999Type">
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax9Type">
        <annotation>
          <documentation>Long value with max length 9.</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax10Type">
        <annotation>
          <documentation>Long value with max length 10</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax11Type">
        <annotation>
          <documentation>Long value with max length 11</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax12Type">
        <annotation>
          <documentation>Long value with max length 12</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax13Type">
        <annotation>
          <documentation>Long value with max length 13</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax16Type">
        <annotation>
          <documentation>Long value with max length 16</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax18Type">
        <annotation>
          <documentation>Long value with max length 18</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="iban">
        <annotation>
          <documentation>IBAN number - International Bank Account Number, comprising a country code, two check digits and a basic bank account-number (BBAN), eg. NO5928012192284.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="5"/>
          <maxLength value="34"/>
          <pattern value="[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianAccountNumber">
        <annotation>
          <documentation>Norwegian account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianCustomerNumber">
        <annotation>
          <documentation>Norwegian customer number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="regBankNumber">
        <annotation>
          <documentation>Reg bank number</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([0-9])*"/>
          <minLength value="4"/>
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntId">
        <annotation>
          <documentation>Customer internal id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="userId">
        <annotation>
          <documentation>User id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntIdNumeric">
        <annotation>
          <documentation>Numeric customer internal id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="amount">
        <annotation>
          <documentation>Decimal value of max length 18 with 3 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="18"/>
          <fractionDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="rate">
        <annotation>
          <documentation>Decimal value of max length 9 with 5 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="9"/>
          <fractionDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intId">
        <annotation>
          <documentation>Internal generated id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="productNumber">
        <annotation>
          <documentation>Product number</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="sequenceNumber">
        <annotation>
          <documentation>Sequence number.</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="url">
        <annotation>
          <documentation>URL</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1024"/>
        </restriction>
      </simpleType>
      <simpleType name="ratio">
        <annotation>
          <documentation>Ratio</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode5">
        <annotation>
          <documentation>Alphanumeric value with length 5</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="organisationUnitStrictType">
        <annotation>
          <documentation>Permitted values:'PC' - Profit Centers;'OU' - Organization Units</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PC"/>
          <enumeration value="OU"/>
        </restriction>
      </simpleType>
      <simpleType name="month">
        <annotation>
          <documentation>Month 1-12</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="positiveIntegerMax11Type">
        <annotation>
          <documentation>Positive(>0) integer value with max length 11</documentation>
        </annotation>
        <restriction base="positiveInteger">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="executiveOfficerId">
        <annotation>
          <documentation>Executive officer identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="executiveOfficerName">
        <annotation>
          <documentation>Executive officer name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="shortName">
        <annotation>
          <documentation>Short name of customer</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="productId">
        <annotation>
          <documentation>Product identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax18Type"/>
      </simpleType>
      <simpleType name="productShortName">
        <annotation>
          <documentation>Product short name - 6 characters</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax6Type"/>
      </simpleType>
      <simpleType name="productSequenceNumber">
        <annotation>
          <documentation>Product sequence number</documentation>
        </annotation>
        <restriction base="tns:sequenceNumber"/>
      </simpleType>
      <simpleType name="productName">
        <annotation>
          <documentation>Product name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="productIntId">
        <annotation>
          <documentation>Product internal id</documentation>
        </annotation>
        <restriction base="tns:intId"/>
      </simpleType>
      <simpleType name="profitCenter">
        <annotation>
          <documentation>Profit center id</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="profitCenterText">
        <annotation>
          <documentation>Profit center text</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="alias">
        <annotation>
          <documentation>Sets the alias that identifies the self service channel agreement.
                Either use value from numeric alias (for cash call channel) or
                alphanumeric alias (for internet bank, mobile bank, sms bank channel).</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="channel">
        <annotation>
          <documentation>Sets the self service channel.
                Valid values:
                WAP - Mobile bank channel agreement.
                INT - Internet bank channel agreement.
                SMS - Sms bank channel agreement.
                TLF - Cash call channel agreement.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax5Type">
          <enumeration value="WAP"/>
          <enumeration value="INT"/>
          <enumeration value="SMS"/>
          <enumeration value="TLF"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyCode">
        <annotation>
          <documentation>Currency code (ISO 4217)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([A-Z])*"/>
          <minLength value="3"/>
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationFactor">
        <annotation>
          <documentation>Interest calculation factor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationDivisor">
        <annotation>
          <documentation>Interest calculation divisor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="initialFunctionId">
        <annotation>
          <documentation>Application calling a service.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax8Type"/>
      </simpleType>
      <complexType name="customerInformationType">
        <sequence>
          <element minOccurs="0" name="customerNumber" type="tns:alphaNumMax35Type"/>
          <element minOccurs="0" name="shortName" type="tns:shortName"/>
          <element minOccurs="0" name="profitCenter" type="tns:profitCenter"/>
          <element minOccurs="0" name="profitCenterText" type="tns:profitCenterText"/>
          <element minOccurs="0" name="productId" type="tns:productId"/>
          <element minOccurs="0" name="productShortName" type="tns:productShortName"/>
          <element minOccurs="0" name="executiveOfficerId" type="tns:executiveOfficerId"/>
          <element minOccurs="0" name="executiveOfficerName" type="tns:executiveOfficerName"/>
        </sequence>
      </complexType>
      <complexType name="customerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
                internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="customerIntId" type="tns:customerIntIdNumeric">
            <annotation>
              <documentation>The customer internal id.</documentation>
            </annotation>
          </element>
          <element name="customerNumber" type="tns:norwegianCustomerNumber">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="internationalCustomerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
                internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="internationalCustomerId" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer internal id.</documentation>
            </annotation>
          </element>
          <element name="internationalCustomerNumber" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyType">
        <annotation>
          <documentation>The product key consists of either (productNumber and
                sequenceNumber) OR productId.</documentation>
        </annotation>
        <choice>
          <element name="productKeyAlt1" type="tns:productKeyAlt1Type">
            <annotation>
              <documentation>Product key alternative 1 consists of product number
                        and product sequence number.</documentation>
            </annotation>
          </element>
          <element name="productKeyAlt2" type="tns:productKeyAlt2Type">
            <annotation>
              <documentation>Product key alternative 2 consists of product id
                        only.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyAlt1Type">
        <annotation>
          <documentation>Product key alternative 1 consists of the product
                number and the product sequence number.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productNumber" type="tns:productNumber">
            <annotation>
              <documentation>The product number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sequenceNumber" type="tns:sequenceNumber">
            <annotation>
              <documentation>The product sequence number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productKeyAlt2Type">
        <annotation>
          <documentation>Product key alternative 2 consists of the product id
                only.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="tns:productId">
            <annotation>
              <documentation>The product id.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="selfServiceKeyType">
        <annotation>
          <documentation>SelfServiceKey consist of alias and channel, and
                identifies a self service channel
                agreement.
                Both values must be set.</documentation>
        </annotation>
        <sequence>
          <element name="alias" type="tns:alias">
            <annotation>
              <documentation>Sets the alias that identifies the self service
                        channel agreement.&lt;br>
                        Either use value from numeric alias (for cash
                        call channel) or
                        alphanumeric alias (for internet bank, mobile
                        bank, sms bank
                        channel).</documentation>
            </annotation>
          </element>
          <element name="channel" type="tns:channel">
            <annotation>
              <documentation>Sets the self service channel.&lt;br>
                        Valid values:&lt;br>
                        WAP - Mobile bank channel agreement.&lt;br>
                        INT - Internet bank channel agreement.&lt;br>
                        SMS - Sms bank channel agreement.&lt;br>
                        TLF - Cash call channel agreement.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="numericAlias">
        <annotation>
          <documentation>Numeric alias - which allows on all numerics as password and min and max is 11 digits.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{11}"/>
        </restriction>
      </simpleType>
      <simpleType name="pin">
        <annotation>
          <documentation>Numeric password for cash call.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,6}"/>
        </restriction>
      </simpleType>
      <simpleType name="password">
        <annotation>
          <documentation>Password for internet bank.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,11}"/>
        </restriction>
      </simpleType>
      <simpleType name="swiftAddress">
        <annotation>
          <documentation>ISO 9362 SWIFT address. &lt;br>
                    4 characters: bank code (letters only) &lt;br>
                    2 characters: ISO 3166-1 alpha-2 country code (letters only) &lt;br>
                    2 characters: location code (letters and numbers) (if second charcter is "1", the receiver is a passive participant of the SWIFT network) &lt;br>
                    3 characters: department code, optional ('XXX' for headquarters) (letters and numbers)</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <complexType name="accountNumberInputType">
        <annotation>
          <documentation>The account number input as BBAN or IBAN format.</documentation>
        </annotation>
        <sequence>
          <choice>
            <element name="bban" type="tns:alphaNumMax30Type">
              <annotation>
                <documentation>Basic Bank Account Number, where format is decided by the national central bank or designated payment authority of each country, eg. 12345678901</documentation>
              </annotation>
            </element>
            <element name="iban" type="tns:iban">
              <annotation>
                <documentation>International Bank Account Number, comprising a country code, two check digits and a bank account-number (BBAN), eg. XX9912345678901</documentation>
              </annotation>
            </element>
          </choice>
        </sequence>
      </complexType>
      <complexType name="accountNumberOutputType">
        <annotation>
          <documentation>The account number Output as BBAN and IBAN format.</documentation>
        </annotation>
        <sequence>
          <element name="bban" type="tns:alphaNumMax30Type">
            <annotation>
              <documentation>Basic Bank Account Number, where format is decided by the national central bank or designated payment authority of each country, eg. 12345678901</documentation>
            </annotation>
          </element>
          <element name="iban" type="tns:iban">
            <annotation>
              <documentation>International Bank Account Number, comprising a country code, two check digits and a bank account-number (BBAN), eg. XX9912345678901</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:corews.enterprise.fs.evry.com:domain:common:v4" xmlns:tns="urn:corews.enterprise.fs.evry.com:domain:common:v4" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <simpleType name="alphaNumMax1Type">
        <annotation>
          <documentation>1 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax2Type">
        <annotation>
          <documentation>2 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax3Type">
        <annotation>
          <documentation>3 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax4Type">
        <annotation>
          <documentation>4 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax5Type">
        <annotation>
          <documentation>5 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax6Type">
        <annotation>
          <documentation>6 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax7Type">
        <annotation>
          <documentation>7 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax8Type">
        <annotation>
          <documentation>8 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax9Type">
        <annotation>
          <documentation>9 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax10Type">
        <annotation>
          <documentation>10 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax11Type">
        <annotation>
          <documentation>11 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax12Type">
        <annotation>
          <documentation>12 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax13Type">
        <annotation>
          <documentation>13 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax15Type">
        <annotation>
          <documentation>15 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax16Type">
        <annotation>
          <documentation>16 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax17Type">
        <annotation>
          <documentation>17 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="17"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax18Type">
        <annotation>
          <documentation>18 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax19Type">
        <annotation>
          <documentation>19 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="19"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax20Type">
        <annotation>
          <documentation>20 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="20"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax22Type">
        <annotation>
          <documentation>22 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="22"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax23Type">
        <annotation>
          <documentation>23 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="23"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax25Type">
        <annotation>
          <documentation>25 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="25"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax26Type">
        <annotation>
          <documentation>26 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="26"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax27Type">
        <annotation>
          <documentation>27 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="27"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax30Type">
        <annotation>
          <documentation>30 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax32Type">
        <annotation>
          <documentation>32 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="32"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax34Type">
        <annotation>
          <documentation>34 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax35Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax36Type">
        <annotation>
          <documentation>36 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="36"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax42Type">
        <annotation>
          <documentation>42 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="42"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax50Type">
        <annotation>
          <documentation>50 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="50"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax60Type">
        <annotation>
          <documentation>60 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="60"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax70Type">
        <annotation>
          <documentation>70 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="70"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax78Type">
        <annotation>
          <documentation>78 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="78"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax80Type">
        <annotation>
          <documentation>80 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="80"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax120Type">
        <annotation>
          <documentation>120 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="120"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax140Type">
        <annotation>
          <documentation>140 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="140"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax200Type">
        <annotation>
          <documentation>200 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="200"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax220Type">
        <annotation>
          <documentation>220 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="220"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax250Type">
        <annotation>
          <documentation>250 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="250"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax255Type">
        <annotation>
          <documentation>255 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="255"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax256Type">
        <annotation>
          <documentation>256 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="256"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax400Type">
        <annotation>
          <documentation>400 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="400"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax1Type">
        <annotation>
          <documentation>Integer value with max length 1</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax2Type">
        <annotation>
          <documentation>Integer value with max length 2</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax3Type">
        <annotation>
          <documentation>Integer value with max length 3</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax4Type">
        <annotation>
          <documentation>Integer value with max length 4</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax5Type">
        <annotation>
          <documentation>Integer value with max length 5</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax6Type">
        <annotation>
          <documentation>Integer value with max length 6</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax7Type">
        <annotation>
          <documentation>Integer value with max length 7</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax8Type">
        <annotation>
          <documentation>Integer value with max length 8</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax9Type">
        <annotation>
          <documentation>Integer value with max length 9</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="intMin1Max999Type">
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax9Type">
        <annotation>
          <documentation>Long value with max length 9.</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax10Type">
        <annotation>
          <documentation>Long value with max length 10</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax11Type">
        <annotation>
          <documentation>Long value with max length 11</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax12Type">
        <annotation>
          <documentation>Long value with max length 12</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax13Type">
        <annotation>
          <documentation>Long value with max length 13</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax16Type">
        <annotation>
          <documentation>Long value with max length 16</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax18Type">
        <annotation>
          <documentation>Long value with max length 18</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax100Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax40Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="40"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax240Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="240"/>
        </restriction>
      </simpleType>
      <simpleType name="iban">
        <annotation>
          <documentation>IBAN number - International Bank Account Number, comprising a country code, two check digits and a basic bank account-number (BBAN), eg. NO5928012192284.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="5"/>
          <maxLength value="34"/>
          <pattern value="[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianAccountNumber">
        <annotation>
          <documentation>Norwegian account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianCustomerNumber">
        <annotation>
          <documentation>Norwegian customer number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="regBankNumber">
        <annotation>
          <documentation>Reg bank number</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([0-9])*"/>
          <minLength value="4"/>
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntId">
        <annotation>
          <documentation>Customer internal id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="userId">
        <annotation>
          <documentation>User id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntIdNumeric">
        <annotation>
          <documentation>Numeric customer internal id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="amount">
        <annotation>
          <documentation>Decimal value of max length 18 with 3 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="18"/>
          <fractionDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="rate">
        <annotation>
          <documentation>Decimal value of max length 9 with 5 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="9"/>
          <fractionDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intId">
        <annotation>
          <documentation>Internal generated id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="productNumber">
        <annotation>
          <documentation>Product number</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="sequenceNumber">
        <annotation>
          <documentation>Sequence number.</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="url">
        <annotation>
          <documentation>URL</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1024"/>
        </restriction>
      </simpleType>
      <simpleType name="ratio">
        <annotation>
          <documentation>Ratio</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode5">
        <annotation>
          <documentation>Alphanumeric value with length 5</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="organisationUnitStrictType">
        <annotation>
          <documentation>Permitted values:'PC' - Profit Centers;'OU' - Organization Units</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PC"/>
          <enumeration value="OU"/>
        </restriction>
      </simpleType>
      <simpleType name="month">
        <annotation>
          <documentation>Month 1-12</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="positiveIntegerMax11Type">
        <annotation>
          <documentation>Positive(>0) integer value with max length 11</documentation>
        </annotation>
        <restriction base="positiveInteger">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="executiveOfficerId">
        <annotation>
          <documentation>Executive officer identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="executiveOfficerName">
        <annotation>
          <documentation>Executive officer name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="shortName">
        <annotation>
          <documentation>Short name of customer</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="productId">
        <annotation>
          <documentation>Product identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax18Type"/>
      </simpleType>
      <simpleType name="productShortName">
        <annotation>
          <documentation>Product short name - 6 characters</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax6Type"/>
      </simpleType>
      <simpleType name="productSequenceNumber">
        <annotation>
          <documentation>Product sequence number</documentation>
        </annotation>
        <restriction base="tns:sequenceNumber"/>
      </simpleType>
      <simpleType name="productName">
        <annotation>
          <documentation>Product name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="productIntId">
        <annotation>
          <documentation>Product internal id</documentation>
        </annotation>
        <restriction base="tns:intId"/>
      </simpleType>
      <simpleType name="profitCenter">
        <annotation>
          <documentation>Profit center id</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="profitCenterText">
        <annotation>
          <documentation>Profit center text</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="alias">
        <annotation>
          <documentation>Sets the alias that identifies the self service channel agreement.
				Either use value from numeric alias (for cash call channel) or
				alphanumeric alias (for internet bank, mobile bank, sms bank channel).</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="channel">
        <annotation>
          <documentation>Sets the self service channel.
				Valid values:
				WAP - Mobile bank channel agreement.
				INT - Internet bank channel agreement.
				SMS - Sms bank channel agreement.
				TLF - Cash call channel agreement.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax5Type">
          <enumeration value="WAP"/>
          <enumeration value="INT"/>
          <enumeration value="SMS"/>
          <enumeration value="TLF"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyCode">
        <annotation>
          <documentation>Currency code (ISO 4217)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([A-Z])*"/>
          <minLength value="3"/>
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationFactor">
        <annotation>
          <documentation>Interest calculation factor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationDivisor">
        <annotation>
          <documentation>Interest calculation divisor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="initialFunctionId">
        <annotation>
          <documentation>Application calling a service.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax8Type"/>
      </simpleType>
      <complexType name="customerInformationType">
        <sequence>
          <element minOccurs="0" name="customerNumber" type="tns:norwegianCustomerNumber"/>
          <element minOccurs="0" name="shortName" type="tns:shortName"/>
          <element minOccurs="0" name="profitCenter" type="tns:profitCenter"/>
          <element minOccurs="0" name="profitCenterText" type="tns:profitCenterText"/>
          <element minOccurs="0" name="productId" type="tns:productId"/>
          <element minOccurs="0" name="productShortName" type="tns:productShortName"/>
          <element minOccurs="0" name="executiveOfficerId" type="tns:executiveOfficerId"/>
          <element minOccurs="0" name="executiveOfficerName" type="tns:executiveOfficerName"/>
        </sequence>
      </complexType>
      <complexType name="customerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="customerIntId" type="tns:customerIntIdNumeric">
            <annotation>
              <documentation>The customer internal id.</documentation>
            </annotation>
          </element>
          <element name="customerNumber" type="tns:norwegianCustomerNumber">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="internationalCustomerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="internationalCustomerId" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer internal id.</documentation>
            </annotation>
          </element>
          <element name="internationalCustomerNumber" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyType">
        <annotation>
          <documentation>The product key consists of either (productNumber and
				sequenceNumber) OR productId.</documentation>
        </annotation>
        <choice>
          <element name="productKeyAlt1" type="tns:productKeyAlt1Type">
            <annotation>
              <documentation>Product key alternative 1 consists of product number
						and product sequence number.</documentation>
            </annotation>
          </element>
          <element name="productKeyAlt2" type="tns:productKeyAlt2Type">
            <annotation>
              <documentation>Product key alternative 2 consists of product id
						only.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyAlt1Type">
        <annotation>
          <documentation>Product key alternative 1 consists of the product
				number and the product sequence number.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productNumber" type="tns:productNumber">
            <annotation>
              <documentation>The product number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sequenceNumber" type="tns:sequenceNumber">
            <annotation>
              <documentation>The product sequence number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productKeyAlt2Type">
        <annotation>
          <documentation>Product key alternative 2 consists of the product id
				only.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="tns:productId">
            <annotation>
              <documentation>The product id.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="selfServiceKeyType">
        <annotation>
          <documentation>SelfServiceKey consist of alias and channel, and
				identifies a self service channel
				agreement.
				Both values must be set.</documentation>
        </annotation>
        <sequence>
          <element name="alias" type="tns:alias">
            <annotation>
              <documentation>Sets the alias that identifies the self service
						channel agreement.
						Either use value from numeric alias (for cash
						call channel) or
						alphanumeric alias (for internet bank, mobile
						bank, sms bank
						channel).</documentation>
            </annotation>
          </element>
          <element name="channel" type="tns:channel">
            <annotation>
              <documentation>Sets the self service channel.
						Valid values:
						WAP -
						Mobile bank channel agreement.
						INT - Internet bank channel
						agreement.
						SMS - Sms bank channel agreement.
						TLF - Cash call channel
						agreement.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="numericAlias">
        <annotation>
          <documentation>Numeric alias - which allows on all numerics as password and min and max is 11 digits.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{11}"/>
        </restriction>
      </simpleType>
      <simpleType name="pin">
        <annotation>
          <documentation>Numeric password for cash call.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,6}"/>
        </restriction>
      </simpleType>
      <simpleType name="password">
        <annotation>
          <documentation>Password for internet bank.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,11}"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cco.enterprise.fs.evry.com:domain:account:v2" xmlns:tns="urn:srv.cco.enterprise.fs.evry.com:domain:account:v2" xmlns:common="urn:corews.enterprise.fs.evry.com:domain:common:v4" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Entities in the account domain</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v4"/>
      <simpleType name="accountMainRole">
        <annotation>
          <documentation><![CDATA[Account main role type. <br />
				Valid values : <br />
				OWNER		Owner <br />
				DISPOSAL	Has disposal of <br />
				COOWNER		Co-owner <br />
				CODEBTOR	Co-debtor <br />
				COLLATERAL	Collateral <br />
				GUARDIAN	Guardian <br />
				ACCESS		Access <br />
				ADDRESSEE	Adressee <br />
				GUARANTOR	Guarantor <br />
				UNKNOWN		Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="OWNER"/>
          <enumeration value="DISPOSAL"/>
          <enumeration value="COOWNER"/>
          <enumeration value="CODEBTOR"/>
          <enumeration value="COLLATERAL"/>
          <enumeration value="GUARDIAN"/>
          <enumeration value="ACCESS"/>
          <enumeration value="ADDRESSEE"/>
          <enumeration value="GUARANTOR"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="accountMainRoleV2">
        <annotation>
          <documentation><![CDATA[Account main role type. <br />
				Valid values : <br />
				OWNER 						Owner <br />
				DISPOSAL 					Has disposal of <br />
				COOWNER 					Co-owner <br />
				CODEBTOR 					Co-debtor <br />
				COLLATERAL 					Collateral <br />
				GUARDIAN 					Guardian <br />
				ACCESS 						Access <br />
				ADDRESSEE 					Adressee <br />
				GUARANTOR 					Guarantor <br />
				AMETA 						Ameta <br />
				BENEFICIARY 				Beneficiary  <br />
				PAYER 						Payer <br />
				VOUCHER 					Voucher <br />
				EMAIL 						Email <br />
				FAMILY_SORTED_SHIPMENT 		Family sorted shipment <br />
				INSURED 					Insured <br />
				POLICYHOLDER 				Policy holder <br />
				CONTACT						contact <br />
				CONVERTED_ROLE 				Converted role <br />
				CREDITOR 					Creditor <br />
				MEMBER 						Member <br />
				SEE_SPECIFIC_NOTE 			See specific note <br />
				MORTGAGEE 					Mortgagee <br />
				ADDRESSEE_PULL_SINGLE 		Addressee pull single <br />
				ADDRESSEE_LOAN 				Addressee loan <br />
				ADDRESSEE_CHILD_INSURANCE 	Addressee child insurance <br />
				ADDRESSEE_FAX 				Addressee fax <br />
				OPENER 						Opener  <br />
				UNKNOWN 					Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax35Type">
          <enumeration value="OWNER"/>
          <enumeration value="DISPOSAL"/>
          <enumeration value="COOWNER"/>
          <enumeration value="CODEBTOR"/>
          <enumeration value="COLLATERAL"/>
          <enumeration value="GUARDIAN"/>
          <enumeration value="ACCESS"/>
          <enumeration value="ADDRESSEE"/>
          <enumeration value="GUARANTOR"/>
          <enumeration value="AMETA"/>
          <enumeration value="BENEFICIARY"/>
          <enumeration value="PAYER"/>
          <enumeration value="VOUCHER"/>
          <enumeration value="EMAIL"/>
          <enumeration value="FAMILY_SORTED_SHIPMENT"/>
          <enumeration value="INSURED"/>
          <enumeration value="POLICYHOLDER"/>
          <enumeration value="CONTACT"/>
          <enumeration value="CONVERTED_ROLE"/>
          <enumeration value="CREDITOR"/>
          <enumeration value="MEMBER"/>
          <enumeration value="SEE_SPECIFIC_NOTE"/>
          <enumeration value="MORTGAGEE"/>
          <enumeration value="ADDRESSEE_PULL_SINGLE"/>
          <enumeration value="ADDRESSEE_LOAN"/>
          <enumeration value="ADDRESSEE_CHILD_INSURANCE"/>
          <enumeration value="ADDRESSEE_FAX"/>
          <enumeration value="OPENER"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="accountAdvisorMainRole">
        <annotation>
          <documentation><![CDATA[Account main role type. <br />
				Valid values : <br />
				OWNER 		Owner <br />
				COOWNER 	Co-owner <br />
				CODEBTOR 	Co-debtor <br />
				GUARANTOR 	Guarantor <br />
				UNKNOWN 	Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="OWNER"/>
          <enumeration value="COOWNER"/>
          <enumeration value="CODEBTOR"/>
          <enumeration value="GUARANTOR"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="accountOwnerMainRole">
        <annotation>
          <documentation>Account main role type. &lt;br />
				Valid values : &lt;br />
				OWNER 		Owner &lt;br />
				COOWNER 	Co-owner &lt;br /></documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="OWNER"/>
          <enumeration value="COOWNER"/>
        </restriction>
      </simpleType>
      <simpleType name="accountRole">
        <annotation>
          <documentation><![CDATA[Account role type. <br />
				Valid values : <br />
				OWNER 		Owner <br />
				DISPOSAL 	Has disposal of <br />
				COOWNER 	Co-owner <br />
				CODEBTOR 	Co-debtor <br />
				COLLATERAL 	Collateral <br />
				GUARDIAN 	Guardian <br />
				ACCESS 		Access <br />
				ADDRESSEE 	Adressee <br />
				GUARANTOR 	Guarantor <br />
				CREDITOR 	Creditor <br />
				DEBITOR 	Debitor <br />
				INSURAR 	Insurar <br />
				UNKNOWN 	Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="OWNER"/>
          <enumeration value="DISPOSAL"/>
          <enumeration value="COOWNER"/>
          <enumeration value="CODEBTOR"/>
          <enumeration value="COLLATERAL"/>
          <enumeration value="GUARDIAN"/>
          <enumeration value="GUARANTOR"/>
          <enumeration value="ACCESS"/>
          <enumeration value="ADDRESSEE"/>
          <enumeration value="CREDITOR"/>
          <enumeration value="DEBITOR"/>
          <enumeration value="INSURAR"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="coreFilter">
        <annotation>
          <documentation>Account main role type. &lt;br />
				Valid values : &lt;br />
				OLDCORE  	Returns accounts existing in the old core system &lt;br />
				NEWCORE  	Returns accounts existing in the new core system &lt;br />
				BOTH    	Returns accounts existing both in the old and the new core system</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="OLDCORE"/>
          <enumeration value="NEWCORE"/>
          <enumeration value="BOTH"/>
        </restriction>
      </simpleType>
      <simpleType name="reContractType">
        <annotation>
          <documentation><![CDATA[The letter of credit contract type (remburs). <br />
				Valid values: <br />
				IMPORTREMB 	Import letter of credit (remburs) <br />
				EXPORTREMB 	Export letter of credit (remburs) <br />
				IMPORTGUAR 	Import guarantee <br />
				EXPORTGUAR 	Export guarantee <br />
				UNKNOWN 	Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="IMPORTREMB"/>
          <enumeration value="EXPORTREMB"/>
          <enumeration value="IMPORTGUAR"/>
          <enumeration value="EXPORTGUAR"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="fxInOutType">
        <annotation>
          <documentation><![CDATA[The currency Fx contract input/output type. <br />
				Valid values: <br />
				IN 		Incoming amounts <br />
				OUT 	Outgoing amounts <br />
				SELL 	Sell <br />
				BUY 	Buy <br />
				UNKNOWN Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="IN"/>
          <enumeration value="OUT"/>
          <enumeration value="SELL"/>
          <enumeration value="BUY"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="capitalizationFrequency">
        <annotation>
          <documentation><![CDATA[Capitalization frequency of interest and commission types. <br />
				Valid values: <br />
				NONE 			No capitalization <br />
				MONTHLY 		Every month <br />
				QUARTERLY 		Every third month <br />
				TERTIALY 		Every fourth month <br />
				BIANNUALY 		Every six month <br />
				ANNUALY 		Annually <br />
				INTANNCOMQUART 	Interest annually, commission quarterly <br />
				CRANNDBQUART 	Credit interest annually, debit interest and commission quarterly <br />
				DATE 			Product related fixed date <br />
				UNKNOWN 		Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="NONE"/>
          <enumeration value="MONTHLY"/>
          <enumeration value="QUARTERLY"/>
          <enumeration value="TERTIALY"/>
          <enumeration value="BIANNUALY"/>
          <enumeration value="ANNUALY"/>
          <enumeration value="INTANNCOMQUART"/>
          <enumeration value="CRANNDBQUART"/>
          <enumeration value="DATE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="guaranteeCapitalizationFrequency">
        <annotation>
          <documentation><![CDATA[Capitalization frequency of guarantee interest and commission types. <br />
				Valid values: <br />
				MONTHLY 	Every month <br />
				QUARTERLY 	Every third month <br />
				BIANNUALY 	Every six month <br />
				ANNUALY 	Annually <br />
				ONCE 		One time <br />
				UNKNOWN 	Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="MONTHLY"/>
          <enumeration value="QUARTERLY"/>
          <enumeration value="BIANNUALY"/>
          <enumeration value="ANNUALY"/>
          <enumeration value="ONCE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="cashpoolSystem">
        <annotation>
          <documentation>The account cashpool system. &lt;br />
				Valid values: &lt;br />
				KKS 		Old cashPool system &lt;br />
				CPL 		New cashPool system &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="KKS"/>
          <enumeration value="CPL"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="cashpoolType">
        <annotation>
          <documentation>The account cashpool type. &lt;br />
				Valid values: &lt;br />
				LEDGER 		Ledger reporting &lt;br />
				CAPTXFER 	Capital transfer &lt;br />
				UNITEDINT 	United interest calculation &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="LEDGER"/>
          <enumeration value="CAPTXFER"/>
          <enumeration value="UNITEDINT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="cashpoolRole">
        <annotation>
          <documentation><![CDATA[The account cashpool role. <br />
				Valid values: <br />
				MAIN 		Main cashpool account <br />
				SUM 		Sum level account <br />
				INTCOM 		Interest and commission posting <br />
				REG 		Registering <br />
				MULTICURR 	Multi currency <br />
				UNKNOWN 	Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="MAIN"/>
          <enumeration value="SUM"/>
          <enumeration value="INTCOM"/>
          <enumeration value="REG"/>
          <enumeration value="MULTICURR"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="depositAccountType">
        <annotation>
          <documentation>Account type. &lt;br />
				Valid values : &lt;br />
				CURRENT 	Deposit user account &lt;br />
				SAVINGS 	Deposit saving account &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax25Type">
          <enumeration value="CURRENT"/>
          <enumeration value="SAVINGS"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="loanType">
        <annotation>
          <documentation><![CDATA[Loan type. <br />
			        Valid values: <br />
					ANNUITY_MAN			Annuity management loan  <br />				
					SERIAL_MAN      	Serial management loan <br />  				
					ANNUITY      		Annuity loan <br />          					
					SERIAL      		Serial loan <br />      						
					FIXED_ANNUITY      	Fixed interest annuity loan <br />   			
					FIXED_SERIAL      	Fixed interest serial loan <br />				
					LONG_TERM      		Long term monitoring <br /> 					
					FIXED_ANNUITY_MAN	Fixed interest annuity management loan <br />	
					FIXED_SERIAL_MAN    Fixed interest serial management loan <br />	
					ADV_SERIAL      	Advanced fee serial loan <br /> 				
					INT_SUPPORT      	Interest support <br /> 						
					UNKNOWN				Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax20Type">
          <enumeration value="ANNUITY_MAN"/>
          <enumeration value="SERIAL_MAN"/>
          <enumeration value="ANNUITY"/>
          <enumeration value="SERIAL"/>
          <enumeration value="FIXED_ANNUITY"/>
          <enumeration value="FIXED_SERIAL"/>
          <enumeration value="LONG_TERM"/>
          <enumeration value="FIXED_ANNUITY_MAN"/>
          <enumeration value="FIXED_SERIAL_MAN"/>
          <enumeration value="ADV_SERIAL"/>
          <enumeration value="INT_SUPPORT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="loanCategory">
        <annotation>
          <documentation>The loan category. &lt;br />
				Valid values: &lt;br />
				ANNUITY 	Annuity loan types &lt;br />
				SERIAL 		Serial loan types &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="ANNUITY"/>
          <enumeration value="SERIAL"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="guarantorPart">
        <annotation>
          <documentation>The guarantor part of credit line. &lt;br />
				Valid values: &lt;br />
				ALL 		All credit line guaranteed &lt;br />
				FIRST 		First part guaranteed &lt;br />
				LAST 		Last part guaranteed &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="ALL"/>
          <enumeration value="FIRST"/>
          <enumeration value="LAST"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="creditLineType">
        <annotation>
          <documentation>Account credit line type. &lt;br />
                        Valid values : &lt;br />
                        ORDINARY    Ordinary credit line only exists &lt;br />
                        ADDITIONAL	Additional credit line also exists &lt;br />
                        UNKNOWN     Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="ORDINARY"/>
          <enumeration value="ADDITIONAL"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="mortgageCompanyType">
        <annotation>
          <documentation>Mortgage company relation, telling if there is a mortgage company relation of the account/product and where. &lt;br /> 
                        Valid values : &lt;br />
                        BANK     	No mortgage company, account/product belongs to bank &lt;br />
                        SPB1  		Sparebank 1 mortgage company &lt;br />
                        OTHER     	Other mortgage companies &lt;br />
                        UNKNOWN    	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="BANK"/>
          <enumeration value="SPB1"/>
          <enumeration value="OTHER"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="month">
        <annotation>
          <documentation>Month of year</documentation>
        </annotation>
        <restriction base="common:intMax2Type">
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="termLengthCode">
        <annotation>
          <documentation><![CDATA[Term length codes <br />
				Valid values: <br />
				MONTHLY 		Every month <br />
				SECONDMONTHLY 	Every second month <br />
				QUARTERLY 		Every third month <br />
				TERTIALY 		Every forth month <br />
				BIANNUALLY 		Every six months <br />
				ANNUALLY 		Once a year <br />
				UNKNOWN 		Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax20Type">
          <enumeration value="MONTHLY"/>
          <enumeration value="SECONDMONTHLY"/>
          <enumeration value="QUARTERLY"/>
          <enumeration value="TERTIALY"/>
          <enumeration value="BIANNUALLY"/>
          <enumeration value="ANNUALLY"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="errorOrigin">
        <annotation>
          <documentation>Error origin regarding collection of account data &lt;br />
				Valid values: &lt;br />
				CORE 			Error message returned from core &lt;br />
				FUND_CHECK 		Error message returned from fund check &lt;br />
				UNKNOWN 		Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax20Type">
          <enumeration value="CORE"/>
          <enumeration value="FUND_CHECK"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="statementFrequency">
        <annotation>
          <documentation><![CDATA[Statement frequency <br />
				Valid values: <br />
				DAILY 			Every day <br />
				WEEKLY 			Every week <br />
				SECONDWEEK 		Every second week <br />
				MONTHLY 		Every month <br />
				QUARTERLY 		Every third month <br />
				BIANNUALY 		Every six month <br />
				ANNUALY 		Annually <br />
				12THOFMONTH 	12th of each month <br />
				24THOFMONTH 	24th of each month <br />
				REQUEST 		On request <br />
				FULLPAGE 		Full page <br />
				NOSTATEMENT 	No statement <br />
				UNKNOWN 		Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="DAILY"/>
          <enumeration value="WEEKLY"/>
          <enumeration value="SECONDWEEK"/>
          <enumeration value="MONTHLY"/>
          <enumeration value="QUARTERLY"/>
          <enumeration value="BIANNUALY"/>
          <enumeration value="ANNUALY"/>
          <enumeration value="MONTHLYON12TH"/>
          <enumeration value="MONTHLYON24TH"/>
          <enumeration value="REQUEST"/>
          <enumeration value="FULLPAGE"/>
          <enumeration value="NOSTATEMENT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="reopenOptions">
        <annotation>
          <documentation>The account reopen options. &lt;br />
				Valid values: &lt;br />
				REOPEN_YES 	Account exist and reopen is possible &lt;br />
				REOPEN_NO 	Account exist and reopen is not possible &lt;br />
				EXIST_NO 	Account does not exist &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="REOPEN_YES"/>
          <enumeration value="REOPEN_NO"/>
          <enumeration value="EXIST_NO"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="insuranceCode">
        <annotation>
          <documentation><![CDATA[The insurance code. <br />
				Valid values: <br />
				NONE No insurance <br />
				OWNER Owner insured <br />
				COINSURED Coinsured <br />
				BOTH Both owner and co-insured <br />
				UNKNOWN Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="NONE"/>
          <enumeration value="OWNER"/>
          <enumeration value="COINSURED"/>
          <enumeration value="BOTH"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="accountProduct">
        <annotation>
          <documentation>Account product type.
				Valid values :
				LOCDEPOSIT 	Local currency deposit.
				CURDEPOSIT 	Currency deposit.
				UNKNOWN 	Unknown host value.</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="LOCDEPOSIT"/>
          <enumeration value="CURDEPOSIT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cco.enterprise.fs.evry.com:domain:customer:v2" xmlns:tns="urn:srv.cco.enterprise.fs.evry.com:domain:customer:v2" xmlns:corewscommon="urn:corews.enterprise.fs.evry.com:domain:common:v4" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Entities in the customer domain.</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v4"/>
      <simpleType name="customerType">
        <annotation>
          <documentation>Customer type &lt;br/>
                Valid values: &lt;br />
                RETAIL          Retail customer &lt;br/>             
                CORPORATE       Corporate customer &lt;br/>          
                SELF_EMPLOYED    Both/self employed customer &lt;br/>	 
				UNKNOWN			Unknown host value</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax15Type">
          <enumeration value="RETAIL"/>
          <enumeration value="CORPORATE"/>
          <enumeration value="SELF_EMPLOYED"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="maritalStatus">
        <annotation>
          <documentation><![CDATA[The marital status of the customer <br/>
				Valid values: <br/> 
	            MARRIED					Married	                                    (host value "G") <br/>  					
				UNMARRIED				Unmarried/single                            (host value "U") <br/>  					
				WIDOW_WIDOWER			Widow or widower after marriage             (host value "E") <br/>  					
				REGISTERED_PARTNER		Partner or equal sex marriage               (host value "P") <br/>  					
				COHABITATION			Cohabitor                                   (host value "S") <br/>  					
				SEPARATED				Separated from marriage                     (host value "Y") <br/>  					
				DIVORCED				Divorced after marriage or partnership      (host value "X") <br/>  					
				WIDOW_WIDOWER_PARTNER	Widow or widower after registered partner	(host value "F") <br/> 					 
				SEPARATED_PARTNER		Separated after registered partner	        (host value "Z") <br/> 					
				UNKNOWN					Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax25Type">
          <enumeration value="MARRIED"/>
          <enumeration value="UNMARRIED"/>
          <enumeration value="WIDOW_WIDOWER"/>
          <enumeration value="REGISTERED_PARTNER"/>
          <enumeration value="COHABITATION"/>
          <enumeration value="SEPARATED"/>
          <enumeration value="DIVORCED"/>
          <enumeration value="WIDOW_WIDOWER_PARTNER"/>
          <enumeration value="SEPARATED_PARTNER"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="maritalStatusengagementCustomerRead">
        <annotation>
          <documentation><![CDATA[The marital status of the customer <br/>
				Valid values: <br/> 
	            MARRIED					Married	<br/>  					
				UNMARRIED				Unmarried/single <br/>  					
				WIDOW_WIDOWER			Widow or widower after marriage <br/>  					
				REGISTERED_PARTNER		Partner or equal sex marriage <br/>  					
				COHABITATION			Cohabitor <br/>  					
				SEPARATED				Separated from marriage <br/>  					
				DIVORCED				Divorced after marriage or partnership <br/>  					
				UNKNOWN					Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax25Type">
          <enumeration value="MARRIED"/>
          <enumeration value="UNMARRIED"/>
          <enumeration value="WIDOW_WIDOWER"/>
          <enumeration value="REGISTERED_PARTNER"/>
          <enumeration value="COHABITATION"/>
          <enumeration value="SEPARATED"/>
          <enumeration value="DIVORCED"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="gender">
        <annotation>
          <documentation>Gender &lt;br />
				Valid values: &lt;br />
				MALE 			Male &lt;br/>
				FEMALE 			Female &lt;br/>
				UNKNOWN			Unknown host value</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="MALE"/>
          <enumeration value="FEMALE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:corews.enterprise.fs.evry.com:domain:common:v6" xmlns:tns="urn:corews.enterprise.fs.evry.com:domain:common:v6" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <simpleType name="alphaNumMax1Type">
        <annotation>
          <documentation>1 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax2Type">
        <annotation>
          <documentation>2 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax3Type">
        <annotation>
          <documentation>3 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax4Type">
        <annotation>
          <documentation>4 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax5Type">
        <annotation>
          <documentation>5 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax6Type">
        <annotation>
          <documentation>6 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax7Type">
        <annotation>
          <documentation>7 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax8Type">
        <annotation>
          <documentation>8 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax9Type">
        <annotation>
          <documentation>9 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax10Type">
        <annotation>
          <documentation>10 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax11Type">
        <annotation>
          <documentation>11 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax12Type">
        <annotation>
          <documentation>12 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax13Type">
        <annotation>
          <documentation>13 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax15Type">
        <annotation>
          <documentation>15 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax16Type">
        <annotation>
          <documentation>16 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax17Type">
        <annotation>
          <documentation>17 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="17"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax18Type">
        <annotation>
          <documentation>18 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax19Type">
        <annotation>
          <documentation>19 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="19"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax20Type">
        <annotation>
          <documentation>20 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="20"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax22Type">
        <annotation>
          <documentation>22 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="22"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax23Type">
        <annotation>
          <documentation>23 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="23"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax25Type">
        <annotation>
          <documentation>25 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="25"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax26Type">
        <annotation>
          <documentation>26 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="26"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax27Type">
        <annotation>
          <documentation>27 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="27"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax30Type">
        <annotation>
          <documentation>30 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax32Type">
        <annotation>
          <documentation>32 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="32"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax34Type">
        <annotation>
          <documentation>34 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax35Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax36Type">
        <annotation>
          <documentation>36 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="36"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax42Type">
        <annotation>
          <documentation>42 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="42"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax50Type">
        <annotation>
          <documentation>50 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="50"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax60Type">
        <annotation>
          <documentation>60 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="60"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax70Type">
        <annotation>
          <documentation>70 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="70"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax78Type">
        <annotation>
          <documentation>78 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="78"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax80Type">
        <annotation>
          <documentation>80 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="80"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax120Type">
        <annotation>
          <documentation>120 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="120"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax140Type">
        <annotation>
          <documentation>140 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="140"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax200Type">
        <annotation>
          <documentation>200 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="200"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax220Type">
        <annotation>
          <documentation>220 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="220"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax250Type">
        <annotation>
          <documentation>250 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="250"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax255Type">
        <annotation>
          <documentation>255 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="255"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax256Type">
        <annotation>
          <documentation>256 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="256"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax400Type">
        <annotation>
          <documentation>400 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="400"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax500Type">
        <annotation>
          <documentation>500 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="500"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax1Type">
        <annotation>
          <documentation>Integer value with max length 1</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax2Type">
        <annotation>
          <documentation>Integer value with max length 2</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax3Type">
        <annotation>
          <documentation>Integer value with max length 3</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax4Type">
        <annotation>
          <documentation>Integer value with max length 4</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax5Type">
        <annotation>
          <documentation>Integer value with max length 5</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax6Type">
        <annotation>
          <documentation>Integer value with max length 6</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax7Type">
        <annotation>
          <documentation>Integer value with max length 7</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax8Type">
        <annotation>
          <documentation>Integer value with max length 8</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax9Type">
        <annotation>
          <documentation>Integer value with max length 9</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="intMin1Max999Type">
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax9Type">
        <annotation>
          <documentation>Long value with max length 9.</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax10Type">
        <annotation>
          <documentation>Long value with max length 10</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax11Type">
        <annotation>
          <documentation>Long value with max length 11</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax12Type">
        <annotation>
          <documentation>Long value with max length 12</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax13Type">
        <annotation>
          <documentation>Long value with max length 13</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax16Type">
        <annotation>
          <documentation>Long value with max length 16</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax18Type">
        <annotation>
          <documentation>Long value with max length 18</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax100Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax40Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="40"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax240Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="240"/>
        </restriction>
      </simpleType>
      <simpleType name="iban">
        <annotation>
          <documentation>IBAN number - International Bank Account Number, comprising a country code, two check digits and a basic bank account-number (BBAN), eg. NO5928012192284.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="5"/>
          <maxLength value="34"/>
          <pattern value="[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianAccountNumber">
        <annotation>
          <documentation>Norwegian account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianCustomerNumber">
        <annotation>
          <documentation>Norwegian customer number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="regBankNumber">
        <annotation>
          <documentation>Reg bank number</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([0-9])*"/>
          <minLength value="4"/>
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntId">
        <annotation>
          <documentation>Customer internal id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="userId">
        <annotation>
          <documentation>User id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntIdNumeric">
        <annotation>
          <documentation>Numeric customer internal id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="amount">
        <annotation>
          <documentation>Decimal value of max length 18 with 3 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="18"/>
          <fractionDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="rate">
        <annotation>
          <documentation>Decimal value of max length 9 with 5 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="9"/>
          <fractionDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intId">
        <annotation>
          <documentation>Internal generated id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="productNumber">
        <annotation>
          <documentation>Product number</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="sequenceNumber">
        <annotation>
          <documentation>Sequence number.</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="url">
        <annotation>
          <documentation>URL</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1024"/>
        </restriction>
      </simpleType>
      <simpleType name="ratio">
        <annotation>
          <documentation>Ratio</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode5">
        <annotation>
          <documentation>Alphanumeric value with length 5</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="organisationUnitStrictType">
        <annotation>
          <documentation>Permitted values:'PC' - Profit Centers;'OU' - Organization Units</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PC"/>
          <enumeration value="OU"/>
        </restriction>
      </simpleType>
      <simpleType name="month">
        <annotation>
          <documentation>Month 1-12</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="positiveIntegerMax11Type">
        <annotation>
          <documentation>Positive(>0) integer value with max length 11</documentation>
        </annotation>
        <restriction base="positiveInteger">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="executiveOfficerId">
        <annotation>
          <documentation>Executive officer identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="executiveOfficerName">
        <annotation>
          <documentation>Executive officer name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="shortName">
        <annotation>
          <documentation>Short name of customer</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="productId">
        <annotation>
          <documentation>Product identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax18Type"/>
      </simpleType>
      <simpleType name="productShortName">
        <annotation>
          <documentation>Product short name - 6 characters</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax6Type"/>
      </simpleType>
      <simpleType name="productSequenceNumber">
        <annotation>
          <documentation>Product sequence number</documentation>
        </annotation>
        <restriction base="tns:sequenceNumber"/>
      </simpleType>
      <simpleType name="productName">
        <annotation>
          <documentation>Product name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="productIntId">
        <annotation>
          <documentation>Product internal id</documentation>
        </annotation>
        <restriction base="tns:intId"/>
      </simpleType>
      <simpleType name="profitCenter">
        <annotation>
          <documentation>Profit center id</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="profitCenterText">
        <annotation>
          <documentation>Profit center text</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="alias">
        <annotation>
          <documentation>Sets the alias that identifies the self service channel agreement.
				Either use value from numeric alias (for cash call channel) or
				alphanumeric alias (for internet bank, mobile bank, sms bank channel).</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="channel">
        <annotation>
          <documentation>Sets the self service channel.
				Valid values:
				WAP - Mobile bank channel agreement.
				INT - Internet bank channel agreement.
				SMS - Sms bank channel agreement.
				TLF - Cash call channel agreement.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax5Type">
          <enumeration value="WAP"/>
          <enumeration value="INT"/>
          <enumeration value="SMS"/>
          <enumeration value="TLF"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyCode">
        <annotation>
          <documentation>Currency code (ISO 4217)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([A-Z])*"/>
          <minLength value="3"/>
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationFactor">
        <annotation>
          <documentation>Interest calculation factor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationDivisor">
        <annotation>
          <documentation>Interest calculation divisor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="initialFunctionId">
        <annotation>
          <documentation>Application calling a service.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax8Type"/>
      </simpleType>
      <complexType name="customerInformationType">
        <sequence>
          <element minOccurs="0" name="customerNumber" type="tns:norwegianCustomerNumber"/>
          <element minOccurs="0" name="shortName" type="tns:shortName"/>
          <element minOccurs="0" name="profitCenter" type="tns:profitCenter"/>
          <element minOccurs="0" name="profitCenterText" type="tns:profitCenterText"/>
          <element minOccurs="0" name="productId" type="tns:productId"/>
          <element minOccurs="0" name="productShortName" type="tns:productShortName"/>
          <element minOccurs="0" name="executiveOfficerId" type="tns:executiveOfficerId"/>
          <element minOccurs="0" name="executiveOfficerName" type="tns:executiveOfficerName"/>
        </sequence>
      </complexType>
      <complexType name="customerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="customerIntId" type="tns:customerIntIdNumeric">
            <annotation>
              <documentation>The customer internal id.</documentation>
            </annotation>
          </element>
          <element name="customerNumber" type="tns:norwegianCustomerNumber">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="internationalCustomerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="internationalCustomerId" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer internal id.</documentation>
            </annotation>
          </element>
          <element name="internationalCustomerNumber" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyType">
        <annotation>
          <documentation>The product key consists of either (productNumber and
				sequenceNumber) OR productId.</documentation>
        </annotation>
        <choice>
          <element name="productKeyAlt1" type="tns:productKeyAlt1Type">
            <annotation>
              <documentation>Product key alternative 1 consists of product number
						and product sequence number.</documentation>
            </annotation>
          </element>
          <element name="productKeyAlt2" type="tns:productKeyAlt2Type">
            <annotation>
              <documentation>Product key alternative 2 consists of product id
						only.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyAlt1Type">
        <annotation>
          <documentation>Product key alternative 1 consists of the product
				number and the product sequence number.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productNumber" type="tns:productNumber">
            <annotation>
              <documentation>The product number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sequenceNumber" type="tns:sequenceNumber">
            <annotation>
              <documentation>The product sequence number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productKeyAlt2Type">
        <annotation>
          <documentation>Product key alternative 2 consists of the product id
				only.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="tns:productId">
            <annotation>
              <documentation>The product id.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="selfServiceKeyType">
        <annotation>
          <documentation>SelfServiceKey consist of alias and channel, and
				identifies a self service channel
				agreement.
				Both values must be set.</documentation>
        </annotation>
        <sequence>
          <element name="alias" type="tns:alias">
            <annotation>
              <documentation>Sets the alias that identifies the self service
						channel agreement.
						Either use value from numeric alias (for cash
						call channel) or
						alphanumeric alias (for internet bank, mobile
						bank, sms bank
						channel).</documentation>
            </annotation>
          </element>
          <element name="channel" type="tns:channel">
            <annotation>
              <documentation>Sets the self service channel.
						Valid values:
						WAP -
						Mobile bank channel agreement.
						INT - Internet bank channel
						agreement.
						SMS - Sms bank channel agreement.
						TLF - Cash call channel
						agreement.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="numericAlias">
        <annotation>
          <documentation>Numeric alias - which allows on all numerics as password and min and max is 11 digits.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{11}"/>
        </restriction>
      </simpleType>
      <simpleType name="pin">
        <annotation>
          <documentation>Numeric password for cash call.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,6}"/>
        </restriction>
      </simpleType>
      <simpleType name="password">
        <annotation>
          <documentation>Password for internet bank.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,11}"/>
        </restriction>
      </simpleType>
      <simpleType name="swiftAddress">
        <annotation>
          <documentation>ISO 9362 SWIFT address.&lt;br>
					4 characters: bank code (letters only)&lt;br>
					2 characters: ISO 3166-1 alpha-2 country code (letters only) &lt;br>
					2 characters: location code (letters and numbers) (if second charcter is "1", the receiver is a passive participant of the SWIFT network)&lt;br>
					3 characters: department code, optional ('XXX' for headquarters) (letters and numbers)</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v3" xmlns:tns="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v3" xmlns:common="urn:corews.enterprise.fs.evry.com:domain:common:v6" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Entities in the deposit account interest domain.</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v6"/>
      <simpleType name="accountListCriteriaType">
        <annotation>
          <documentation><![CDATA[The responsible type of the action type. <br/>
                Valid values: <br/>
                    OWNER                If selected then result will contain accounts the customer has responsible roles for <br>
                                         meaning accountMainRole OWNER, COOWNER, CODEBTOR, GUARANTOR and COLLATERAL  <br/>
                    OWNERORDISPOSAL      If selected then result will contain accounts the customer has responsible roles for including disposal of <br>
                                         meaning accountMainRole DISPOSAL, OWNER, COOWNER, CODEBTOR, GUARANTOR and COLLATERAL <br/>
                    DISPOSAL             If selected then result will contain accounts the customer has responsible roles for <br>
                                         meaning accountMainRole DISPOSAL <br/>
                    DEBITING             If selected then result will contain accounts the customer has responsible roles for <br>
                                         meaning accountMainRole OWNER, COOWNER and DISPOSAL <br/>]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax19Type">
          <enumeration value="OWNER"/>
          <enumeration value="OWNERORDISPOSAL"/>
          <enumeration value="DISPOSAL"/>
          <enumeration value="DEBITING"/>
        </restriction>
      </simpleType>
      <simpleType name="flagType">
        <annotation>
          <documentation>Flag values &lt;br/>
                Valid values: &lt;br/>
                    ALLOWED				This flag is allowed &lt;br>
                    NOT_ALLOWED      	This flag is not allowed &lt;br>
                    SPECIAL_CONDITIONS  This flag is allowed, but certain conditions may apply</documentation>
        </annotation>
        <restriction base="common:alphaNumMax19Type">
          <enumeration value="ALLOWED"/>
          <enumeration value="NOT_ALLOWED"/>
          <enumeration value="SPECIAL_CONDITIONS"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v20_1" xmlns:tns="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v20_1" xmlns:permission="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v3" xmlns:customer="urn:srv.cco.enterprise.fs.evry.com:domain:customer:v2" xmlns:common="urn:corews.enterprise.fs.evry.com:domain:common:v8" xmlns:account="urn:srv.cco.enterprise.fs.evry.com:domain:account:v2" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Types for the CCOSPermissionService.</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v8"/>
      <import namespace="urn:srv.cco.enterprise.fs.evry.com:domain:account:v2"/>
      <import namespace="urn:srv.cco.enterprise.fs.evry.com:domain:customer:v2"/>
      <import namespace="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v3"/>
      <complexType name="permissionAccountListQualificationType">
        <annotation>
          <documentation>Qualification type for listing of a given customer account permissions.</documentation>
        </annotation>
        <sequence>
          <element name="customerKey" type="common:internationalCustomerKeyType">
            <annotation>
              <documentation>Sets the customer number. &lt;br>
                        CustomerKey can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
          <element name="accountFilter" type="tns:accountFilterGroupType"/>
        </sequence>
      </complexType>
      <complexType name="accountFilterGroupType">
        <annotation>
          <documentation>Group containing account filtering information.</documentation>
        </annotation>
        <sequence>
          <choice>
            <element name="accountListCriteria" type="permission:accountListCriteriaType">
              <annotation>
                <documentation>Sets the accountListCriteria attribute, either OWNER / OWNERORDISPOSAL / DISPOSAL / DEBITING.</documentation>
              </annotation>
            </element>
            <element name="selfServiceKey" type="common:selfServiceKeyType">
              <annotation>
                <documentation>Sets the self service channel agreement key.</documentation>
              </annotation>
            </element>
          </choice>
        </sequence>
      </complexType>
      <complexType name="permissionAccountListResultType">
        <annotation>
          <documentation>This operation returns customer permissions to an account list.</documentation>
        </annotation>
        <sequence>
          <element name="customerGroup" type="tns:customerGroupType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="accountGroup" type="tns:accountGroupResultType"/>
        </sequence>
      </complexType>
      <complexType name="permissionAccountReadQualificationType">
        <annotation>
          <documentation>Qualification type for listing of a given customer account permissions.</documentation>
        </annotation>
        <sequence>
          <element name="customerKey" type="common:internationalCustomerKeyType">
            <annotation>
              <documentation>Sets the customer number. &lt;br>
                        CustomerKey can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
          <element name="accountNumber" type="common:accountNumberInputType">
            <annotation>
              <documentation>Sets the account number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="permissionAccountReadResultType">
        <annotation>
          <documentation>This operation returns specific customer account permissions.</documentation>
        </annotation>
        <sequence>
          <element name="customerGroup" type="tns:customerGroupType"/>
          <element minOccurs="0" name="accountGroup" type="tns:accountGroupResultType"/>
        </sequence>
      </complexType>
      <complexType name="customerGroupType">
        <annotation>
          <documentation>Group containing customer information.</documentation>
        </annotation>
        <sequence>
          <element name="customerIntId" type="common:alphaNumMax35Type">
            <annotation>
              <documentation>Returns the customer identification, being a unique internal identifier of a customer.</documentation>
            </annotation>
          </element>
          <element name="customerNumber" type="common:alphaNumMax35Type">
            <annotation>
              <documentation>Returns the customer identification, being a unique internal identifier of a customer.</documentation>
            </annotation>
          </element>
          <element name="customerType" type="customer:customerType">
            <annotation>
              <documentation>CustomerType. &lt;br/>
                        Valid values: &lt;br/> 
                            RETAIL          Retail customer &lt;br/> 
                            CORPORATE       Corporate customer &lt;br/>  
                            SELF_EMPLOYED   Both/self employed person &lt;br/>   
                            UNKNOWN         Unknown host value</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="firstName" type="common:alphaNumMax80Type">
            <annotation>
              <documentation>Returns the first name of the queried customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lastName" type="common:alphaNumMax80Type">
            <annotation>
              <documentation>Returns the last name of the queried customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateName" type="common:alphaNumMax80Type">
            <annotation>
              <documentation>Returns the corporate name of the queried customer.</documentation>
            </annotation>
          </element>
          <element name="paymentCustomerAgreement" type="boolean">
            <annotation>
              <documentation>Returns the payment customer agreement flag. &lt;br>
                        True if the customer has the payment agreement, and then has the rights to create contract giro payments.</documentation>
            </annotation>
          </element>
          <element name="ebillCustomerAgreement" type="boolean">
            <annotation>
              <documentation>Returns the EBill customer agreement flag. &lt;br>
                        True if the customer has the EBill agreement, and then has the rights to create EBill payments.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="accountGroupResultType">
        <annotation>
          <documentation>Group containing account information.</documentation>
        </annotation>
        <sequence>
          <element name="accountNumber" type="common:accountNumberOutputType">
            <annotation>
              <documentation>Returns the account number (BBAN/IBAN).</documentation>
            </annotation>
          </element>
          <element name="accountMainRole" type="account:accountMainRole">
            <annotation>
              <documentation><![CDATA[Returns the account main role type. <br>
                        Valid values : <br>
                        ACCESS      The INSYN role in the core system - Customer has read rights on the account. <br>
                        ADDRESSEE   The TILSK role in the core system - Customer receives account statement for the account. <br>
                        DISPOSAL    The DISP role in the core system - Customer has the disposal of the account. <br>
                        CODEBTOR    The SAMSK role in the core system - Customer is the co-debtor on the loan. <br>
                        COLLATERAL  The SIKST role in the core system - Customer has a collateral agreement concerning the loan. <br>
                        COOWNER     The MEDE role in the core system - Customer is the co-owner on the account. <br>
                        GUARANTOR   The KAUSJ role in the core system - Customer is the guarantor of the loan. <br>
                        GUARDIAN    The VERGE role in the core system - Customer has guardian rights on the account. <br>
                        OWNER       The EIER role in the core system - Customer is the owner of the account. <br>
                        UNKNOWN     Unknown host value.]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="agreementName" type="common:alphaNumMax60Type">
            <annotation>
              <documentation>Returns the account agreement name.</documentation>
            </annotation>
          </element>
          <element name="currencyCode" type="common:currencyCode">
            <annotation>
              <documentation>Returns the account ISO4217 currency code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="accountClosed" type="boolean">
            <annotation>
              <documentation>Returns the account close status. &lt;br>
                        True if account is closed, false if not. &lt;br>
                        AccountTerminated is fetched from the FundCheck system and will not be returned if the FundCheck service returns an error. &lt;br>
                        In these cases errorOrigin will return FUND_CHECK.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="cashPoolSystem" type="account:cashpoolSystem">
            <annotation>
              <documentation>The account cashpool system. &lt;br />
                        Valid values: &lt;br />
                        KKS         Old cashPool system &lt;br />
                        CPL         New cashPool system &lt;br />
                        UNKNOWN     Unknown host value</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="error" type="tns:errorGroupType"/>
          <element minOccurs="0" name="accountOwnerGroup" type="tns:accountOwnerGroupType"/>
          <element minOccurs="0" name="balance" type="tns:balanceGroupType"/>
          <element minOccurs="0" name="productGroup" type="tns:productGroupType"/>
          <element minOccurs="0" name="permissionGroup" type="tns:permissionGroupType"/>
        </sequence>
      </complexType>
      <complexType name="accountOwnerGroupType">
        <annotation>
          <documentation>Group containing account owner information.</documentation>
        </annotation>
        <sequence>
          <element name="accountOwnerCustomerIntId" type="common:alphaNumMax35Type">
            <annotation>
              <documentation>Returns the account owner's internal customer id.</documentation>
            </annotation>
          </element>
          <element name="accountOwnerCustomerNumber" type="common:alphaNumMax35Type">
            <annotation>
              <documentation>Returns the account owner's customer number.</documentation>
            </annotation>
          </element>
          <element name="accountOwnerCustomerType" type="customer:customerType">
            <annotation>
              <documentation>CustomerType. &lt;br/>
                        Valid values: &lt;br/> 
                            RETAIL          Retail customer &lt;br/> 
                            CORPORATE       Corporate customer &lt;br/>  
                            SELF_EMPLOYED   Both/self employed person &lt;br/>   
                            UNKNOWN         Unknown host value</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="accountOwnerLastName" type="common:alphaNumMax80Type">
            <annotation>
              <documentation>Returns the account owner last name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="accountOwnerFirstName" type="common:alphaNumMax80Type">
            <annotation>
              <documentation>Returns the account owner first name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="accountOwnerCorporateName" type="common:alphaNumMax80Type">
            <annotation>
              <documentation>Returns the account owner corporate name.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="balanceGroupType">
        <annotation>
          <documentation>Group containing balance information for an account. &lt;br>
                All amounts are fetched from the FundCheck system and will not be returned if the FundCheck service returns an error. &lt;br>
                In these cases errorOrigin will return FUND_CHECK.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="bookedBalance" type="common:amount">
            <annotation>
              <documentation>Returns the account's currency booked balance.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="localCurrencyBookedBalance" type="common:amount">
            <annotation>
              <documentation>Returns the account's local currency booked balance.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="availableBalance" type="common:amount">
            <annotation>
              <documentation>Returns the account's currency available balance.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="localCurrencyAvailableBalance" type="common:amount">
            <annotation>
              <documentation>Returns the account's local currency available balance.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="creditLine" type="common:amount">
            <annotation>
              <documentation>Returns the account's credit line.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="localCurrencyCreditLine" type="common:amount">
            <annotation>
              <documentation>Returns the account's local currency credit line.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="totalReservedAmount" type="common:amount">
            <annotation>
              <documentation>Returns the account's total reserved amount.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="localCurrencyTotalReservedAmount" type="common:amount">
            <annotation>
              <documentation>Returns the account's total local currency reserved amount.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="blockedAmount" type="common:amount">
            <annotation>
              <documentation>Returns the account's blocked amount.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="localCurrencyBlockedAmount" type="common:amount">
            <annotation>
              <documentation>Returns the account's local currency blocked amount.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="guarantorAmount" type="common:amount">
            <annotation>
              <documentation>Returns the guarantor amount for accounts with productSystem value GA-KONTO and UL-KONTO.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productGroupType">
        <annotation>
          <documentation>Group containing product information for an account.</documentation>
        </annotation>
        <sequence>
          <element name="productSystem" type="common:alphaNumMax15Type">
            <annotation>
              <documentation><![CDATA[Returns the account's product system. <br>
                        Typical values: <br>
                        RK-KONTO     Local currency deposit accounts <br>
                        VR-KONTO     Currency deposit accounts <br>
                        UL-KONTO     Local currency loan accounts <br>
                        GA-KONTO     Guarantee accounts <br>
                        CASA         Core renewal deposit accounts <br>
                        LOAN         Core renewal loan accounts <br>
                        INTERNAL     Core renewal bank internal accounts]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productName" type="common:alphaNumMax35Type">
            <annotation>
              <documentation>Returns the account's product name. &lt;br>
                        For accounts in the old core system this will be the KO description. &lt;br>
                        For accounts in the new core system this will be the product name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productDescriptionCode" type="common:alphaNumMax2Type">
            <annotation>
              <documentation>Returns the account's product description code. &lt;br>
                        See handbook for list of reserved codes.  &lt;br>
                        Only applicable for accounts in the old core system.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="accountDescription" type="common:alphaNumMax35Type">
            <annotation>
              <documentation>Returns the account's description from the account system. &lt;br>
                        Only applicable for accounts in the old core system.</documentation>
            </annotation>
          </element>
          <element name="productSubTypeX" type="common:alphaNumMax18Type">
            <annotation>
              <documentation><![CDATA[Returns the account's sub category type of the product. <br>
                        All future product sub types are not yet defined. <br> 
                        The X in the item name is there to mark that the values are potential valid values. <br> 
                        Typical values : <br> 
                        RK-KONTO <br>
                            CURRENT         Deposit user account. <br> 
                            SAVINGS         Deposit savings account. <br> 
                            BSU             Local currency deposit BSU account. <br> 
                            TAXWITHDRAW     Local currency deposit tax withdrawal account. <br> 
                            YEARINTBONUS    Local currency deposit yearly interest bonus account. <br> 
                            IFRS            Local currency deposit IFRS account. <br> 
                            SAVEAGREE       Local currency savings agreement account. <br> 
                        VR-KONTO <br>
                            CURRENT         Currency deposit user account. <br> 
                            SLS             Specialized Lending System shadow account. <br> 
                        UL-KONTO <br>
                            ANNLOAN         Annuity loan. <br>
                            FIANNLOAN       Fixed interest annuity loan. <br>
                            SERLOAN         Serial loan. <br>
                            FISERLOAN       Fixed interest serial loan. <br>
                            LTO             Loan under long term surveillance. <br>
                        GA-KONTO <br>
                            PAYGUAR         Payment guarantee. <br>
                            CONTRACTGUAR    Contract guarantee. <br>
                            LOANGUAR        Loan guarantee. <br>
                            TAXGUAR         Tax guarantee. <br>
                            OTHERGUAR       Other guarantee. <br>
                            SECGUAR         Security guarantee. <br>
                            feilkonto        <br>
                        CASA <br>
                            CURRENT         Deposit user account. <br> 
                            SAVINGS         Deposit savings account. <br>]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productId" type="tns:productIdGroupType"/>
        </sequence>
      </complexType>
      <complexType name="productIdGroupType">
        <annotation>
          <documentation>Group containing productId information for an account.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="common:productId">
            <annotation>
              <documentation>Returns the product's internal id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productKey" type="common:alphaNumMax10Type">
            <annotation>
              <documentation>Returns the product's key. &lt;br>
                        For accounts in the old core system this will be the KO key. &lt;br>
                        For accounts in the new core system this will be the 5 characters alphanumeric key.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productIdX" type="common:productId">
            <annotation>
              <documentation>The product identification of the account product, being either the internal productId used by core renewal or the KO key used by old core.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productNumber" type="common:sequenceNumber">
            <annotation>
              <documentation>Returns the account's product number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productSequenceNumber" type="common:sequenceNumber">
            <annotation>
              <documentation>Returns the account's product sequence number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="permissionGroupType">
        <annotation>
          <documentation>Group containing information about permissions and restrictions regarding the access to and use of an account.</documentation>
        </annotation>
        <sequence>
          <element name="disposalRight" type="boolean">
            <annotation>
              <documentation>Returns true if the customer has disposal rights to the account, false if not. &lt;br>
                        This only verifies that the customer has disposal rights to the account, the product might have restrictions that prevent payment/transfer from the account.</documentation>
            </annotation>
          </element>
          <element name="accessRight" type="boolean">
            <annotation>
              <documentation>Returns true if the customer has read access rights to the account, false if not.</documentation>
            </annotation>
          </element>
          <element name="automaticDebiting" type="boolean">
            <annotation>
              <documentation>Returns true if it is possible to use the account for automatic debiting, i.e. if the account can be used as invoice account or contract giro payments. False if not.</documentation>
            </annotation>
          </element>
          <element name="conditionWithdrawalCharges" type="boolean">
            <annotation>
              <documentation>Returns true if there are conditions for withdrawal charges associated with the account product, false if not. &lt;br>
                        Extraordinary charges can be free withdrawal limit.</documentation>
            </annotation>
          </element>
          <element name="specialConditionWithdrawal" type="boolean">
            <annotation>
              <documentation>Returns true if there are special conditions for withdrawal associated with the account, false if not. &lt;br>
                        Special conditions for withdrawal will usually exist for BSU, Skattetrekk, Fastrente etc.</documentation>
            </annotation>
          </element>
          <element name="specialConditionDeposit" type="boolean">
            <annotation>
              <documentation>Returns true if there are special conditions for deposit associated with the account, false if not. &lt;br>
                        Special conditions for deposit will usually exist for BSU, Skattetrekk, Fastrente etc.</documentation>
            </annotation>
          </element>
          <element name="paymentAllowed" type="boolean">
            <annotation>
              <documentation>Returns true if the product allows payments to be executed from the account, false if not.</documentation>
            </annotation>
          </element>
          <element name="transferAllowed" type="boolean">
            <annotation>
              <documentation>Returns true if the product allows transfers to be executed from the account, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="blockedWithdrawal" type="boolean">
            <annotation>
              <documentation>Returns true if the account is blocked for withdrawals, false if not. &lt;br>
                        BlockedWithdrawal is fetched from the FundCheck system and will not be returned if the FundCheck service returns an error. &lt;br>
                        In these cases errorOrigin will return FUND_CHECK.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="blockedDeposit" type="boolean">
            <annotation>
              <documentation>Returns true if the account is blocked for deposit, false if not. &lt;br>
                        BlockedDeposit is fetched from the FundCheck system and will not be returned if the FundCheck service returns an error. &lt;br>
                        In these cases errorOrigin will return FUND_CHECK.</documentation>
            </annotation>
          </element>
          <element name="billingCharges" type="boolean">
            <annotation>
              <documentation>Returns true if the account can be used as a billing account for charges, false if not &lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="aggregatedPermissions" type="tns:aggregatedPermissionsGroupType">
            <annotation>
              <documentation>Group containing aggregated permissions and restrictions regarding the access to and use of an account. &lt;br>
                        	Information from the FundCheck system is mandatory and the group will not be returned if the FundCheck service returns an error. &lt;br>
                        	In these cases errorOrigin will return FUND_CHECK. &lt;br>
                        	Primarily intended to simplify the processing in self-service channels like internet bank and mobile bank.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="aggregatedPermissionsGroupType">
        <annotation>
          <documentation>Contains information about what the account may or may not be used for.</documentation>
        </annotation>
        <sequence>
          <element name="consolidatedPayment" type="permission:flagType">
            <annotation>
              <documentation>Can this account be used as a payment account ? &lt;br>
		                Valid values: &lt;br/>
		                    ALLOWED				This account may be used &lt;br>
		                    NOT_ALLOWED      	This account may not be used &lt;br>
		                    SPECIAL_CONDITIONS  This account may be used, but certain conditions may apply &lt;br>
		                    					For instance for tax accounts where only a few transaction codes are allowed</documentation>
            </annotation>
          </element>
          <element name="consolidatedTransferFrom" type="permission:flagType">
            <annotation>
              <documentation>Can this account be used as a transfer from account ? &lt;br>
		                Valid values: &lt;br/>
		                    ALLOWED				This account may be used &lt;br>
		                    NOT_ALLOWED      	This account may not be used &lt;br>
		                    SPECIAL_CONDITIONS  This account may be used, but certain conditions may apply</documentation>
            </annotation>
          </element>
          <element name="consolidatedTransferTo" type="permission:flagType">
            <annotation>
              <documentation>Can this account be used as a transfer to account ? &lt;br>
		                Valid values: &lt;br/>
		                    ALLOWED				This account may be used &lt;br>
		                    NOT_ALLOWED      	This account may not be used &lt;br>
		                    SPECIAL_CONDITIONS  This account may be used, but certain conditions may apply &lt;br>
		                    					For instance for BSU accounts where there may exist limitations in amount</documentation>
            </annotation>
          </element>
          <element name="consolidatedPaymentAgreement" type="boolean">
            <annotation>
              <documentation>If TRUE this account may be used for a payment agreement</documentation>
            </annotation>
          </element>
          <element name="consolidatedAutomaticDebiting" type="boolean">
            <annotation>
              <documentation>If TRUE this account may be used for automatic debiting</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="errorGroupType">
        <annotation>
          <documentation>Group containing error information regarding collection of account data.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="errorOrigin" type="account:errorOrigin">
            <annotation>
              <documentation>Returns the error origin . &lt;br/>
                        Valid values: &lt;br/>
                        CORE            Error message returned from core &lt;br />
                        FUND_CHECK      Error message returned from fund check &lt;br />
                        UNKNOWN         Unknown host value</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:corews.enterprise.fs.evry.com:domain:common:v10" xmlns:tns="urn:corews.enterprise.fs.evry.com:domain:common:v10" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <simpleType name="alphaNumMax1Type">
        <annotation>
          <documentation>1 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax2Type">
        <annotation>
          <documentation>2 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax3Type">
        <annotation>
          <documentation>3 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax4Type">
        <annotation>
          <documentation>4 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax5Type">
        <annotation>
          <documentation>5 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax6Type">
        <annotation>
          <documentation>6 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax7Type">
        <annotation>
          <documentation>7 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax8Type">
        <annotation>
          <documentation>8 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax9Type">
        <annotation>
          <documentation>9 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax10Type">
        <annotation>
          <documentation>10 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax11Type">
        <annotation>
          <documentation>11 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax12Type">
        <annotation>
          <documentation>12 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax13Type">
        <annotation>
          <documentation>13 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax15Type">
        <annotation>
          <documentation>15 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax16Type">
        <annotation>
          <documentation>16 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax17Type">
        <annotation>
          <documentation>17 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="17"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax18Type">
        <annotation>
          <documentation>18 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax19Type">
        <annotation>
          <documentation>19 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="19"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax20Type">
        <annotation>
          <documentation>20 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="20"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax21Type">
        <annotation>
          <documentation>21 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="21"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax22Type">
        <annotation>
          <documentation>22 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="22"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax23Type">
        <annotation>
          <documentation>23 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="23"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax24Type">
        <annotation>
          <documentation>24 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="24"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax25Type">
        <annotation>
          <documentation>25 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="25"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax26Type">
        <annotation>
          <documentation>26 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="26"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax27Type">
        <annotation>
          <documentation>27 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="27"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax30Type">
        <annotation>
          <documentation>30 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax32Type">
        <annotation>
          <documentation>32 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="32"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax34Type">
        <annotation>
          <documentation>34 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax35Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax36Type">
        <annotation>
          <documentation>36 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="36"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax40Type">
        <annotation>
          <documentation>40 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="40"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax42Type">
        <annotation>
          <documentation>42 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="42"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax50Type">
        <annotation>
          <documentation>50 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="50"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax60Type">
        <annotation>
          <documentation>60 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="60"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax70Type">
        <annotation>
          <documentation>70 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="70"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax78Type">
        <annotation>
          <documentation>78 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="78"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax80Type">
        <annotation>
          <documentation>80 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="80"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax100Type">
        <annotation>
          <documentation>100 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax120Type">
        <annotation>
          <documentation>120 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="120"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax140Type">
        <annotation>
          <documentation>140 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="140"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax150Type">
        <annotation>
          <documentation>150 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="150"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax200Type">
        <annotation>
          <documentation>200 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="200"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax220Type">
        <annotation>
          <documentation>220 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="220"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax240Type">
        <annotation>
          <documentation>240 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="240"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax250Type">
        <annotation>
          <documentation>250 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="250"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax255Type">
        <annotation>
          <documentation>255 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="255"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax256Type">
        <annotation>
          <documentation>256 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="256"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax400Type">
        <annotation>
          <documentation>400 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="400"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax500Type">
        <annotation>
          <documentation>500 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="500"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax1Type">
        <annotation>
          <documentation>Integer value with max length 1</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax2Type">
        <annotation>
          <documentation>Integer value with max length 2</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax3Type">
        <annotation>
          <documentation>Integer value with max length 3</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax4Type">
        <annotation>
          <documentation>Integer value with max length 4</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax5Type">
        <annotation>
          <documentation>Integer value with max length 5</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax6Type">
        <annotation>
          <documentation>Integer value with max length 6</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax7Type">
        <annotation>
          <documentation>Integer value with max length 7</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax8Type">
        <annotation>
          <documentation>Integer value with max length 8</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax9Type">
        <annotation>
          <documentation>Integer value with max length 9</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="intMin1Max999Type">
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax9Type">
        <annotation>
          <documentation>Long value with max length 9.</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax10Type">
        <annotation>
          <documentation>Long value with max length 10</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax11Type">
        <annotation>
          <documentation>Long value with max length 11</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax12Type">
        <annotation>
          <documentation>Long value with max length 12</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax13Type">
        <annotation>
          <documentation>Long value with max length 13</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax16Type">
        <annotation>
          <documentation>Long value with max length 16</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax18Type">
        <annotation>
          <documentation>Long value with max length 18</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="iban">
        <annotation>
          <documentation>IBAN number - International Bank Account Number, comprising a country
				code, two check digits and a basic bank account-number (BBAN), eg.
				NO5928012192284.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="5"/>
          <maxLength value="34"/>
          <pattern value="[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianAccountNumber">
        <annotation>
          <documentation>Norwegian account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianCustomerNumber">
        <annotation>
          <documentation>Norwegian customer number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="regBankNumber">
        <annotation>
          <documentation>Reg bank number</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([0-9])*"/>
          <minLength value="4"/>
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntId">
        <annotation>
          <documentation>Customer internal id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="userId">
        <annotation>
          <documentation>User id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntIdNumeric">
        <annotation>
          <documentation>Numeric customer internal id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="amount">
        <annotation>
          <documentation>Decimal value of max length 18 with 3 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="18"/>
          <fractionDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="rate">
        <annotation>
          <documentation>Decimal value of max length 9 with 5 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="9"/>
          <fractionDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intId">
        <annotation>
          <documentation>Internal generated id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="productNumber">
        <annotation>
          <documentation>Product number</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="sequenceNumber">
        <annotation>
          <documentation>Sequence number.</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="url">
        <annotation>
          <documentation>URL</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1024"/>
        </restriction>
      </simpleType>
      <simpleType name="ratio">
        <annotation>
          <documentation>Ratio</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode5">
        <annotation>
          <documentation>Alphanumeric value with length 5</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="organisationUnitStrictType">
        <annotation>
          <documentation>Permitted values:'PC' - Profit Centers;'OU' -
				Organization Units</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PC"/>
          <enumeration value="OU"/>
        </restriction>
      </simpleType>
      <simpleType name="month">
        <annotation>
          <documentation>Month 1-12</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="positiveIntegerMax11Type">
        <annotation>
          <documentation>Positive(>0) integer value with max length 11</documentation>
        </annotation>
        <restriction base="positiveInteger">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="executiveOfficerId">
        <annotation>
          <documentation>Executive officer identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="executiveOfficerName">
        <annotation>
          <documentation>Executive officer name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="shortName">
        <annotation>
          <documentation>Short name of customer</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="productId">
        <annotation>
          <documentation>Product identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax18Type"/>
      </simpleType>
      <simpleType name="productShortName">
        <annotation>
          <documentation>Product short name - 6 characters</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax6Type"/>
      </simpleType>
      <simpleType name="productSequenceNumber">
        <annotation>
          <documentation>Product sequence number</documentation>
        </annotation>
        <restriction base="tns:sequenceNumber"/>
      </simpleType>
      <simpleType name="productName">
        <annotation>
          <documentation>Product name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="productIntId">
        <annotation>
          <documentation>Product internal id</documentation>
        </annotation>
        <restriction base="tns:intId"/>
      </simpleType>
      <simpleType name="profitCenter">
        <annotation>
          <documentation>Profit center id</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="profitCenterText">
        <annotation>
          <documentation>Profit center text</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="alias">
        <annotation>
          <documentation>Sets the alias that identifies the self service channel agreement.
				Either use value from numeric alias (for cash call channel) or
				alphanumeric alias (for internet bank, mobile bank, sms bank
				channel).</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="channel">
        <annotation>
          <documentation>Sets the self service channel.
				Valid values:
				WAP - Mobile bank channel agreement.
				INT - Internet bank channel agreement.
				SMS - Sms bank channel agreement.
				TLF - Cash call channel agreement.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax5Type">
          <enumeration value="WAP"/>
          <enumeration value="INT"/>
          <enumeration value="SMS"/>
          <enumeration value="TLF"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyCode">
        <annotation>
          <documentation>Currency code (ISO 4217)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([A-Z])*"/>
          <minLength value="3"/>
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationFactor">
        <annotation>
          <documentation>Interest calculation factor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationDivisor">
        <annotation>
          <documentation>Interest calculation divisor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="initialFunctionId">
        <annotation>
          <documentation>Application calling a service.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax8Type"/>
      </simpleType>
      <complexType name="customerInformationType">
        <sequence>
          <element minOccurs="0" name="customerNumber" type="tns:alphaNumMax35Type"/>
          <element minOccurs="0" name="shortName" type="tns:shortName"/>
          <element minOccurs="0" name="profitCenter" type="tns:profitCenter"/>
          <element minOccurs="0" name="profitCenterText" type="tns:profitCenterText"/>
          <element minOccurs="0" name="productId" type="tns:productId"/>
          <element minOccurs="0" name="productShortName" type="tns:productShortName"/>
          <element minOccurs="0" name="executiveOfficerId" type="tns:executiveOfficerId"/>
          <element minOccurs="0" name="executiveOfficerName" type="tns:executiveOfficerName"/>
        </sequence>
      </complexType>
      <complexType name="customerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="customerIntId" type="tns:customerIntIdNumeric">
            <annotation>
              <documentation>The customer internal id.</documentation>
            </annotation>
          </element>
          <element name="customerNumber" type="tns:norwegianCustomerNumber">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="internationalCustomerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="internationalCustomerId" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer internal id.</documentation>
            </annotation>
          </element>
          <element name="internationalCustomerNumber" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyType">
        <annotation>
          <documentation>The product key consists of either (productNumber and
				sequenceNumber) OR productId.</documentation>
        </annotation>
        <choice>
          <element name="productKeyAlt1" type="tns:productKeyAlt1Type">
            <annotation>
              <documentation>Product key alternative 1 consists of product number
						and product sequence number.</documentation>
            </annotation>
          </element>
          <element name="productKeyAlt2" type="tns:productKeyAlt2Type">
            <annotation>
              <documentation>Product key alternative 2 consists of product id
						only.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyAlt1Type">
        <annotation>
          <documentation>Product key alternative 1 consists of the product
				number and the product sequence number.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productNumber" type="tns:productNumber">
            <annotation>
              <documentation>The product number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sequenceNumber" type="tns:sequenceNumber">
            <annotation>
              <documentation>The product sequence number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productKeyAlt2Type">
        <annotation>
          <documentation>Product key alternative 2 consists of the product id
				only.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="tns:productId">
            <annotation>
              <documentation>The product id.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="selfServiceKeyType">
        <annotation>
          <documentation>SelfServiceKey consist of alias and channel, and
				identifies a self service channel
				agreement.
				Both values must be set.</documentation>
        </annotation>
        <sequence>
          <element name="alias" type="tns:alias">
            <annotation>
              <documentation>Sets the alias that identifies the self service
						channel agreement.&lt;br>
						Either use value from numeric alias (for cash
						call channel) or
						alphanumeric alias (for internet bank, mobile
						bank, sms bank
						channel).</documentation>
            </annotation>
          </element>
          <element name="channel" type="tns:channel">
            <annotation>
              <documentation>Sets the self service channel.&lt;br>
						Valid values:&lt;br>
						WAP - Mobile bank channel agreement.&lt;br>
						INT - Internet bank channel agreement.&lt;br>
						SMS - Sms bank channel agreement.&lt;br>
						TLF - Cash call channel agreement.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="channelOutput">
        <union memberTypes="tns:channel tns:unknown"/>
      </simpleType>
      <simpleType name="numericAlias">
        <annotation>
          <documentation>Numeric alias - which allows on all numerics as password and min and max is
				11 digits.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{11}"/>
        </restriction>
      </simpleType>
      <simpleType name="pin">
        <annotation>
          <documentation>Numeric password for cash call.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,6}"/>
        </restriction>
      </simpleType>
      <simpleType name="password">
        <annotation>
          <documentation>Password for internet bank.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,11}"/>
        </restriction>
      </simpleType>
      <simpleType name="swiftAddress">
        <annotation>
          <documentation>ISO 9362 SWIFT address. &lt;br>
				4 characters: bank code (letters only) &lt;br>
				2 characters: ISO 3166-1 alpha-2 country code (letters only)
				&lt;br>
				2 characters: location code (letters and numbers) (if second charcter
				is "1", the receiver is a passive participant of the SWIFT network)
				&lt;br>
				3 characters: department code, optional ('XXX' for headquarters)
				(letters and numbers)</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <complexType name="accountNumberInputType">
        <annotation>
          <documentation>The account number input as BBAN or IBAN format.</documentation>
        </annotation>
        <sequence>
          <choice>
            <element name="bban" type="tns:alphaNumMax30Type">
              <annotation>
                <documentation>Basic Bank Account Number, where format is decided by the national
							central bank or designated payment authority of each country, eg.
							12345678901</documentation>
              </annotation>
            </element>
            <element name="iban" type="tns:iban">
              <annotation>
                <documentation>International Bank Account Number, comprising a country code, two check digits
							and a bank account-number (BBAN), eg. XX9912345678901</documentation>
              </annotation>
            </element>
          </choice>
        </sequence>
      </complexType>
      <complexType name="accountNumberOutputType">
        <annotation>
          <documentation>The account number Output as BBAN and IBAN format.</documentation>
        </annotation>
        <sequence>
          <element name="bban" type="tns:alphaNumMax30Type">
            <annotation>
              <documentation>Basic Bank Account Number, where format is decided by the national
						central bank or designated payment authority of each country, eg.
						12345678901</documentation>
            </annotation>
          </element>
          <element name="iban" type="tns:iban">
            <annotation>
              <documentation>International Bank Account Number, comprising a country code, two check digits
						and a bank account-number (BBAN), eg. XX9912345678901</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="unknown">
        <annotation>
          <documentation>Unknown value
				Valid values:
				UNKNOWN Unknown host value</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type">
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="percentageWithDecimals">
        <annotation>
          <documentation>Decimal value of max length 5 with 2 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="5"/>
          <fractionDigits value="2"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cco.enterprise.fs.evry.com:domain:account:v3" xmlns:tns="urn:srv.cco.enterprise.fs.evry.com:domain:account:v3" xmlns:common="urn:corews.enterprise.fs.evry.com:domain:common:v4" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Entities in the account domain</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v4"/>
      <simpleType name="accountMainRole">
        <annotation>
          <documentation><![CDATA[Account main role type. <br />
				Valid values : <br />
				OWNER		Owner <br />
				DISPOSAL	Has disposal of <br />
				COOWNER		Co-owner <br />
				CODEBTOR	Co-debtor <br />
				COLLATERAL	Collateral <br />
				GUARDIAN	Guardian <br />
				ACCESS		Access <br />
				ADDRESSEE	Adressee <br />
				GUARANTOR	Guarantor <br />
				UNKNOWN		Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="OWNER"/>
          <enumeration value="DISPOSAL"/>
          <enumeration value="COOWNER"/>
          <enumeration value="CODEBTOR"/>
          <enumeration value="COLLATERAL"/>
          <enumeration value="GUARDIAN"/>
          <enumeration value="ACCESS"/>
          <enumeration value="ADDRESSEE"/>
          <enumeration value="GUARANTOR"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="accountMainRoleV2">
        <annotation>
          <documentation><![CDATA[Account main role type. <br />
				Valid values : <br />
				OWNER 						Owner <br />
				DISPOSAL 					Has disposal of <br />
				COOWNER 					Co-owner <br />
				CODEBTOR 					Co-debtor <br />
				COLLATERAL 					Collateral <br />
				GUARDIAN 					Guardian <br />
				ACCESS 						Access <br />
				ADDRESSEE 					Adressee <br />
				GUARANTOR 					Guarantor <br />
				AMETA 						Ameta <br />
				BENEFICIARY 				Beneficiary  <br />
				PAYER 						Payer <br />
				VOUCHER 					Voucher <br />
				EMAIL 						Email <br />
				FAMILY_SORTED_SHIPMENT 		Family sorted shipment <br />
				INSURED 					Insured <br />
				POLICYHOLDER 				Policy holder <br />
				CONTACT						contact <br />
				CONVERTED_ROLE 				Converted role <br />
				CREDITOR 					Creditor <br />
				MEMBER 						Member <br />
				SEE_SPECIFIC_NOTE 			See specific note <br />
				MORTGAGEE 					Mortgagee <br />
				ADDRESSEE_PULL_SINGLE 		Addressee pull single <br />
				ADDRESSEE_LOAN 				Addressee loan <br />
				ADDRESSEE_CHILD_INSURANCE 	Addressee child insurance <br />
				ADDRESSEE_FAX 				Addressee fax <br />
				OPENER 						Opener  <br />
				UNKNOWN 					Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax35Type">
          <enumeration value="OWNER"/>
          <enumeration value="DISPOSAL"/>
          <enumeration value="COOWNER"/>
          <enumeration value="CODEBTOR"/>
          <enumeration value="COLLATERAL"/>
          <enumeration value="GUARDIAN"/>
          <enumeration value="ACCESS"/>
          <enumeration value="ADDRESSEE"/>
          <enumeration value="GUARANTOR"/>
          <enumeration value="AMETA"/>
          <enumeration value="BENEFICIARY"/>
          <enumeration value="PAYER"/>
          <enumeration value="VOUCHER"/>
          <enumeration value="EMAIL"/>
          <enumeration value="FAMILY_SORTED_SHIPMENT"/>
          <enumeration value="INSURED"/>
          <enumeration value="POLICYHOLDER"/>
          <enumeration value="CONTACT"/>
          <enumeration value="CONVERTED_ROLE"/>
          <enumeration value="CREDITOR"/>
          <enumeration value="MEMBER"/>
          <enumeration value="SEE_SPECIFIC_NOTE"/>
          <enumeration value="MORTGAGEE"/>
          <enumeration value="ADDRESSEE_PULL_SINGLE"/>
          <enumeration value="ADDRESSEE_LOAN"/>
          <enumeration value="ADDRESSEE_CHILD_INSURANCE"/>
          <enumeration value="ADDRESSEE_FAX"/>
          <enumeration value="OPENER"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="accountAdvisorMainRole">
        <annotation>
          <documentation><![CDATA[Account main role type. <br />
				Valid values : <br />
				OWNER 		Owner <br />
				COOWNER 	Co-owner <br />
				CODEBTOR 	Co-debtor <br />
				GUARANTOR 	Guarantor <br />
				UNKNOWN 	Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="OWNER"/>
          <enumeration value="COOWNER"/>
          <enumeration value="CODEBTOR"/>
          <enumeration value="GUARANTOR"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="accountOwnerMainRole">
        <annotation>
          <documentation>Account main role type. &lt;br />
				Valid values : &lt;br />
				OWNER 		Owner &lt;br />
				COOWNER 	Co-owner &lt;br /></documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="OWNER"/>
          <enumeration value="COOWNER"/>
        </restriction>
      </simpleType>
      <simpleType name="accountRole">
        <annotation>
          <documentation><![CDATA[Account role type. <br />
				Valid values : <br />
				OWNER 		Owner <br />
				DISPOSAL 	Has disposal of <br />
				COOWNER 	Co-owner <br />
				CODEBTOR 	Co-debtor <br />
				COLLATERAL 	Collateral <br />
				GUARDIAN 	Guardian <br />
				ACCESS 		Access <br />
				ADDRESSEE 	Adressee <br />
				GUARANTOR 	Guarantor <br />
				CREDITOR 	Creditor <br />
				DEBITOR 	Debitor <br />
				INSURAR 	Insurar <br />
				UNKNOWN 	Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="OWNER"/>
          <enumeration value="DISPOSAL"/>
          <enumeration value="COOWNER"/>
          <enumeration value="CODEBTOR"/>
          <enumeration value="COLLATERAL"/>
          <enumeration value="GUARDIAN"/>
          <enumeration value="GUARANTOR"/>
          <enumeration value="ACCESS"/>
          <enumeration value="ADDRESSEE"/>
          <enumeration value="CREDITOR"/>
          <enumeration value="DEBITOR"/>
          <enumeration value="INSURAR"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="coreFilter">
        <annotation>
          <documentation>Account main role type. &lt;br />
				Valid values : &lt;br />
				OLDCORE  	Returns accounts existing in the old core system &lt;br />
				NEWCORE  	Returns accounts existing in the new core system &lt;br />
				BOTH    	Returns accounts existing both in the old and the new core system</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="OLDCORE"/>
          <enumeration value="NEWCORE"/>
          <enumeration value="BOTH"/>
        </restriction>
      </simpleType>
      <simpleType name="reContractType">
        <annotation>
          <documentation><![CDATA[The letter of credit contract type (remburs). <br />
				Valid values: <br />
				IMPORTREMB 	Import letter of credit (remburs) <br />
				EXPORTREMB 	Export letter of credit (remburs) <br />
				IMPORTGUAR 	Import guarantee <br />
				EXPORTGUAR 	Export guarantee <br />
				UNKNOWN 	Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="IMPORTREMB"/>
          <enumeration value="EXPORTREMB"/>
          <enumeration value="IMPORTGUAR"/>
          <enumeration value="EXPORTGUAR"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="fxInOutType">
        <annotation>
          <documentation><![CDATA[The currency Fx contract input/output type. <br />
				Valid values: <br />
				IN 		Incoming amounts <br />
				OUT 	Outgoing amounts <br />
				SELL 	Sell <br />
				BUY 	Buy <br />
				UNKNOWN Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="IN"/>
          <enumeration value="OUT"/>
          <enumeration value="SELL"/>
          <enumeration value="BUY"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="capitalizationFrequency">
        <annotation>
          <documentation><![CDATA[Capitalization frequency of interest and commission types. <br />
				Valid values: <br />
				NONE 			No capitalization <br />
				MONTHLY 		Every month <br />
				QUARTERLY 		Every third month <br />
				TERTIALY 		Every fourth month <br />
				BIANNUALY 		Every six month <br />
				ANNUALY 		Annually <br />
				INTANNCOMQUART 	Interest annually, commission quarterly <br />
				CRANNDBQUART 	Credit interest annually, debit interest and commission quarterly <br />
				DATE 			Product related fixed date <br />
				UNKNOWN 		Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="NONE"/>
          <enumeration value="MONTHLY"/>
          <enumeration value="QUARTERLY"/>
          <enumeration value="TERTIALY"/>
          <enumeration value="BIANNUALY"/>
          <enumeration value="ANNUALY"/>
          <enumeration value="INTANNCOMQUART"/>
          <enumeration value="CRANNDBQUART"/>
          <enumeration value="DATE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="guaranteeCapitalizationFrequency">
        <annotation>
          <documentation><![CDATA[Capitalization frequency of guarantee interest and commission types. <br />
				Valid values: <br />
				MONTHLY 	Every month <br />
				QUARTERLY 	Every third month <br />
				BIANNUALY 	Every six month <br />
				ANNUALY 	Annually <br />
				ONCE 		One time <br />
				UNKNOWN 	Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="MONTHLY"/>
          <enumeration value="QUARTERLY"/>
          <enumeration value="BIANNUALY"/>
          <enumeration value="ANNUALY"/>
          <enumeration value="ONCE"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="cashpoolSystem">
        <annotation>
          <documentation>The account cashpool system. &lt;br />
				Valid values: &lt;br />
				KKS 		Old cashPool system &lt;br />
				CPL 		New cashPool system &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="KKS"/>
          <enumeration value="CPL"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="cashpoolType">
        <annotation>
          <documentation>The account cashpool type. &lt;br />
				Valid values: &lt;br />
				LEDGER 		Ledger reporting &lt;br />
				CAPTXFER 	Capital transfer &lt;br />
				UNITEDINT 	United interest calculation &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="LEDGER"/>
          <enumeration value="CAPTXFER"/>
          <enumeration value="UNITEDINT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="cashpoolRole">
        <annotation>
          <documentation><![CDATA[The account cashpool role. <br />
				Valid values: <br />
				MAIN 		Main cashpool account <br />
				SUM 		Sum level account <br />
				INTCOM 		Interest and commission posting <br />
				REG 		Registering <br />
				MULTICURR 	Multi currency <br />
				UNKNOWN 	Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="MAIN"/>
          <enumeration value="SUM"/>
          <enumeration value="INTCOM"/>
          <enumeration value="REG"/>
          <enumeration value="MULTICURR"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="depositAccountType">
        <annotation>
          <documentation>Account type. &lt;br />
				Valid values : &lt;br />
				CURRENT 	Deposit user account &lt;br />
				SAVINGS 	Deposit saving account &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax25Type">
          <enumeration value="CURRENT"/>
          <enumeration value="SAVINGS"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="loanType">
        <annotation>
          <documentation><![CDATA[Loan type. <br />
			        Valid values: <br />
					ANNUITY_MAN			Annuity management loan  <br />				
					SERIAL_MAN      	Serial management loan <br />  				
					ANNUITY      		Annuity loan <br />          					
					SERIAL      		Serial loan <br />      						
					FIXED_ANNUITY      	Fixed interest annuity loan <br />   			
					FIXED_SERIAL      	Fixed interest serial loan <br />				
					LONG_TERM      		Long term monitoring <br /> 					
					FIXED_ANNUITY_MAN	Fixed interest annuity management loan <br />	
					FIXED_SERIAL_MAN    Fixed interest serial management loan <br />	
					ADV_SERIAL      	Advanced fee serial loan <br /> 				
					INT_SUPPORT      	Interest support <br /> 						
					UNKNOWN				Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax20Type">
          <enumeration value="ANNUITY_MAN"/>
          <enumeration value="SERIAL_MAN"/>
          <enumeration value="ANNUITY"/>
          <enumeration value="SERIAL"/>
          <enumeration value="FIXED_ANNUITY"/>
          <enumeration value="FIXED_SERIAL"/>
          <enumeration value="LONG_TERM"/>
          <enumeration value="FIXED_ANNUITY_MAN"/>
          <enumeration value="FIXED_SERIAL_MAN"/>
          <enumeration value="ADV_SERIAL"/>
          <enumeration value="INT_SUPPORT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="loanCategory">
        <annotation>
          <documentation>The loan category. &lt;br />
				Valid values: &lt;br />
				ANNUITY 	Annuity loan types &lt;br />
				SERIAL 		Serial loan types &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="ANNUITY"/>
          <enumeration value="SERIAL"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="guarantorPart">
        <annotation>
          <documentation>The guarantor part of credit line. &lt;br />
				Valid values: &lt;br />
				ALL 		All credit line guaranteed &lt;br />
				FIRST 		First part guaranteed &lt;br />
				LAST 		Last part guaranteed &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="ALL"/>
          <enumeration value="FIRST"/>
          <enumeration value="LAST"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="creditLineType">
        <annotation>
          <documentation>Account credit line type. &lt;br />
                        Valid values : &lt;br />
                        ORDINARY    Ordinary credit line only exists &lt;br />
                        ADDITIONAL	Additional credit line also exists &lt;br />
                        UNKNOWN     Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="ORDINARY"/>
          <enumeration value="ADDITIONAL"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="mortgageCompanyType">
        <annotation>
          <documentation>Mortgage company relation, telling if there is a mortgage company relation of the account/product and where. &lt;br /> 
                        Valid values : &lt;br />
                        BANK     	No mortgage company, account/product belongs to bank &lt;br />
                        SPB1  		Sparebank 1 mortgage company &lt;br />
                        OTHER     	Other mortgage companies &lt;br />
                        UNKNOWN    	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="BANK"/>
          <enumeration value="SPB1"/>
          <enumeration value="OTHER"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="month">
        <annotation>
          <documentation>Month of year</documentation>
        </annotation>
        <restriction base="common:intMax2Type">
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="termLengthCode">
        <annotation>
          <documentation><![CDATA[Term length codes <br />
				Valid values: <br />
				MONTHLY 		Every month <br />
				SECONDMONTHLY 	Every second month <br />
				QUARTERLY 		Every third month <br />
				TERTIALY 		Every forth month <br />
				BIANNUALLY 		Every six months <br />
				ANNUALLY 		Once a year <br />
				UNKNOWN 		Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax20Type">
          <enumeration value="MONTHLY"/>
          <enumeration value="SECONDMONTHLY"/>
          <enumeration value="QUARTERLY"/>
          <enumeration value="TERTIALY"/>
          <enumeration value="BIANNUALLY"/>
          <enumeration value="ANNUALLY"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="errorOrigin">
        <annotation>
          <documentation>Error origin regarding collection of account data &lt;br />
				Valid values: &lt;br />
				CORE 				Error message returned from core &lt;br />
				FUND_CHECK 			Error message returned from fund check &lt;br />
				UNKNOWN 			Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax20Type">
          <enumeration value="CORE"/>
          <enumeration value="FUND_CHECK"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="errorOriginProductMultiRead">
        <annotation>
          <documentation>Error origin regarding collection of account data &lt;br />
				Valid values: &lt;br />
				CORE 				Error message returned from core &lt;br />
				NOT_FOUND 			Account not found in database, not returning any data &lt;br />
				UNKNOWN 			Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax20Type">
          <enumeration value="CORE"/>
          <enumeration value="NOT_FOUND"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="statementFrequency">
        <annotation>
          <documentation><![CDATA[Statement frequency <br />
				Valid values: <br />
				DAILY 			Every day <br />
				WEEKLY 			Every week <br />
				SECONDWEEK 		Every second week <br />
				MONTHLY 		Every month <br />
				QUARTERLY 		Every third month <br />
				BIANNUALY 		Every six month <br />
				ANNUALY 		Annually <br />
				12THOFMONTH 	12th of each month <br />
				24THOFMONTH 	24th of each month <br />
				REQUEST 		On request <br />
				FULLPAGE 		Full page <br />
				NOSTATEMENT 	No statement <br />
				UNKNOWN 		Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="DAILY"/>
          <enumeration value="WEEKLY"/>
          <enumeration value="SECONDWEEK"/>
          <enumeration value="MONTHLY"/>
          <enumeration value="QUARTERLY"/>
          <enumeration value="BIANNUALY"/>
          <enumeration value="ANNUALY"/>
          <enumeration value="MONTHLYON12TH"/>
          <enumeration value="MONTHLYON24TH"/>
          <enumeration value="REQUEST"/>
          <enumeration value="FULLPAGE"/>
          <enumeration value="NOSTATEMENT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="reopenOptions">
        <annotation>
          <documentation>The account reopen options. &lt;br />
				Valid values: &lt;br />
				REOPEN_YES 	Account exist and reopen is possible &lt;br />
				REOPEN_NO 	Account exist and reopen is not possible &lt;br />
				EXIST_NO 	Account does not exist &lt;br />
				UNKNOWN 	Unknown host value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="REOPEN_YES"/>
          <enumeration value="REOPEN_NO"/>
          <enumeration value="EXIST_NO"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="insuranceCode">
        <annotation>
          <documentation><![CDATA[The insurance code. <br />
				Valid values: <br />
				NONE No insurance <br />
				OWNER Owner insured <br />
				COINSURED Coinsured <br />
				BOTH Both owner and co-insured <br />
				UNKNOWN Unknown host value]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax10Type">
          <enumeration value="NONE"/>
          <enumeration value="OWNER"/>
          <enumeration value="COINSURED"/>
          <enumeration value="BOTH"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="accountProduct">
        <annotation>
          <documentation>Account product type.
				Valid values :
				LOCDEPOSIT 	Local currency deposit.
				CURDEPOSIT 	Currency deposit.
				UNKNOWN 	Unknown host value.</documentation>
        </annotation>
        <restriction base="common:alphaNumMax15Type">
          <enumeration value="LOCDEPOSIT"/>
          <enumeration value="CURDEPOSIT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v4" xmlns:tns="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v4" xmlns:common="urn:corews.enterprise.fs.evry.com:domain:common:v10" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Entities in the deposit account interest domain.</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v10"/>
      <simpleType name="accountListCriteriaType">
        <annotation>
          <documentation><![CDATA[The responsible type of the action type. <br/>
                Valid values: <br/>
                    OWNER                If selected then result will contain accounts the customer has responsible roles for <br>
                                         meaning accountMainRole OWNER, COOWNER, CODEBTOR, GUARANTOR and COLLATERAL  <br/>
                    OWNERORDISPOSAL      If selected then result will contain accounts the customer has responsible roles for including disposal of <br>
                                         meaning accountMainRole DISPOSAL, OWNER, COOWNER, CODEBTOR, GUARANTOR and COLLATERAL <br/>
                    DISPOSAL             If selected then result will contain accounts the customer has responsible roles for <br>
                                         meaning accountMainRole DISPOSAL <br/>
                    DEBITING             If selected then result will contain accounts the customer has responsible roles for <br>
                                         meaning accountMainRole OWNER, COOWNER and DISPOSAL <br/>]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="common:alphaNumMax19Type">
          <enumeration value="OWNER"/>
          <enumeration value="OWNERORDISPOSAL"/>
          <enumeration value="DISPOSAL"/>
          <enumeration value="DEBITING"/>
        </restriction>
      </simpleType>
      <simpleType name="flagType">
        <annotation>
          <documentation>Flag values &lt;br/>
                Valid values: &lt;br/>
                    ALLOWED				This flag is allowed &lt;br>
                    NOT_ALLOWED      	This flag is not allowed &lt;br>
                    SPECIAL_CONDITIONS  This flag is allowed, but certain conditions may apply</documentation>
        </annotation>
        <restriction base="common:alphaNumMax19Type">
          <enumeration value="ALLOWED"/>
          <enumeration value="NOT_ALLOWED"/>
          <enumeration value="SPECIAL_CONDITIONS"/>
        </restriction>
      </simpleType>
      <simpleType name="disposalTypeOutput">
        <annotation>
          <documentation>Disposal rights for the customer &lt;br/>
                Valid values: &lt;br/>
                ALONE       The customer has disposal right alone &lt;br>
                GROUP       The customer has disposal right in a group&lt;br>
                UNKNOWN     Unknown value</documentation>
        </annotation>
        <restriction base="common:alphaNumMax19Type">
          <enumeration value="ALONE"/>
          <enumeration value="GROUP"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v20_2" xmlns:tns="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v20_2" xmlns:permission="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v4" xmlns:customer="urn:srv.cco.enterprise.fs.evry.com:domain:customer:v2" xmlns:common="urn:corews.enterprise.fs.evry.com:domain:common:v10" xmlns:account="urn:srv.cco.enterprise.fs.evry.com:domain:account:v3" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Types for the CCOSPermissionService.</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v10"/>
      <import namespace="urn:srv.cco.enterprise.fs.evry.com:domain:account:v3"/>
      <import namespace="urn:srv.cco.enterprise.fs.evry.com:domain:customer:v2"/>
      <import namespace="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v4"/>
      <complexType name="permissionAccountProductMultiReadQualificationType">
        <annotation>
          <documentation>Qualification type for listing of account permissions.</documentation>
        </annotation>
        <sequence>
          <element maxOccurs="500" name="accountNumber" type="common:accountNumberInputType">
            <annotation>
              <documentation>Sets the account number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="permissionAccountProductMultiReadResultType">
        <annotation>
          <documentation>This operation returns account permissions for provided accounts.</documentation>
        </annotation>
        <sequence>
          <element maxOccurs="500" minOccurs="0" name="accountGroup" type="tns:accountMultiReadGroupResultType"/>
        </sequence>
      </complexType>
      <complexType name="accountMultiReadGroupResultType">
        <annotation>
          <documentation>Group containing account information.</documentation>
        </annotation>
        <sequence>
          <element name="accountNumber" type="common:accountNumberOutputType">
            <annotation>
              <documentation>Returns the account number (BBAN/IBAN).</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="currencyCode" type="common:currencyCode">
            <annotation>
              <documentation>Returns the account ISO4217 currency code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="accountClosed" type="boolean">
            <annotation>
              <documentation>Returns the account close status. &lt;br>
                        True if account is closed, false if not. This value is retrieved from agreement.&lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productGroup" type="tns:productMultiReadGroupType"/>
          <element minOccurs="0" name="permissionGroup" type="tns:permissionMultiReadGroupType"/>
          <element minOccurs="0" name="extraInfoCoreClassic" type="tns:extraInfoCoreClassicType"/>
          <element minOccurs="0" name="errorOrigin" type="account:errorOriginProductMultiRead">
            <annotation>
              <documentation>Error origin regarding collection of account data &lt;br>
                        Valid values: &lt;br>
                        NOT_FOUND           Account not found in database, so no data returned &lt;br>
                        CORE                Error message returned from core &lt;br>
                        UNKNOWN             Unknown host value &lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="errorCode" type="common:intMax4Type">
            <annotation>
              <documentation>Error code if there is something wrong with the specific account&lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="errorMessage" type="common:alphaNumMax50Type">
            <annotation>
              <documentation>Error message if there is something wrong with the specific account&lt;br></documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productMultiReadGroupType">
        <annotation>
          <documentation>Group containing product information for an account.</documentation>
        </annotation>
        <sequence>
          <element name="productSystem" type="common:alphaNumMax15Type">
            <annotation>
              <documentation><![CDATA[Returns the account's product system. <br>
                        Typical values: <br>
                        RK-KONTO     Local currency deposit accounts <br>
                        VR-KONTO     Currency deposit accounts <br>
                        UL-KONTO     Local currency loan accounts <br>
                        GA-KONTO     Guarantee accounts <br>
                        CASA         Core renewal deposit accounts <br>
                        LOAN         Core renewal loan accounts <br>
                        INTERNAL     Core renewal bank internal accounts]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productDescriptionCode" type="common:alphaNumMax2Type">
            <annotation>
              <documentation>Returns the account's product description code. &lt;br>
                        See handbook for list of reserved codes.  &lt;br>
                        Only applicable for accounts in the old core system.</documentation>
            </annotation>
          </element>
          <element name="productSubTypeX" type="common:alphaNumMax18Type">
            <annotation>
              <documentation><![CDATA[Returns the account's sub category type of the product. <br>
                        All future product sub types are not yet defined. <br> 
                        The X in the item name is there to mark that the values are potential valid values. <br> 
                        Typical values : <br> 
                        RK-KONTO <br>
                            CURRENT         Deposit user account. <br> 
                            SAVINGS         Deposit savings account. <br> 
                            BSU             Local currency deposit BSU account. <br> 
                            TAXWITHDRAW     Local currency deposit tax withdrawal account. <br> 
                            YEARINTBONUS    Local currency deposit yearly interest bonus account. <br> 
                            IFRS            Local currency deposit IFRS account. <br> 
                            SAVEAGREE       Local currency savings agreement account. <br> 
                        VR-KONTO <br>
                            CURRENT         Currency deposit user account. <br> 
                            SLS             Specialized Lending System shadow account. <br> 
                        UL-KONTO <br>
                            ANNLOAN         Annuity loan. <br>
                            FIANNLOAN       Fixed interest annuity loan. <br>
                            SERLOAN         Serial loan. <br>
                            FISERLOAN       Fixed interest serial loan. <br>
                            LTO             Loan under long term surveillance. <br>
                        GA-KONTO <br>
                            PAYGUAR         Payment guarantee. <br>
                            CONTRACTGUAR    Contract guarantee. <br>
                            LOANGUAR        Loan guarantee. <br>
                            TAXGUAR         Tax guarantee. <br>
                            OTHERGUAR       Other guarantee. <br>
                            SECGUAR         Security guarantee. <br>
                            feilkonto        <br>
                        CASA <br>
                            CURRENT         Deposit user account. <br> 
                            SAVINGS         Deposit savings account. <br>]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productId" type="tns:productIdGroupType"/>
        </sequence>
      </complexType>
      <complexType name="productIdGroupType">
        <annotation>
          <documentation>Group containing productId information for an account.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="common:productId">
            <annotation>
              <documentation>Returns the product's internal id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productKey" type="common:alphaNumMax10Type">
            <annotation>
              <documentation>Returns the product's key. &lt;br>
                        For accounts in the old core system this will be the KO key. &lt;br>
                        For accounts in the new core system this will be the 5 characters alphanumeric key.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productIdX" type="common:productId">
            <annotation>
              <documentation>The product identification of the account product, being either the internal productId used by core renewal or the KO key used by old core.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productNumber" type="common:sequenceNumber">
            <annotation>
              <documentation>Returns the account's product number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productSequenceNumber" type="common:sequenceNumber">
            <annotation>
              <documentation>Returns the account's product sequence number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="permissionMultiReadGroupType">
        <annotation>
          <documentation>Group containing information about permissions and restrictions regarding the access to and use of an account.</documentation>
        </annotation>
        <sequence>
          <element name="automaticDebiting" type="boolean">
            <annotation>
              <documentation>Returns true if it is possible to use the account for automatic debiting, i.e. if the account can be used as invoice account or contract giro payments. False if not.</documentation>
            </annotation>
          </element>
          <element name="conditionWithdrawalCharges" type="boolean">
            <annotation>
              <documentation>Returns true if there are conditions for withdrawal charges associated with the account product, false if not. &lt;br>
                        Extraordinary charges can be free withdrawal limit.</documentation>
            </annotation>
          </element>
          <element name="specialConditionWithdrawal" type="boolean">
            <annotation>
              <documentation>Returns true if there are special conditions for withdrawal associated with the account, false if not. &lt;br>
                        Special conditions for withdrawal will usually exist for BSU, Skattetrekk, Fastrente etc.</documentation>
            </annotation>
          </element>
          <element name="specialConditionDeposit" type="boolean">
            <annotation>
              <documentation>Returns true if there are special conditions for deposit associated with the account, false if not. &lt;br>
                        Special conditions for deposit will usually exist for BSU, Skattetrekk, Fastrente etc.</documentation>
            </annotation>
          </element>
          <element name="paymentAllowed" type="boolean">
            <annotation>
              <documentation>Returns true if the product allows payments to be executed from the account, false if not.</documentation>
            </annotation>
          </element>
          <element name="transferAllowed" type="boolean">
            <annotation>
              <documentation>Returns true if the product allows transfers to be executed from the account, false if not.</documentation>
            </annotation>
          </element>
          <element name="billingCharges" type="boolean">
            <annotation>
              <documentation>Returns true if the account can be used as a billing account for charges, false if not &lt;br></documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="extraInfoCoreClassicType">
        <annotation>
          <documentation>Group containing some extra info for Core Classic accounts.&lt;br>
                Some balance and permission information, only available for Core Classic accounts.&lt;br></documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="cashPool" type="boolean"/>
          <element minOccurs="0" name="bookedBalance" type="common:amount">
            <annotation>
              <documentation>Returns the account's currency booked balance.&lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="localCurrencyBookedBalance" type="common:amount">
            <annotation>
              <documentation>Returns the account's currency booked balance in NOK.&lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="availableBalance" type="common:amount">
            <annotation>
              <documentation>Returns the account's currency available balance.&lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="localCurrencyAvailableBalance" type="common:amount">
            <annotation>
              <documentation>Returns the account's currency available balance in NOK.&lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="blockedAmount" type="common:amount">
            <annotation>
              <documentation>Returns the account's blocked amount.&lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="localCurrencyBlockedAmount" type="common:amount">
            <annotation>
              <documentation>Returns the account's blocked amount in NOK.&lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="confirmedAmount" type="common:amount">
            <annotation>
              <documentation>Returns the account's confirmed amount.&lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="localCurrencyConfirmedAmount" type="common:amount">
            <annotation>
              <documentation>Returns the account's confirmed amount in NOK.&lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="blockedWithdrawal" type="boolean">
            <annotation>
              <documentation>Returns true if the account is blocked for withdrawals, false if not. &lt;br></documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="blockedDeposit" type="boolean">
            <annotation>
              <documentation>Returns true if the account is blocked for deposit, false if not. &lt;br></documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="permissionAccountHistoryListQualificationType">
        <annotation>
          <documentation>Qualification type for listing of a given customer account permissions.</documentation>
        </annotation>
        <sequence>
          <element name="customerKey" type="common:internationalCustomerKeyType">
            <annotation>
              <documentation>Sets the customer number. &lt;br>
                        CustomerKey can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
          <element name="accountFilter" type="tns:accountFilterGroupType"/>
        </sequence>
      </complexType>
      <complexType name="accountFilterGroupType">
        <annotation>
          <documentation>Group containing account filtering information.</documentation>
        </annotation>
        <sequence>
          <element name="searchFromDate" type="date">
            <annotation>
              <documentation>Lower limit for the input customers DISP roles validToDate</documentation>
            </annotation>
          </element>
          <element name="searchToDate" type="date">
            <annotation>
              <documentation>Upper limit for the input customers DISP roles  validFromDate</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="permissionAccountHistoryListResultType">
        <annotation>
          <documentation>This operation returns customer permissions to an account list.</documentation>
        </annotation>
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="accountGroup" type="tns:accountGroupHistoryListResultType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="accountDisposalGroup" type="tns:accountDisposalGroupResultType"/>
          <element maxOccurs="unbounded" minOccurs="0" name="accountOwnerGroup" type="tns:accountOwnerGroupResultType"/>
        </sequence>
      </complexType>
      <complexType name="accountGroupHistoryListResultType">
        <annotation>
          <documentation>Group containing account information.</documentation>
        </annotation>
        <sequence>
          <element name="accountNumber" type="common:accountNumberOutputType">
            <annotation>
              <documentation>Returns the account number (BBAN/IBAN).</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="currencyCode" type="common:currencyCode">
            <annotation>
              <documentation>Returns the account ISO4217 currency code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="accountClosed" type="boolean">
            <annotation>
              <documentation>Returns the account close status. &lt;br>
                        True if account is closed, false if not. &lt;br>
                        AccountTerminated is fetched from the FundCheck system and will not be returned if the FundCheck service returns an error. &lt;br>
                        In these cases errorOrigin will return FUND_CHECK.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="blockedWithdrawal" type="boolean">
            <annotation>
              <documentation>Returns true if the account is blocked for withdrawals, false if not. &lt;br>
                        BlockedWithdrawal is fetched from the FundCheck system and will not be returned if the FundCheck service returns an error. &lt;br>
                        In these cases errorOrigin will return FUND_CHECK.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="blockedDeposit" type="boolean">
            <annotation>
              <documentation>Returns true if the account is blocked for deposit, false if not. &lt;br>
                        BlockedDeposit is fetched from the FundCheck system and will not be returned if the FundCheck service returns an error. &lt;br>
                        In these cases errorOrigin will return FUND_CHECK.</documentation>
            </annotation>
          </element>
          <element name="productSystem" type="common:alphaNumMax15Type">
            <annotation>
              <documentation><![CDATA[Returns the account's product system. <br>
                        Typical values: <br>
                        RK-KONTO     Local currency deposit accounts <br>
                        VR-KONTO     Currency deposit accounts <br>
                        UL-KONTO     Local currency loan accounts <br>
                        CASA         Core renewal deposit accounts <br>
                        CLA-LOAN     Core renewal loan accounts <br>]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productSubTypeX" type="common:alphaNumMax18Type">
            <annotation>
              <documentation><![CDATA[Returns the account's sub category type of the product. <br>
                        All future product sub types are not yet defined. <br>
                        The X in the item name is there to mark that the values are potential valid values. <br>
                        Typical values : <br>
                        RK-KONTO <br>
                        CURRENT         Deposit user account. <br>
                        SAVINGS         Deposit savings account. <br>
                        BSU             Local currency deposit BSU account. <br>
                        TAXWITHDRAW     Local currency deposit tax withdrawal account. <br>
                        YEARINTBONUS    Local currency deposit yearly interest bonus account. <br>
                        IFRS            Local currency deposit IFRS account. <br>
                        SAVEAGREE       Local currency savings agreement account. <br>
                        VR-KONTO <br>
                        CURRENT         Currency deposit user account. <br>
                        SLS             Specialized Lending System shadow account. <br>
                        UL-KONTO <br>
                        ANNLOAN         Annuity loan. <br>
                        FIANNLOAN       Fixed interest annuity loan. <br>
                        SERLOAN         Serial loan. <br>
                        FISERLOAN       Fixed interest serial loan. <br>
                        LTO             Loan under long term surveillance. <br>
                        CASA <br>
                        CURRENT         Deposit user account. <br>
                        SAVINGS         Deposit savings account. <br>]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="error" type="tns:errorGroupType"/>
        </sequence>
      </complexType>
      <complexType name="accountDisposalGroupResultType">
        <annotation>
          <documentation>Group containing information about the input customers disposal roles</documentation>
        </annotation>
        <sequence>
          <element name="accountNumber" type="common:accountNumberOutputType">
            <annotation>
              <documentation>Returns the account number (BBAN/IBAN).</documentation>
            </annotation>
          </element>
          <element name="disposalRight" type="permission:disposalTypeOutput">
            <annotation>
              <documentation>Disposal rights for the customer &lt;br/>
                        This only verifies that the customer has disposal rights to the account, the product might have restrictions that prevent payment/transfer from the account.
                        Valid values: &lt;br/>
                        ALONE       The customer has disposal right alone &lt;br>
                        GROUP       The customer has disposal right in a group &lt;br>
                        UNKNOWN     Unknown value</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="validFromDate" type="date">
            <annotation>
              <documentation>Valid from date for the disposal right</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="validToDate" type="date">
            <annotation>
              <documentation>Valid to date for the disposal right</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="accountOwnerGroupResultType">
        <annotation>
          <documentation>Group containing account owner information.</documentation>
        </annotation>
        <sequence>
          <element name="accountNumber" type="common:accountNumberOutputType">
            <annotation>
              <documentation>Returns the account number (BBAN/IBAN).</documentation>
            </annotation>
          </element>
          <element name="accountOwnerCustomerIntId" type="common:alphaNumMax35Type">
            <annotation>
              <documentation>Returns the account owner's internal customer id.</documentation>
            </annotation>
          </element>
          <element name="accountOwnerCustomerNumber" type="common:alphaNumMax35Type">
            <annotation>
              <documentation>Returns the account owner's customer number.</documentation>
            </annotation>
          </element>
          <element name="accountOwnerCustomerType" type="customer:customerType">
            <annotation>
              <documentation>CustomerType. &lt;br/>
                        Valid values: &lt;br/>
                        RETAIL          Retail customer &lt;br/>
                        CORPORATE       Corporate customer &lt;br/>
                        SELF_EMPLOYED   Both/self employed person &lt;br/>
                        UNKNOWN         Unknown host value</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="accountOwnerLastName" type="common:alphaNumMax80Type">
            <annotation>
              <documentation>Returns the account owner last name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="accountOwnerFirstName" type="common:alphaNumMax80Type">
            <annotation>
              <documentation>Returns the account owner first name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="accountOwnerCorporateName" type="common:alphaNumMax80Type">
            <annotation>
              <documentation>Returns the account owner corporate name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="validFromDate" type="date">
            <annotation>
              <documentation>Valid from date for the owner role</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="validToDate" type="date">
            <annotation>
              <documentation>Valid to date for the owner role</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="errorGroupType">
        <annotation>
          <documentation>Group containing error information regarding collection of account data.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="errorOrigin" type="account:errorOrigin">
            <annotation>
              <documentation>Returns the error origin . &lt;br/>
                        Valid values: &lt;br/>
                        CORE            Error message returned from core &lt;br />
                        FUND_CHECK      Error message returned from fund check &lt;br />
                        UNKNOWN         Unknown host value</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cco.enterprise.fs.evry.com:ws:permission:v20_1" xmlns:tns="urn:srv.cco.enterprise.fs.evry.com:ws:permission:v20_1" xmlns:permission201="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v20_1" xmlns:enterprisecommon="urn:enterprise.fs.evry.com:domain:common:v3" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>The service handles information for a given customer account permissions. &lt;br>
            Available operations: &lt;br>
            permissionAccountList   V20_1 &lt;br>
            permissionAccountRead   V20_1 &lt;br></documentation>
      </annotation>
      <import namespace="urn:enterprise.fs.evry.com:domain:common:v3"/>
      <import namespace="urn:srv.cco.enterprise.fs.evry.com:domain:permission:v20_1"/>
      <element name="permissionAccountListRequest" type="tns:permissionAccountListRequestType"/>
      <element name="permissionAccountListResponse" type="tns:permissionAccountListResponseType"/>
      <element name="permissionAccountListFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="permissionAccountReadRequest" type="tns:permissionAccountReadRequestType"/>
      <element name="permissionAccountReadResponse" type="tns:permissionAccountReadResponseType"/>
      <element name="permissionAccountReadFault" type="enterprisecommon:responseStateCodedFault"/>
      <complexType name="permissionAccountListRequestType">
        <annotation>
          <documentation><![CDATA[This operation returns a given customer account permission list. <br>
                The account list contains primarily account status and customer account permissions. <br>
                Several services are executed to fetch information from: <br>
                   - iHub Agreement <br>
                   - iHub Customer <br>
                   - iHub Product <br>
                   - Account specific account status <br>]]]]>><![CDATA[</documentation>
        </annotation>
        <sequence>
          <element name="qualification" type="permission201:permissionAccountListQualificationType"/>
          <element name="pagingElement" type="enterprisecommon:pagingInputElementType"/>
        </sequence>
      </complexType>
      <complexType name="permissionAccountListResponseType">
        <annotation>
          <documentation>Contains the response for the operation permissionAccountList. &lt;br>
                
                CCO permission error codes: &lt;br></documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element name="result" type="permission201:permissionAccountListResultType"/>
              <element name="pagingElement" type="enterprisecommon:pagingOutputElementType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="permissionAccountReadRequestType">
        <annotation>
          <documentation><![CDATA[This operation returns a given customer account permissions. <br>
                The account data contains primarily account status and customer account permissions. <br>
                Several services are executed to fetch information from: <br>
                   - iHub Agreement <br>
                   - iHub Customer <br>
                   - iHub Product <br>
                   - Account specific account status <br>]]]]>><![CDATA[</documentation>
        </annotation>
        <sequence>
          <element name="qualification" type="permission201:permissionAccountReadQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="permissionAccountReadResponseType">
        <annotation>
          <documentation>Contains the response for the operation permissionAccountRead. &lt;br>
                CCO permission error codes: &lt;br>
                2006 - Account permission not found. &lt;br></documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element name="result" type="permission201:permissionAccountReadResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
  </wsdl:types>
  <wsdl:message name="permissionAccountListResponse">
    <wsdl:part element="sch14:permissionAccountListResponse" name="permissionAccountListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="permissionAccountListRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch14:permissionAccountListRequest" name="permissionAccountListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="permissionAccountHistoryListRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:permissionAccountHistoryListRequest" name="permissionAccountHistoryListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="permissionAccountHistoryListResponse">
    <wsdl:part element="sch0:permissionAccountHistoryListResponse" name="permissionAccountHistoryListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="permissionAccountReadResponse">
    <wsdl:part element="sch14:permissionAccountReadResponse" name="permissionAccountReadResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="permissionAccountReadRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch14:permissionAccountReadRequest" name="permissionAccountReadRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="permissionAccountProductMultiReadFault">
    <wsdl:part element="sch0:permissionAccountProductMultiReadFault" name="permissionAccountProductMultiReadFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="permissionAccountProductMultiReadRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:permissionAccountProductMultiReadRequest" name="permissionAccountProductMultiReadRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="permissionAccountHistoryListFault">
    <wsdl:part element="sch0:permissionAccountHistoryListFault" name="permissionAccountHistoryListFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="permissionAccountProductMultiReadResponse">
    <wsdl:part element="sch0:permissionAccountProductMultiReadResponse" name="permissionAccountProductMultiReadResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="permissionAccountListFault">
    <wsdl:part element="sch14:permissionAccountListFault" name="permissionAccountListFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="permissionAccountReadFault">
    <wsdl:part element="sch14:permissionAccountReadFault" name="permissionAccountReadFault"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CCOSCCPermissionService_V20_2PortType">
    <wsdl:operation name="permissionAccountList">
      <wsdl:input message="sch0:permissionAccountListRequest" name="permissionAccountListRequest"></wsdl:input>
      <wsdl:output message="sch0:permissionAccountListResponse" name="permissionAccountListResponse"></wsdl:output>
      <wsdl:fault message="sch0:permissionAccountListFault" name="permissionAccountListFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="permissionAccountHistoryList">
      <wsdl:input message="sch0:permissionAccountHistoryListRequest" name="permissionAccountHistoryListRequest"></wsdl:input>
      <wsdl:output message="sch0:permissionAccountHistoryListResponse" name="permissionAccountHistoryListResponse"></wsdl:output>
      <wsdl:fault message="sch0:permissionAccountHistoryListFault" name="permissionAccountHistoryListFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="permissionAccountRead">
      <wsdl:input message="sch0:permissionAccountReadRequest" name="permissionAccountReadRequest"></wsdl:input>
      <wsdl:output message="sch0:permissionAccountReadResponse" name="permissionAccountReadResponse"></wsdl:output>
      <wsdl:fault message="sch0:permissionAccountReadFault" name="permissionAccountReadFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="permissionAccountProductMultiRead">
      <wsdl:input message="sch0:permissionAccountProductMultiReadRequest" name="permissionAccountProductMultiReadRequest"></wsdl:input>
      <wsdl:output message="sch0:permissionAccountProductMultiReadResponse" name="permissionAccountProductMultiReadResponse"></wsdl:output>
      <wsdl:fault message="sch0:permissionAccountProductMultiReadFault" name="permissionAccountProductMultiReadFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CCOSCCPermissionService_V20_2PortTypeSoap11" type="sch0:CCOSCCPermissionService_V20_2PortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="permissionAccountList">
      <soap:operation soapAction=""/>
      <wsdl:input name="permissionAccountListRequest">
        <soap:header message="sch0:permissionAccountListRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="permissionAccountListRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="permissionAccountListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="permissionAccountListFault">
        <soap:fault name="permissionAccountListFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="permissionAccountHistoryList">
      <soap:operation soapAction=""/>
      <wsdl:input name="permissionAccountHistoryListRequest">
        <soap:header message="sch0:permissionAccountHistoryListRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="permissionAccountHistoryListRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="permissionAccountHistoryListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="permissionAccountHistoryListFault">
        <soap:fault name="permissionAccountHistoryListFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="permissionAccountRead">
      <soap:operation soapAction=""/>
      <wsdl:input name="permissionAccountReadRequest">
        <soap:header message="sch0:permissionAccountReadRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="permissionAccountReadRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="permissionAccountReadResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="permissionAccountReadFault">
        <soap:fault name="permissionAccountReadFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="permissionAccountProductMultiRead">
      <soap:operation soapAction=""/>
      <wsdl:input name="permissionAccountProductMultiReadRequest">
        <soap:header message="sch0:permissionAccountProductMultiReadRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="permissionAccountProductMultiReadRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="permissionAccountProductMultiReadResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="permissionAccountProductMultiReadFault">
        <soap:fault name="permissionAccountProductMultiReadFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CCOSCCPermissionService_V20_2">
    <wsdl:port binding="sch0:CCOSCCPermissionService_V20_2PortTypeSoap11" name="CCOSCCPermissionService_V20_2PortTypeSoap11">
      <soap:address location="http://10.246.89.245:10710/corewsdpgensrv/services/CCOSCCPermissionService_V20_2"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
      <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
    </con:part>
  </con:definitionCache>
  <con:endpoints>
    <con:endpoint>http://10.246.89.245:10710/corewsdpgensrv/services/CCOSCCPermissionService_V20_2</con:endpoint>
  </con:endpoints>
</con:interface>
