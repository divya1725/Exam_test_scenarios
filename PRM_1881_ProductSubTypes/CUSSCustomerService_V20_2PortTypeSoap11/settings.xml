<?xml version="1.0" encoding="UTF-8"?>
<con:interface xsi:type="con:WsdlInterface" id="6ea660e8-892a-40f5-874c-567e10abe3ee" wsaVersion="NONE" name="CUSSCustomerService_V20_2PortTypeSoap11" type="wsdl" bindingName="{urn:srv.cus.corews.enterprise.fs.evry.com:ws:customer:v20_2}CUSSCustomerService_V20_2PortTypeSoap11" soapVersion="1_1" anonymous="optional" definition="http://10.246.89.245:10710/corewsdpgensrv/services/CUSSCustomerService_V20_2?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="6ea660e8-892a-40f5-874c-567e10abe3eefileName">CUSSCustomerService_V20_2PortTypeSoap11</con:setting>
  </con:settings>
  <con:definitionCache type="TEXT" rootPart="http://10.246.89.245:10710/corewsdpgensrv/services/CUSSCustomerService_V20_2?wsdl">
    <con:part>
      <con:url>http://10.246.89.245:10710/corewsdpgensrv/services/CUSSCustomerService_V20_2?wsdl</con:url>
      <con:content><![CDATA[<wsdl:definitions targetNamespace="urn:srv.cus.corews.enterprise.fs.evry.com:ws:customer:v20_2" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:srv.cus.corews.enterprise.fs.evry.com:ws:customer:v20_2" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:sch9="urn:corews.enterprise.fs.evry.com:domain:common:v3" xmlns:sch8="urn:srv.cus.corews.enterprise.fs.evry.com:domain:retailcustomer:v4" xmlns:sch7="urn:corews.enterprise.fs.evry.com:domain:common:v4" xmlns:sch6="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customer:v8" xmlns:sch5="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customerinformation:v6" xmlns:sch4="urn:corews.enterprise.fs.evry.com:domain:common:v6" xmlns:sch3="urn:enterprise.fs.evry.com:domain:common:v3" xmlns:sch2="http://edb.com/ws/WSCommon_v22" xmlns:sch11="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customer:v20_2" xmlns:sch10="urn:srv.cus.corews.enterprise.fs.evry.com:domain:commoncustomer:v2" xmlns:sch1="urn:corews.enterprise.fs.evry.com:domain:common:v10" xmlns:sch0="urn:srv.cus.corews.enterprise.fs.evry.com:ws:customer:v20_2">
  <wsdl:types>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cus.corews.enterprise.fs.evry.com:ws:customer:v20_2" xmlns:enterprisecommon="urn:enterprise.fs.evry.com:domain:common:v3" xmlns:customer202="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customer:v20_2" xmlns:corewscommon="urn:corews.enterprise.fs.evry.com:domain:common:v10" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation><![CDATA[The service handles information inside the customer domain. <br>
               Available operations:                           <br>
               customerRead                              V20_1 <br>
               customerReadKey                           V20_1 <br>
               customerTagsRead                          V20_1 <br>
               customerReadGLDimensions                  V20_1 <br>
               customerSearch                            V20_1 <br>
               customerList                              V20_1 <br>
               customerNumberUpdate                      V20_2 <br>
               customerProfitCenterUpdate                V20_2 <br>
               customerProspectCreate                    V20_2 <br>
               customerNumberTemporaryCreate             V20_1 <br>
               customerExistValidate                     V20_2 <br>
               customerLegalValidate                     V20_2 <br>
               customerDelete                            V18_1 <br>
               customerAdvisorRead                       V20_2 <br>
               customerDetailsRead                       V20_2 <br>
               customerUpdate                            V20_2 <br>
               customerCreate                            V20_2 <br>
               customerDefaultRead                       V19_1 <br>
               customerDirectParameterValueList          V19_1 <br>
               customerInternalIdentificationAcquire     V19_1 <br>]]]]>><![CDATA[</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v10"/>
      <import namespace="urn:enterprise.fs.evry.com:domain:common:v3"/>
      <import namespace="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customer:v20_2"/>
      <element name="customerReadRequest" type="tns:customerReadRequestType"/>
      <element name="customerReadResponse" type="tns:customerReadResponseType"/>
      <element name="customerReadFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerReadKeyRequest" type="tns:customerReadKeyRequestType"/>
      <element name="customerReadKeyResponse" type="tns:customerReadKeyResponseType"/>
      <element name="customerReadKeyFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerTagsReadRequest" type="tns:customerTagsReadRequestType"/>
      <element name="customerTagsReadResponse" type="tns:customerTagsReadResponseType"/>
      <element name="customerTagsReadFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerAdvisorReadRequest" type="tns:customerAdvisorReadRequestType"/>
      <element name="customerAdvisorReadResponse" type="tns:customerAdvisorReadResponseType"/>
      <element name="customerAdvisorReadFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerDetailsReadRequest" type="tns:customerDetailsReadRequestType"/>
      <element name="customerDetailsReadResponse" type="tns:customerDetailsReadResponseType"/>
      <element name="customerDetailsReadFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerReadGLDimensionsRequest" type="tns:customerReadGLDimensionsRequestType"/>
      <element name="customerReadGLDimensionsResponse" type="tns:customerReadGLDimensionsResponseType"/>
      <element name="customerReadGLDimensionsFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerSearchRequest" type="tns:customerSearchRequestType"/>
      <element name="customerSearchResponse" type="tns:customerSearchResponseType"/>
      <element name="customerSearchFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerListRequest" type="tns:customerListRequestType"/>
      <element name="customerListResponse" type="tns:customerListResponseType"/>
      <element name="customerListFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerUpdateRequest" type="tns:customerUpdateRequestType"/>
      <element name="customerUpdateResponse" type="tns:customerUpdateResponseType"/>
      <element name="customerUpdateFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerNumberUpdateRequest" type="tns:customerNumberUpdateRequestType"/>
      <element name="customerNumberUpdateResponse" type="tns:customerNumberUpdateResponseType"/>
      <element name="customerNumberUpdateFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerProfitCenterUpdateRequest" type="tns:customerProfitCenterUpdateRequestType"/>
      <element name="customerProfitCenterUpdateResponse" type="tns:customerProfitCenterUpdateResponseType"/>
      <element name="customerProfitCenterUpdateFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerCreateRequest" type="tns:customerCreateRequestType"/>
      <element name="customerCreateResponse" type="tns:customerCreateResponseType"/>
      <element name="customerCreateFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerProspectCreateRequest" type="tns:customerProspectCreateRequestType"/>
      <element name="customerProspectCreateResponse" type="tns:customerProspectCreateResponseType"/>
      <element name="customerProspectCreateFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerNumberTemporaryCreateRequest" type="tns:customerNumberTemporaryCreateRequestType"/>
      <element name="customerNumberTemporaryCreateResponse" type="tns:customerNumberTemporaryCreateResponseType"/>
      <element name="customerNumberTemporaryCreateFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerExistValidateRequest" type="tns:customerExistValidateRequestType"/>
      <element name="customerExistValidateResponse" type="tns:customerExistValidateResponseType"/>
      <element name="customerExistValidateFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerLegalValidateRequest" type="tns:customerLegalValidateRequestType"/>
      <element name="customerLegalValidateResponse" type="tns:customerLegalValidateResponseType"/>
      <element name="customerLegalValidateFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerDeleteRequest" type="tns:customerDeleteRequestType"/>
      <element name="customerDeleteResponse" type="tns:customerDeleteResponseType"/>
      <element name="customerDeleteFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerDefaultReadRequest" type="tns:customerDefaultReadRequestType"/>
      <element name="customerDefaultReadResponse" type="tns:customerDefaultReadResponseType"/>
      <element name="customerDefaultReadFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerDirectParameterValueListRequest" type="tns:customerDirectParameterValueListRequestType"/>
      <element name="customerDirectParameterValueListResponse" type="tns:customerDirectParameterValueListResponseType"/>
      <element name="customerDirectParameterValueListFault" type="enterprisecommon:responseStateCodedFault"/>
      <element name="customerInternalIdentificationAcquireRequest" type="tns:customerInternalIdentificationAcquireRequestType"/>
      <element name="customerInternalIdentificationAcquireResponse" type="tns:customerInternalIdentificationAcquireResponseType"/>
      <element name="customerInternalIdentificationAcquireFault" type="enterprisecommon:responseStateCodedFault"/>
      <complexType name="customerReadRequestType">
        <annotation>
          <documentation>The operation reads basic customer data.</documentation>
        </annotation>
        <sequence>
          <element name="readQualification" type="customer202:customerReadQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerReadResponseType">
        <annotation>
          <documentation><![CDATA[Returns customer information. <br>
            Error codes: <br>
            68   - User not authorized for account <br>
            69   - User not authorized <br>
            207  - Customer number must be numeric <br>
            209  - Account number must be numeric <br>
            1000 - Customer not found <br>
            1002 - Not a valid customer number <br>
            1003 - Not a valid account number <br>
            1009 - Security violation; invalid bank number <br>
            2322 - Data for retail customer not found <br>
            2323 - Data for corporate customer not found <br>
            2390 - Either customerNumber or accountNumber must be present. <br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country.]]]]>><![CDATA[</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="readResult" type="customer202:customerReadResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerReadKeyRequestType">
        <annotation>
          <documentation>The operation reads customer id or customer number.</documentation>
        </annotation>
        <sequence>
          <element name="readKeyQualification" type="customer202:customerReadKeyQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerReadKeyResponseType">
        <annotation>
          <documentation>Returns customer information. &lt;br>
            Error codes: &lt;br>
            207  - Customer number must be numeric &lt;br>
            3065 - Customer not found. &lt;br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country.</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="readKeyResult" type="customer202:customerReadKeyResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerTagsReadRequestType">
        <annotation>
          <documentation>The operation reads customer tags.</documentation>
        </annotation>
        <sequence>
          <element name="tagsReadQualification" type="customer202:customerTagsReadQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerTagsReadResponseType">
        <annotation>
          <documentation>Returns customer tags. &lt;br>
            Error codes: &lt;br>
            1000 - Customer not found &lt;br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country.</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="readTagsResult" type="customer202:customerTagsReadResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerAdvisorReadRequestType">
        <annotation>
          <documentation>The operation reads customer advisor data.</documentation>
        </annotation>
        <sequence>
          <element name="advisorReadQualification" type="customer202:customerAdvisorReadQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerAdvisorReadResponseType">
        <annotation>
          <documentation>Returns customer advisor information. &lt;br>
            Error codes: &lt;br>
            1002 - Customer number is not CDV-valid &lt;br>
            1010 - Customer number is wrong &lt;br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country.&lt;br>
            2681 - Invalid value in AML-Status.</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="readAdvisorResult" type="customer202:customerAdvisorReadResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerDetailsReadRequestType">
        <annotation>
          <documentation>The operation reads details customer data.</documentation>
        </annotation>
        <sequence>
          <element name="detailsReadQualification" type="customer202:customerDetailsReadQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerDetailsReadResponseType">
        <annotation>
          <documentation>Returns customer information. &lt;br>
            Error codes: &lt;br>
            1002 - Customer number is not CDV-valid &lt;br>
            1010 - Customer number is wrong &lt;br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country.</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="detailsReadResult" type="customer202:customerDetailsReadResultType"/>
              <element minOccurs="0" name="customerInformation" type="corewscommon:customerInformationType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerReadGLDimensionsRequestType">
        <annotation>
          <documentation>The operation reads the possible GL dimensions registered in iHub Customer for a customer.</documentation>
        </annotation>
        <sequence>
          <element name="readGLDimensionsQualification" type="customer202:customerReadGLDimensionsQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerReadGLDimensionsResponseType">
        <annotation>
          <documentation>Error codes: &lt;br>
            208  - Customer id must be numeric &lt;br>
            1000 - Customer not found &lt;br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country.</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="readGLDimensionsResult" type="customer202:customerReadGLDimensionsResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerSearchRequestType">
        <annotation>
          <documentation>This operation searches customer.</documentation>
        </annotation>
        <sequence>
          <element name="searchQualification" type="customer202:customerSearchQualificationType"/>
          <element name="pagingElement" type="enterprisecommon:pagingInputElementType"/>
        </sequence>
      </complexType>
      <complexType name="customerSearchResponseType">
        <annotation>
          <documentation><![CDATA[Returns customer information. <br>
            Error codes: <br>
            1002 - Customer number is not CDV-valid <br>
            1010 - Customer number is wrong <br>
            2125 - Too many occurrences. Search parameters should be more precise. <br>
            2123 - Invalid Search. <br>
            2126 - Invalid date <br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country.]]]]>><![CDATA[</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element maxOccurs="unbounded" minOccurs="0" name="searchResult" type="customer202:customerSearchResultType"/>
              <element minOccurs="0" name="pagingElement" type="enterprisecommon:pagingOutputElementType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerListRequestType">
        <annotation>
          <documentation>The operation lists customer data.</documentation>
        </annotation>
        <sequence>
          <element name="listQualification" type="customer202:customerListQualificationType"/>
          <element name="pagingElement" type="enterprisecommon:pagingInputElementType"/>
        </sequence>
      </complexType>
      <complexType name="customerListResponseType">
        <annotation>
          <documentation>Returns customer information. &lt;br>
            Error codes: &lt;br>
            2125 - Too many occurences. Search parameters should be more precise. &lt;br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country.</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element maxOccurs="unbounded" minOccurs="0" name="listResult" type="customer202:customerListResultType"/>
              <element minOccurs="0" name="pagingElement" type="enterprisecommon:pagingOutputElementType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerUpdateRequestType">
        <annotation>
          <documentation>The operation updates a customer.</documentation>
        </annotation>
        <sequence>
          <element name="updateQualification" type="customer202:customerUpdateQualificationType"/>
          <element name="updateModification" type="customer202:customerUpdateModificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerUpdateResponseType">
        <annotation>
          <documentation><![CDATA[Updates customer information. No output items. <br>
            Error codes: <br>
            2316 - Country code not found <br>
            2352 - IndustryCode not found or does not belong to specified SectorCode <br>
            2319 - Sector code not found <br>
            2405 - Language code doesn't exist. <br>
            2510 - Lastname has an invalid value <br>
            2511 - CorporateName has an invalid value <br>
            2489 - Birthdate has an invalid value <br>
            2508 - Gender has an invalid value <br>
            2300 - SectorCode has an invalid value <br>
            2491 - No employees has access to the given viplabel <br>
            2468 - Function not available for the bank <br>
            2344 - Invalid combination of sector code and sector owner code <br>
            2513 - Customer has not a valid main postal address <br>
            2514 - Customer has not a customer number <br>
            2515 - Customer has not a sector code <br>
            2516 - Customer has legal roles, must comply to certain demands <br>
            2517 - Customer with agreements can not be a prospect customer <br>
            2518 - Customer with relations can not be a prospect customer <br>
            2519 - Customer with roles can not be a prospect customer <br>
            2520 - Date of birth can not be changed <br>
            2521 - Corporate information can not be registered for retail customers <br>
            2497 - Business registration number already exists as a sepatate customer <br>
            2498 - Business registration number can not be set on this customer type <br>
            2522 - Retail information can not be registered for corporate customers <br>
            2352 - IndustryCode not found or does not belong to specified SectorCode <br>
            2407 - Sector code is not valid according to customer number <br>
            2354 - CorporateForm has an invalid value <br>
            2500 - Viplabel is not possible for this customer <br>
            2501 - Viplabel is not possible for corporate customers <br>
            2303 - Sector code is not valid according to customer type. <br>
            2299 - Invalid Customer number <br>
            2492 - The given ProfitCenter is only valid for mortgage companies. <br>
            2494 - The given customerid is not reserved. <br>
            2455 - ProfitCenter not found within OrgId. <br>
            2353 - Invalid BussinessRegistrationNumber value <br>
            2342 - Invalid Weighting category <br>
            2340 - Invalid Rating value <br>
            2343 - Invalid Risk weighting <br>
            2341 - Rating and Credit values does not correspond <br>
            2512 - Invalid value in Number of children <br>
            2509 - Invalid CreditRate code <br>
            2524 - The update will be performed in batch at EndOfDay. <br>
            2639 - Current AML status can only be updated by bank employee. <br>
            2640 - User not allowed to update national register (DSF) item. <br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country <br>
            2695 - Invalid value in Socio-economic status. <br>
			2696 - Invalid value in Legal form. <br>
			2697 - Exchange country code is not found. <br>
			2698 - Invalid abbreviated name, Value 21. <br>
			2699 - Invalid value in tax classification. <br>
			2700 - Invalid value in Stock name. <br>
			2701 - Invalid value in Exchange country code. <br>]]]]>><![CDATA[</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="updateResult" type="customer202:commonCustomerResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerNumberUpdateRequestType">
        <annotation>
          <documentation><![CDATA[The operation updates the customer number on a customer. <br>
            Valid updates are: <br>
            - From fictitious for retail customers to a legal person number. <br>
            - From fictitious for corporate customers to a business registration number (00800000000 - 00999999999). <br>
            - From fictitious to fictitious valid for the customer type. <br>
            - From D-number to a legal person number. <br>
            - From old type to new type for business registration numbers.<br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country]]]]>><![CDATA[</documentation>
        </annotation>
        <sequence>
          <element name="numberUpdateQualification" type="customer202:customerNumberUpdateQualificationType"/>
          <element name="numberUpdateModification" type="customer202:customerNumberUpdateModificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerNumberUpdateResponseType">
        <annotation>
          <documentation><![CDATA[Returns result of update customer information. <br>
            Error codes: <br>
            2503 - Business registration number can only be changed to the new series. <br>
            2504 - This change from old to new customer number is against the rules. <br>
            2499 - Customer number is not valid according to customer type. <br>
            2407 - Sector code is not valid according to customer number. <br>
            2505 - New customer number already exists. <br>
            2496 - New customer number exists as a business registration number on another customer. <br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country]]]]>><![CDATA[</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType"/>
        </complexContent>
      </complexType>
      <complexType name="customerProfitCenterUpdateRequestType">
        <annotation>
          <documentation>This operation updates customer profit center.</documentation>
        </annotation>
        <sequence>
          <element name="qualification" type="customer202:customerProfitCenterUpdateQualificationType"/>
          <element name="modification" type="customer202:customerProfitCenterUpdateModificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerProfitCenterUpdateResponseType">
        <annotation>
          <documentation><![CDATA[Returns response after updating profit center customer. <br>
            Error codes :   <br>
            2401 - Same values as the base - no change is made. <br>
            2429 - No change field is filled in.    <br>
            2592 - The profit center is not valid.  <br>
            2646 - ProfitCenter can not be changed when changeProfitCenter is false. <br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country]]]]>><![CDATA[</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="result" type="customer202:customerProfitCenterUpdateResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerCreateRequestType">
        <annotation>
          <documentation>The operation creates a customer.</documentation>
        </annotation>
        <sequence>
          <element name="createQualification" type="customer202:customerCreateQualificationType"/>
          <element name="createDetails" type="customer202:customerCreateDetailsType"/>
        </sequence>
      </complexType>
      <complexType name="customerCreateResponseType">
        <annotation>
          <documentation><![CDATA[Returns result of create customer. <br>
            Error codes: <br>
            2301 - Customer number already exist <br>
            2303 - Sector Code is not valid according to customer type <br>
            2315 - Postal code not found <br>
            2485 - Nationality not found <br>
            2319 - Sector code not found <br>
            2486 - Country of birth not found <br>
            2487 - CustomerId not found <br>
            2488 - Secondary nationality not found <br>
            2352 - IndustryCode not found or does not belong to specified SectorCode <br>
            2405 - Language code doesn't exist <br>
            2489 - Birthdate has an invalid value <br>
            2490 - ReferenceCode has an invalid value <br>
            2508 - Gender has an invalid value <br>
            2300 - SectorCode has an invalid value <br>
            2510 - Lastname has an invalid value <br>
            2511 - CorporateName has an invalid value <br>
            2491 - No employees has access to the given viplabel <br>
            2492 - The given ProfitCenter is only valid for mortage companies <br>
            2468 - Function not available for the bank <br>
            2455 - ProfitCenter functionality is not used by the bank <br>
            2344 - Invalid combination of sector code and sector owner code <br>
            2493 - This customer is already a prospect customer Activate with customerUpdate <br>
            2494 - The given customerid is not reserved <br>
            2495 - The given customerid has a different customernumber reserved <br>
            2496 - The given customernumber exists as a businessregistrationNumber on another customer <br>
            2497 - businessregistrationNumber already exists as a sepatate customer <br>
            2478 - businessregistrationNumber can not be set on this customer type <br>
            2352 - IndustryCode not found or does not belong to specified SectorCode <br>
            2499 - Customer number is not valid according to customer type <br>
            2303 - Sector code is not valid according to customer type <br>
            2354 - CorporateForm has an invalid value <br>
            2500 - Viplabel is not possible for this customer <br>
            2501 - Viplabel is not possible for corporate customers <br>
            2299 - Invalid Customer number <br>
            2340 - Invalid Rating value <br>
            2509 - Invalid CreditRate code <br>
            2353 - Invalid BussinessRegistrationNumber value <br>
            2342 - Invalid Weighting category <br>
            2343 - Invalid Risk weighting <br>
            2407 - Sector code is not valid according to customer number. <br>
            2341 - Rating and Credit values does not correspond <br>
            2354 - Invalid CorporateForm value. <br>
            2624 - Invalid user Id in the request. <br>
            2643 - Customer exists from before. <br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country. <br>
            2695 - Invalid value in Socio-economic status. <br>
			2696 - Invalid value in Legal form. <br>
			2697 - Exchange country code is not found. <br>
			2698 - Invalid abbreviated name, Value 21. <br>
			2699 - Invalid value in tax classification. <br>
			2700 - Invalid value in Stock name. <br>
			2701 - Invalid value in Exchange country code. <br>]]]]>><![CDATA[</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element name="createResult" type="customer202:customerCreateResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerProspectCreateRequestType">
        <annotation>
          <documentation>The operation creates customer prospects.</documentation>
        </annotation>
        <sequence>
          <element name="prospectCreateQualification" type="customer202:customerProspectCreateQualificationType"/>
          <element name="prospectCreateDetails" type="customer202:customerProspectCreateDetailsType"/>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateResponseType">
        <annotation>
          <documentation><![CDATA[Returns customer prospect create's response. <br>
            Error codes: <br>
            1000 - Customer not found. <br>
            2301 - Customer details with specified CustomerNumber already exist. <br>
            2302 - Invalid customer gender found in the request. <br>
            2303 - Sector code is not valid according to customer type. <br>
            2315 - Postal code doesn't exist. <br>
            2316 - Country Code does not exist. <br>
            2317 - District/geographical code not found. <br>
            2319 - Sector code not found. <br>
            2337 - Date of birth value do not correspond to customer number. <br>
            2344 - Invalid combination of sector code and sector owner code. <br>
            2352 - IndustryCode not found or does not belong to specified SectorCode. <br>
            2354 - Invalid CorporateForm value. <br>
            2356 - Retail customer cannot be updated with Corporate customer details. <br>
            2357 - Corporate customer cannot be updated with Retail customer details. <br>
            2302 - Invalid customer gender found in the request. <br>
            2402 - Authorization alphanumeric alias already exist. <br>
            2403 - Authorization numeric alias already exist. <br>
            2404 - Numeric alias is mandatory. <br>
            2405 - Language code doesn't exist. <br>
            2406 - Invalid numeric logon id may not be used. <br>
            2407 - Sector code is not valid according to customer number. <br>
            2408 - Customer is not eligible for legal. <br>
            2641 - Invalid value in Sector code <br>
            2642 - User Id can't be less than 6 characters <br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country]]]]>><![CDATA[</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="prospectCreateResult" type="customer202:customerProspectCreateResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerNumberTemporaryCreateRequestType">
        <annotation>
          <documentation>This operation creates temporary customer number.</documentation>
        </annotation>
        <sequence>
          <element name="customerNumberTemporaryCreateQualification" type="customer202:customerNumberTemporaryCreateQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerNumberTemporaryCreateResponseType">
        <annotation>
          <documentation><![CDATA[Returns the result of customer number temporary create operation.<br>
            Error codes :<br>
            2303-Sector code is not valid according to customer type.<br>
            2319-Sector code not found. <br>
            2433-The financial institution does not have the proper product admission to use this functionality.<br>
            2661-In-Cust-No cannot be longer than the maximum length for the country. <br>
            2670-Illegal SectorCode value. <br>
            2671-Sector code must be filled in. <br>]]]]>><![CDATA[</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="customerNumberTemporaryCreateResult" type="customer202:customerNumberTemporaryCreateResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerExistValidateRequestType">
        <annotation>
          <documentation>This operation validates whether customer exists or not.</documentation>
        </annotation>
        <sequence>
          <element name="customerExistValidateQualification" type="customer202:customerExistValidateQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerExistValidateResponseType">
        <annotation>
          <documentation>Returns the result of customer exist validation.
            Error codes :</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="customerExistValidateResult" type="customer202:customerExistValidateResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerLegalValidateRequestType">
        <annotation>
          <documentation>This operation validates whether the customer is legal customer or not.</documentation>
        </annotation>
        <sequence>
          <element name="qualification" type="customer202:customerLegalValidateQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerLegalValidateResponseType">
        <annotation>
          <documentation>Returns empty response after successfully validating the customer whether he is legal customer or not.</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element minOccurs="0" name="result" type="customer202:customerLegalValidateResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerDeleteRequestType">
        <annotation>
          <documentation>This operation deletes customer entry.</documentation>
        </annotation>
        <sequence>
          <element name="qualification" type="customer202:customerDeleteQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerDeleteResponseType">
        <annotation>
          <documentation>Returns empty response after successfully deleting the customer.    &lt;br>
            Error codes :   &lt;br>
            2591 - Customer is not a potential customer and can not be deleted &lt;br>
            2661 - In-Cust-No cannot be longer than the maximum length for the country</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType"/>
        </complexContent>
      </complexType>
      <complexType name="customerDefaultReadRequestType">
        <annotation>
          <documentation>This operation reads customer's default details.</documentation>
        </annotation>
        <sequence>
          <element name="qualification" type="customer202:customerDefaultReadQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerDefaultReadResponseType">
        <annotation>
          <documentation>Returns customer's default details.</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element name="result" type="customer202:customerDefaultReadResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerDirectParameterValueListRequestType">
        <annotation>
          <documentation>This operation lists customer's direct parameter values.</documentation>
        </annotation>
        <sequence>
          <element name="qualification" type="customer202:customerDirectParameterValueListQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerDirectParameterValueListResponseType">
        <annotation>
          <documentation>Returns the response of customer direct parameter value list operation</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element maxOccurs="unbounded" minOccurs="0" name="result" type="customer202:customerDirectParameterValueListResultType"/>
              <element minOccurs="0" name="pagingElement" type="enterprisecommon:pagingOutputElementType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <complexType name="customerInternalIdentificationAcquireRequestType">
        <annotation>
          <documentation>This operation gets internal id of a customer</documentation>
        </annotation>
        <sequence>
          <element name="qualification" type="customer202:customerInternalIdentificationAcquireQualificationType"/>
        </sequence>
      </complexType>
      <complexType name="customerInternalIdentificationAcquireResponseType">
        <annotation>
          <documentation>Returns internal id of a customer</documentation>
        </annotation>
        <complexContent>
          <extension base="enterprisecommon:baseResponseType">
            <sequence>
              <element name="result" type="customer202:customerInternalIdentificationAcquireResultType"/>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:corews.enterprise.fs.evry.com:domain:common:v10" xmlns:tns="urn:corews.enterprise.fs.evry.com:domain:common:v10" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <simpleType name="alphaNumMax1Type">
        <annotation>
          <documentation>1 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax2Type">
        <annotation>
          <documentation>2 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax3Type">
        <annotation>
          <documentation>3 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax4Type">
        <annotation>
          <documentation>4 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax5Type">
        <annotation>
          <documentation>5 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax6Type">
        <annotation>
          <documentation>6 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax7Type">
        <annotation>
          <documentation>7 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax8Type">
        <annotation>
          <documentation>8 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax9Type">
        <annotation>
          <documentation>9 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax10Type">
        <annotation>
          <documentation>10 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax11Type">
        <annotation>
          <documentation>11 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax12Type">
        <annotation>
          <documentation>12 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax13Type">
        <annotation>
          <documentation>13 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax15Type">
        <annotation>
          <documentation>15 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax16Type">
        <annotation>
          <documentation>16 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax17Type">
        <annotation>
          <documentation>17 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="17"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax18Type">
        <annotation>
          <documentation>18 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax19Type">
        <annotation>
          <documentation>19 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="19"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax20Type">
        <annotation>
          <documentation>20 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="20"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax21Type">
        <annotation>
          <documentation>21 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="21"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax22Type">
        <annotation>
          <documentation>22 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="22"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax23Type">
        <annotation>
          <documentation>23 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="23"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax24Type">
        <annotation>
          <documentation>24 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="24"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax25Type">
        <annotation>
          <documentation>25 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="25"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax26Type">
        <annotation>
          <documentation>26 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="26"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax27Type">
        <annotation>
          <documentation>27 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="27"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax30Type">
        <annotation>
          <documentation>30 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax32Type">
        <annotation>
          <documentation>32 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="32"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax34Type">
        <annotation>
          <documentation>34 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax35Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax36Type">
        <annotation>
          <documentation>36 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="36"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax40Type">
        <annotation>
          <documentation>40 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="40"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax42Type">
        <annotation>
          <documentation>42 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="42"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax50Type">
        <annotation>
          <documentation>50 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="50"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax60Type">
        <annotation>
          <documentation>60 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="60"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax70Type">
        <annotation>
          <documentation>70 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="70"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax78Type">
        <annotation>
          <documentation>78 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="78"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax80Type">
        <annotation>
          <documentation>80 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="80"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax100Type">
        <annotation>
          <documentation>100 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax120Type">
        <annotation>
          <documentation>120 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="120"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax140Type">
        <annotation>
          <documentation>140 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="140"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax150Type">
        <annotation>
          <documentation>150 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="150"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax200Type">
        <annotation>
          <documentation>200 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="200"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax220Type">
        <annotation>
          <documentation>220 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="220"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax240Type">
        <annotation>
          <documentation>240 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="240"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax250Type">
        <annotation>
          <documentation>250 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="250"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax255Type">
        <annotation>
          <documentation>255 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="255"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax256Type">
        <annotation>
          <documentation>256 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="256"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax400Type">
        <annotation>
          <documentation>400 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="400"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax500Type">
        <annotation>
          <documentation>500 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="500"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax1Type">
        <annotation>
          <documentation>Integer value with max length 1</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax2Type">
        <annotation>
          <documentation>Integer value with max length 2</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax3Type">
        <annotation>
          <documentation>Integer value with max length 3</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax4Type">
        <annotation>
          <documentation>Integer value with max length 4</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax5Type">
        <annotation>
          <documentation>Integer value with max length 5</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax6Type">
        <annotation>
          <documentation>Integer value with max length 6</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax7Type">
        <annotation>
          <documentation>Integer value with max length 7</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax8Type">
        <annotation>
          <documentation>Integer value with max length 8</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax9Type">
        <annotation>
          <documentation>Integer value with max length 9</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="intMin1Max999Type">
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax9Type">
        <annotation>
          <documentation>Long value with max length 9.</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax10Type">
        <annotation>
          <documentation>Long value with max length 10</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax11Type">
        <annotation>
          <documentation>Long value with max length 11</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax12Type">
        <annotation>
          <documentation>Long value with max length 12</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax13Type">
        <annotation>
          <documentation>Long value with max length 13</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax16Type">
        <annotation>
          <documentation>Long value with max length 16</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax18Type">
        <annotation>
          <documentation>Long value with max length 18</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="iban">
        <annotation>
          <documentation>IBAN number - International Bank Account Number, comprising a country
				code, two check digits and a basic bank account-number (BBAN), eg.
				NO5928012192284.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="5"/>
          <maxLength value="34"/>
          <pattern value="[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianAccountNumber">
        <annotation>
          <documentation>Norwegian account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianCustomerNumber">
        <annotation>
          <documentation>Norwegian customer number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="regBankNumber">
        <annotation>
          <documentation>Reg bank number</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([0-9])*"/>
          <minLength value="4"/>
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntId">
        <annotation>
          <documentation>Customer internal id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="userId">
        <annotation>
          <documentation>User id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntIdNumeric">
        <annotation>
          <documentation>Numeric customer internal id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="amount">
        <annotation>
          <documentation>Decimal value of max length 18 with 3 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="18"/>
          <fractionDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="rate">
        <annotation>
          <documentation>Decimal value of max length 9 with 5 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="9"/>
          <fractionDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intId">
        <annotation>
          <documentation>Internal generated id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="productNumber">
        <annotation>
          <documentation>Product number</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="sequenceNumber">
        <annotation>
          <documentation>Sequence number.</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="url">
        <annotation>
          <documentation>URL</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1024"/>
        </restriction>
      </simpleType>
      <simpleType name="ratio">
        <annotation>
          <documentation>Ratio</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode5">
        <annotation>
          <documentation>Alphanumeric value with length 5</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="organisationUnitStrictType">
        <annotation>
          <documentation>Permitted values:'PC' - Profit Centers;'OU' -
				Organization Units</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PC"/>
          <enumeration value="OU"/>
        </restriction>
      </simpleType>
      <simpleType name="month">
        <annotation>
          <documentation>Month 1-12</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="positiveIntegerMax11Type">
        <annotation>
          <documentation>Positive(>0) integer value with max length 11</documentation>
        </annotation>
        <restriction base="positiveInteger">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="executiveOfficerId">
        <annotation>
          <documentation>Executive officer identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="executiveOfficerName">
        <annotation>
          <documentation>Executive officer name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="shortName">
        <annotation>
          <documentation>Short name of customer</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="productId">
        <annotation>
          <documentation>Product identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax18Type"/>
      </simpleType>
      <simpleType name="productShortName">
        <annotation>
          <documentation>Product short name - 6 characters</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax6Type"/>
      </simpleType>
      <simpleType name="productSequenceNumber">
        <annotation>
          <documentation>Product sequence number</documentation>
        </annotation>
        <restriction base="tns:sequenceNumber"/>
      </simpleType>
      <simpleType name="productName">
        <annotation>
          <documentation>Product name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="productIntId">
        <annotation>
          <documentation>Product internal id</documentation>
        </annotation>
        <restriction base="tns:intId"/>
      </simpleType>
      <simpleType name="profitCenter">
        <annotation>
          <documentation>Profit center id</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="profitCenterText">
        <annotation>
          <documentation>Profit center text</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="alias">
        <annotation>
          <documentation>Sets the alias that identifies the self service channel agreement.
				Either use value from numeric alias (for cash call channel) or
				alphanumeric alias (for internet bank, mobile bank, sms bank
				channel).</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="channel">
        <annotation>
          <documentation>Sets the self service channel.
				Valid values:
				WAP - Mobile bank channel agreement.
				INT - Internet bank channel agreement.
				SMS - Sms bank channel agreement.
				TLF - Cash call channel agreement.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax5Type">
          <enumeration value="WAP"/>
          <enumeration value="INT"/>
          <enumeration value="SMS"/>
          <enumeration value="TLF"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyCode">
        <annotation>
          <documentation>Currency code (ISO 4217)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([A-Z])*"/>
          <minLength value="3"/>
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationFactor">
        <annotation>
          <documentation>Interest calculation factor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationDivisor">
        <annotation>
          <documentation>Interest calculation divisor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="initialFunctionId">
        <annotation>
          <documentation>Application calling a service.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax8Type"/>
      </simpleType>
      <complexType name="customerInformationType">
        <sequence>
          <element minOccurs="0" name="customerNumber" type="tns:alphaNumMax35Type"/>
          <element minOccurs="0" name="shortName" type="tns:shortName"/>
          <element minOccurs="0" name="profitCenter" type="tns:profitCenter"/>
          <element minOccurs="0" name="profitCenterText" type="tns:profitCenterText"/>
          <element minOccurs="0" name="productId" type="tns:productId"/>
          <element minOccurs="0" name="productShortName" type="tns:productShortName"/>
          <element minOccurs="0" name="executiveOfficerId" type="tns:executiveOfficerId"/>
          <element minOccurs="0" name="executiveOfficerName" type="tns:executiveOfficerName"/>
        </sequence>
      </complexType>
      <complexType name="customerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="customerIntId" type="tns:customerIntIdNumeric">
            <annotation>
              <documentation>The customer internal id.</documentation>
            </annotation>
          </element>
          <element name="customerNumber" type="tns:norwegianCustomerNumber">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="internationalCustomerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="internationalCustomerId" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer internal id.</documentation>
            </annotation>
          </element>
          <element name="internationalCustomerNumber" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyType">
        <annotation>
          <documentation>The product key consists of either (productNumber and
				sequenceNumber) OR productId.</documentation>
        </annotation>
        <choice>
          <element name="productKeyAlt1" type="tns:productKeyAlt1Type">
            <annotation>
              <documentation>Product key alternative 1 consists of product number
						and product sequence number.</documentation>
            </annotation>
          </element>
          <element name="productKeyAlt2" type="tns:productKeyAlt2Type">
            <annotation>
              <documentation>Product key alternative 2 consists of product id
						only.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyAlt1Type">
        <annotation>
          <documentation>Product key alternative 1 consists of the product
				number and the product sequence number.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productNumber" type="tns:productNumber">
            <annotation>
              <documentation>The product number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sequenceNumber" type="tns:sequenceNumber">
            <annotation>
              <documentation>The product sequence number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productKeyAlt2Type">
        <annotation>
          <documentation>Product key alternative 2 consists of the product id
				only.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="tns:productId">
            <annotation>
              <documentation>The product id.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="selfServiceKeyType">
        <annotation>
          <documentation>SelfServiceKey consist of alias and channel, and
				identifies a self service channel
				agreement.
				Both values must be set.</documentation>
        </annotation>
        <sequence>
          <element name="alias" type="tns:alias">
            <annotation>
              <documentation>Sets the alias that identifies the self service
						channel agreement.&lt;br>
						Either use value from numeric alias (for cash
						call channel) or
						alphanumeric alias (for internet bank, mobile
						bank, sms bank
						channel).</documentation>
            </annotation>
          </element>
          <element name="channel" type="tns:channel">
            <annotation>
              <documentation>Sets the self service channel.&lt;br>
						Valid values:&lt;br>
						WAP - Mobile bank channel agreement.&lt;br>
						INT - Internet bank channel agreement.&lt;br>
						SMS - Sms bank channel agreement.&lt;br>
						TLF - Cash call channel agreement.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="channelOutput">
        <union memberTypes="tns:channel tns:unknown"/>
      </simpleType>
      <simpleType name="numericAlias">
        <annotation>
          <documentation>Numeric alias - which allows on all numerics as password and min and max is
				11 digits.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{11}"/>
        </restriction>
      </simpleType>
      <simpleType name="pin">
        <annotation>
          <documentation>Numeric password for cash call.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,6}"/>
        </restriction>
      </simpleType>
      <simpleType name="password">
        <annotation>
          <documentation>Password for internet bank.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,11}"/>
        </restriction>
      </simpleType>
      <simpleType name="swiftAddress">
        <annotation>
          <documentation>ISO 9362 SWIFT address. &lt;br>
				4 characters: bank code (letters only) &lt;br>
				2 characters: ISO 3166-1 alpha-2 country code (letters only)
				&lt;br>
				2 characters: location code (letters and numbers) (if second charcter
				is "1", the receiver is a passive participant of the SWIFT network)
				&lt;br>
				3 characters: department code, optional ('XXX' for headquarters)
				(letters and numbers)</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <complexType name="accountNumberInputType">
        <annotation>
          <documentation>The account number input as BBAN or IBAN format.</documentation>
        </annotation>
        <sequence>
          <choice>
            <element name="bban" type="tns:alphaNumMax30Type">
              <annotation>
                <documentation>Basic Bank Account Number, where format is decided by the national
							central bank or designated payment authority of each country, eg.
							12345678901</documentation>
              </annotation>
            </element>
            <element name="iban" type="tns:iban">
              <annotation>
                <documentation>International Bank Account Number, comprising a country code, two check digits
							and a bank account-number (BBAN), eg. XX9912345678901</documentation>
              </annotation>
            </element>
          </choice>
        </sequence>
      </complexType>
      <complexType name="accountNumberOutputType">
        <annotation>
          <documentation>The account number Output as BBAN and IBAN format.</documentation>
        </annotation>
        <sequence>
          <element name="bban" type="tns:alphaNumMax30Type">
            <annotation>
              <documentation>Basic Bank Account Number, where format is decided by the national
						central bank or designated payment authority of each country, eg.
						12345678901</documentation>
            </annotation>
          </element>
          <element name="iban" type="tns:iban">
            <annotation>
              <documentation>International Bank Account Number, comprising a country code, two check digits
						and a bank account-number (BBAN), eg. XX9912345678901</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="unknown">
        <annotation>
          <documentation>Unknown value
				Valid values:
				UNKNOWN Unknown host value</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type">
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="percentageWithDecimals">
        <annotation>
          <documentation>Decimal value of max length 5 with 2 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="5"/>
          <fractionDigits value="2"/>
        </restriction>
      </simpleType>
    </schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://edb.com/ws/WSCommon_v22" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://edb.com/ws/WSCommon_v22">
      <xsd:complexType name="ClientContextType">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the person who initiated the action This could either be the customer itself in a netbank) or an employee</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="credentials" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Authorization data. This is typically a security Object retriewed from a logon, but can also be a plain password.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="channel" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Indicated what type of application that initiated the request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="orgid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The OrganizationalId - will in a banking context be Financial Institution / Konsernnr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="orgunit" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The Organizational unit will in a banking context be Branch / Registernr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="customerid" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Id of the customer on which the operation is requested, may be the same as userid, but may well be different</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="locale" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Locale in a java syntax e.g "en_EN". May be used if application supports localized response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ip" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The ip adress of the client</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="itemType">
            <xsd:annotation>
              <xsd:documentation>Optionnal extention items - Add key/value pairs for application specific extentions</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="itemType">
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="EDBHeaderType">
        <xsd:sequence>
          <xsd:element name="SourceApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the source that initiated the message. Used to separate different service consumers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="DestinationApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the destination of the message. Used to separate different service providers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Function" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the service to be called.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Version" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Service version "X.Y.Z" according to this standard:
                X = Main release (major changes, not necessarily backwards compatible)
                Y = Minor release (backwards compatible, new functionality)
                Z = Bugfix (backwards compatible, error correction only)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ClientContext" type="ClientContextType">
            <xsd:annotation>
              <xsd:documentation>Elements for identifying client context information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="AutHeader" type="EDBHeaderType"/>
      <xsd:complexType name="ResponseStateType">
        <xsd:sequence>
          <xsd:element name="ErrorCode" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Numeric error code reported for this error.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Severity" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Response Status Severity Code</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ComponentId" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Unique code identifying the component returning the service response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Message" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Message describing the error. Default is english language. Optionally localized according to the locale parameter in the service request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="LogSequence" nillable="true" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>Optional key generated to be used for log correlation purposes.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="errorItem" nillable="true" type="errorItemType">
            <xsd:annotation>
              <xsd:documentation>Optional extention items - key/value pairs are used for extented error inforamtion.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="errorItemType">
        <xsd:annotation/>
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
    </xsd:schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:enterprise.fs.evry.com:domain:common:v3" xmlns:tns="urn:enterprise.fs.evry.com:domain:common:v3" xmlns:edbheader="http://edb.com/ws/WSCommon_v22" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <import namespace="http://edb.com/ws/WSCommon_v22"/>
      <complexType name="responseStateCodedFault">
        <annotation>
          <documentation>Generic SoapFault type</documentation>
        </annotation>
        <sequence>
          <element name="responseState" type="edbheader:ResponseStateType">
            <annotation>
              <documentation>Contains the distinct error-code and additional
                        information on the actual error.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="pageLengthType">
        <annotation>
          <documentation>An type capable of describing a segments length or wished length</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="500"/>
        </restriction>
      </simpleType>
      <simpleType name="pageIndexType">
        <annotation>
          <documentation>Index of segment start</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <complexType name="pagingInputElementType">
        <annotation>
          <documentation>Describes a paging segment</documentation>
        </annotation>
        <sequence>
          <element name="startIndex" type="tns:pageIndexType"/>
          <element name="pageSize" type="tns:pageLengthType"/>
        </sequence>
      </complexType>
      <complexType name="pagingOutputElementType">
        <annotation>
          <documentation>Describes the returned segment</documentation>
        </annotation>
        <sequence>
          <element name="numberOfElements" type="tns:pageLengthType">
            <annotation>
              <documentation>Number of elements returned</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType abstract="true" name="pageResultType">
        <annotation>
          <documentation>Wraps paging and data elements</documentation>
        </annotation>
        <sequence>
          <element name="pagingOutput" type="tns:pagingOutputElementType"/>
          <element name="elements">
            <complexType>
              <sequence>
                <any namespace="##other"/>
              </sequence>
            </complexType>
          </element>
        </sequence>
      </complexType>
      <simpleType name="generatedPkType">
        <annotation>
          <documentation>Generated primary key in database</documentation>
        </annotation>
        <restriction base="long"/>
      </simpleType>
      <simpleType name="optimisticLockVersionType">
        <annotation>
          <documentation>Version counter field used for optimistic locking
				See: http://en.wikipedia.org/wiki/Optimistic_concurrency_control
				This ensures data consistency when data travels across
				layers.</documentation>
        </annotation>
        <restriction base="long"/>
      </simpleType>
      <complexType abstract="true" name="basePersistentEntityType">
        <sequence>
          <element minOccurs="0" name="pk" type="tns:generatedPkType">
            <annotation>
              <documentation>Bearer of the primary key.
						Not present for an non-persisted entity.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="version" type="tns:optimisticLockVersionType">
            <annotation>
              <documentation>The optimistic locking version field.
						Not present for an non-persisted entity.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType abstract="true" name="baseResponseType">
        <annotation>
          <documentation>Base response type which all services should extend off</documentation>
        </annotation>
        <sequence>
          <element name="ResponseState" type="edbheader:ResponseStateType">
            <annotation>
              <documentation>The response state which describes the outcome of calling the service.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <element name="languageCode" type="tns:languageCodeType"/>
      <element name="currencyCode" type="tns:currencyCodeType"/>
      <element name="logonId" type="tns:alphanumeric12"/>
      <element name="profitCenterExtId" type="tns:text15"/>
      <element name="issuerNo" type="tns:issuerNoType"/>
      <element name="organisationNo" type="tns:alphanumeric12"/>
      <element name="legalOrganisationNo" type="tns:text15"/>
      <element name="customerIntId" type="tns:generatedCharID12Type"/>
      <element name="customerNumber" type="tns:text15"/>
      <element name="customerNumberNO" type="tns:customerNumberNOType">
        <annotation>
          <documentation>Official/legal customer number,
				f.ex. Social security
				number. Norwegian format</documentation>
        </annotation>
      </element>
      <element name="createDate" type="date">
        <annotation>
          <documentation>the date an occurrence was created in the database</documentation>
        </annotation>
      </element>
      <element name="createTime" type="time">
        <annotation>
          <documentation>the time an occurrence was created in the database</documentation>
        </annotation>
      </element>
      <element name="productElementIntId" type="tns:generatedCharID15Type"/>
      <element name="accountNumber" type="tns:accountNumberType"/>
      <element name="accountNumberNO" type="tns:accountNumberNOType"/>
      <element name="swiftBicCode" type="tns:alphanumeric11"/>
      <element name="listFrom" type="short"/>
      <element name="listTo" type="short"/>
      <element name="countryCode" type="tns:countryCodeType"/>
      <element name="moreOccurences" type="boolean">
        <annotation>
          <documentation>True: there are more occurrences than in the result list 
						   False: there are not more occurrences last occurrency is delivered in the result list</documentation>
        </annotation>
      </element>
      <element name="openDate" type="date">
        <annotation>
          <documentation>Open date of an occurrence, 
			f.ex. the date when the customer became a customer 
			and not the date the customer was registered in the database</documentation>
        </annotation>
      </element>
      <element name="lastChangeDate" type="date">
        <annotation>
          <documentation>The date the customer was last changed.</documentation>
        </annotation>
      </element>
      <element name="lastChangeTime" type="time">
        <annotation>
          <documentation>The time the customer was last changed.</documentation>
        </annotation>
      </element>
      <simpleType name="createdByLogonid">
        <annotation>
          <documentation>Refers to the name of who first time made this record</documentation>
        </annotation>
        <restriction base="tns:alphanumeric12"/>
      </simpleType>
      <simpleType name="lastChangeLogonid">
        <annotation>
          <documentation>User that last changed the occurrence.</documentation>
        </annotation>
        <restriction base="tns:alphanumeric12"/>
      </simpleType>
      <simpleType name="countryCodeType">
        <annotation>
          <documentation>ISO-3166-1 standard country code with length 2</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z]{2}"/>
        </restriction>
      </simpleType>
      <simpleType name="languageCodeType">
        <annotation>
          <documentation>ISO-639-2 language code with length 3</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z]{3}"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyCodeType">
        <annotation>
          <documentation>ISO-4217 currency code with length 3</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode5">
        <annotation>
          <documentation>Alphanumeric value with length 5</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="issuerNoType">
        <annotation>
          <documentation>Issuer identification number</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode10">
        <annotation>
          <documentation>Alphanumeric value with length 10</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="10"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="alphanumeric11">
        <annotation>
          <documentation>Alphanumeric value with length 11</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="generatedCharID12Type">
        <annotation>
          <documentation>system generated ID</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="alphanumeric12">
        <annotation>
          <documentation>Alphanumeric value with length 12</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="generatedCharID15Type">
        <annotation>
          <documentation>system generated ID</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="text15">
        <annotation>
          <documentation>Alphanumeric value with length 15</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
        </restriction>
      </simpleType>
      <simpleType name="generatedNumId18Type">
        <annotation>
          <documentation>system generated ID</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="accountNumberType">
        <annotation>
          <documentation>BBAN account number</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="30"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="accountNumberNOType">
        <annotation>
          <documentation>BBAN account number, norwegian format</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="customerNumberNOType">
        <annotation>
          <documentation>Official/legal customer number. Norwegian format</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="text35">
        <annotation>
          <documentation>Alphanumeric value with length 35</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:corews.enterprise.fs.evry.com:domain:common:v6" xmlns:tns="urn:corews.enterprise.fs.evry.com:domain:common:v6" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <simpleType name="alphaNumMax1Type">
        <annotation>
          <documentation>1 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax2Type">
        <annotation>
          <documentation>2 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax3Type">
        <annotation>
          <documentation>3 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax4Type">
        <annotation>
          <documentation>4 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax5Type">
        <annotation>
          <documentation>5 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax6Type">
        <annotation>
          <documentation>6 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax7Type">
        <annotation>
          <documentation>7 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax8Type">
        <annotation>
          <documentation>8 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax9Type">
        <annotation>
          <documentation>9 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax10Type">
        <annotation>
          <documentation>10 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax11Type">
        <annotation>
          <documentation>11 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax12Type">
        <annotation>
          <documentation>12 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax13Type">
        <annotation>
          <documentation>13 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax15Type">
        <annotation>
          <documentation>15 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax16Type">
        <annotation>
          <documentation>16 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax17Type">
        <annotation>
          <documentation>17 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="17"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax18Type">
        <annotation>
          <documentation>18 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax19Type">
        <annotation>
          <documentation>19 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="19"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax20Type">
        <annotation>
          <documentation>20 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="20"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax22Type">
        <annotation>
          <documentation>22 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="22"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax23Type">
        <annotation>
          <documentation>23 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="23"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax25Type">
        <annotation>
          <documentation>25 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="25"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax26Type">
        <annotation>
          <documentation>26 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="26"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax27Type">
        <annotation>
          <documentation>27 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="27"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax30Type">
        <annotation>
          <documentation>30 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax32Type">
        <annotation>
          <documentation>32 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="32"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax34Type">
        <annotation>
          <documentation>34 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax35Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax36Type">
        <annotation>
          <documentation>36 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="36"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax42Type">
        <annotation>
          <documentation>42 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="42"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax50Type">
        <annotation>
          <documentation>50 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="50"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax60Type">
        <annotation>
          <documentation>60 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="60"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax70Type">
        <annotation>
          <documentation>70 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="70"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax78Type">
        <annotation>
          <documentation>78 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="78"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax80Type">
        <annotation>
          <documentation>80 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="80"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax120Type">
        <annotation>
          <documentation>120 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="120"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax140Type">
        <annotation>
          <documentation>140 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="140"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax200Type">
        <annotation>
          <documentation>200 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="200"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax220Type">
        <annotation>
          <documentation>220 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="220"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax250Type">
        <annotation>
          <documentation>250 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="250"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax255Type">
        <annotation>
          <documentation>255 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="255"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax256Type">
        <annotation>
          <documentation>256 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="256"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax400Type">
        <annotation>
          <documentation>400 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="400"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax500Type">
        <annotation>
          <documentation>500 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="500"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax1Type">
        <annotation>
          <documentation>Integer value with max length 1</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax2Type">
        <annotation>
          <documentation>Integer value with max length 2</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax3Type">
        <annotation>
          <documentation>Integer value with max length 3</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax4Type">
        <annotation>
          <documentation>Integer value with max length 4</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax5Type">
        <annotation>
          <documentation>Integer value with max length 5</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax6Type">
        <annotation>
          <documentation>Integer value with max length 6</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax7Type">
        <annotation>
          <documentation>Integer value with max length 7</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax8Type">
        <annotation>
          <documentation>Integer value with max length 8</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax9Type">
        <annotation>
          <documentation>Integer value with max length 9</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="intMin1Max999Type">
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax9Type">
        <annotation>
          <documentation>Long value with max length 9.</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax10Type">
        <annotation>
          <documentation>Long value with max length 10</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax11Type">
        <annotation>
          <documentation>Long value with max length 11</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax12Type">
        <annotation>
          <documentation>Long value with max length 12</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax13Type">
        <annotation>
          <documentation>Long value with max length 13</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax16Type">
        <annotation>
          <documentation>Long value with max length 16</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax18Type">
        <annotation>
          <documentation>Long value with max length 18</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax100Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax40Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="40"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax240Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="240"/>
        </restriction>
      </simpleType>
      <simpleType name="iban">
        <annotation>
          <documentation>IBAN number - International Bank Account Number, comprising a country code, two check digits and a basic bank account-number (BBAN), eg. NO5928012192284.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="5"/>
          <maxLength value="34"/>
          <pattern value="[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianAccountNumber">
        <annotation>
          <documentation>Norwegian account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianCustomerNumber">
        <annotation>
          <documentation>Norwegian customer number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="regBankNumber">
        <annotation>
          <documentation>Reg bank number</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([0-9])*"/>
          <minLength value="4"/>
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntId">
        <annotation>
          <documentation>Customer internal id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="userId">
        <annotation>
          <documentation>User id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntIdNumeric">
        <annotation>
          <documentation>Numeric customer internal id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="amount">
        <annotation>
          <documentation>Decimal value of max length 18 with 3 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="18"/>
          <fractionDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="rate">
        <annotation>
          <documentation>Decimal value of max length 9 with 5 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="9"/>
          <fractionDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intId">
        <annotation>
          <documentation>Internal generated id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="productNumber">
        <annotation>
          <documentation>Product number</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="sequenceNumber">
        <annotation>
          <documentation>Sequence number.</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="url">
        <annotation>
          <documentation>URL</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1024"/>
        </restriction>
      </simpleType>
      <simpleType name="ratio">
        <annotation>
          <documentation>Ratio</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode5">
        <annotation>
          <documentation>Alphanumeric value with length 5</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="organisationUnitStrictType">
        <annotation>
          <documentation>Permitted values:'PC' - Profit Centers;'OU' - Organization Units</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PC"/>
          <enumeration value="OU"/>
        </restriction>
      </simpleType>
      <simpleType name="month">
        <annotation>
          <documentation>Month 1-12</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="positiveIntegerMax11Type">
        <annotation>
          <documentation>Positive(>0) integer value with max length 11</documentation>
        </annotation>
        <restriction base="positiveInteger">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="executiveOfficerId">
        <annotation>
          <documentation>Executive officer identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="executiveOfficerName">
        <annotation>
          <documentation>Executive officer name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="shortName">
        <annotation>
          <documentation>Short name of customer</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="productId">
        <annotation>
          <documentation>Product identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax18Type"/>
      </simpleType>
      <simpleType name="productShortName">
        <annotation>
          <documentation>Product short name - 6 characters</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax6Type"/>
      </simpleType>
      <simpleType name="productSequenceNumber">
        <annotation>
          <documentation>Product sequence number</documentation>
        </annotation>
        <restriction base="tns:sequenceNumber"/>
      </simpleType>
      <simpleType name="productName">
        <annotation>
          <documentation>Product name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="productIntId">
        <annotation>
          <documentation>Product internal id</documentation>
        </annotation>
        <restriction base="tns:intId"/>
      </simpleType>
      <simpleType name="profitCenter">
        <annotation>
          <documentation>Profit center id</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="profitCenterText">
        <annotation>
          <documentation>Profit center text</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="alias">
        <annotation>
          <documentation>Sets the alias that identifies the self service channel agreement.
				Either use value from numeric alias (for cash call channel) or
				alphanumeric alias (for internet bank, mobile bank, sms bank channel).</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="channel">
        <annotation>
          <documentation>Sets the self service channel.
				Valid values:
				WAP - Mobile bank channel agreement.
				INT - Internet bank channel agreement.
				SMS - Sms bank channel agreement.
				TLF - Cash call channel agreement.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax5Type">
          <enumeration value="WAP"/>
          <enumeration value="INT"/>
          <enumeration value="SMS"/>
          <enumeration value="TLF"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyCode">
        <annotation>
          <documentation>Currency code (ISO 4217)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([A-Z])*"/>
          <minLength value="3"/>
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationFactor">
        <annotation>
          <documentation>Interest calculation factor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationDivisor">
        <annotation>
          <documentation>Interest calculation divisor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="initialFunctionId">
        <annotation>
          <documentation>Application calling a service.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax8Type"/>
      </simpleType>
      <complexType name="customerInformationType">
        <sequence>
          <element minOccurs="0" name="customerNumber" type="tns:norwegianCustomerNumber"/>
          <element minOccurs="0" name="shortName" type="tns:shortName"/>
          <element minOccurs="0" name="profitCenter" type="tns:profitCenter"/>
          <element minOccurs="0" name="profitCenterText" type="tns:profitCenterText"/>
          <element minOccurs="0" name="productId" type="tns:productId"/>
          <element minOccurs="0" name="productShortName" type="tns:productShortName"/>
          <element minOccurs="0" name="executiveOfficerId" type="tns:executiveOfficerId"/>
          <element minOccurs="0" name="executiveOfficerName" type="tns:executiveOfficerName"/>
        </sequence>
      </complexType>
      <complexType name="customerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="customerIntId" type="tns:customerIntIdNumeric">
            <annotation>
              <documentation>The customer internal id.</documentation>
            </annotation>
          </element>
          <element name="customerNumber" type="tns:norwegianCustomerNumber">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="internationalCustomerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="internationalCustomerId" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer internal id.</documentation>
            </annotation>
          </element>
          <element name="internationalCustomerNumber" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyType">
        <annotation>
          <documentation>The product key consists of either (productNumber and
				sequenceNumber) OR productId.</documentation>
        </annotation>
        <choice>
          <element name="productKeyAlt1" type="tns:productKeyAlt1Type">
            <annotation>
              <documentation>Product key alternative 1 consists of product number
						and product sequence number.</documentation>
            </annotation>
          </element>
          <element name="productKeyAlt2" type="tns:productKeyAlt2Type">
            <annotation>
              <documentation>Product key alternative 2 consists of product id
						only.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyAlt1Type">
        <annotation>
          <documentation>Product key alternative 1 consists of the product
				number and the product sequence number.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productNumber" type="tns:productNumber">
            <annotation>
              <documentation>The product number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sequenceNumber" type="tns:sequenceNumber">
            <annotation>
              <documentation>The product sequence number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productKeyAlt2Type">
        <annotation>
          <documentation>Product key alternative 2 consists of the product id
				only.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="tns:productId">
            <annotation>
              <documentation>The product id.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="selfServiceKeyType">
        <annotation>
          <documentation>SelfServiceKey consist of alias and channel, and
				identifies a self service channel
				agreement.
				Both values must be set.</documentation>
        </annotation>
        <sequence>
          <element name="alias" type="tns:alias">
            <annotation>
              <documentation>Sets the alias that identifies the self service
						channel agreement.
						Either use value from numeric alias (for cash
						call channel) or
						alphanumeric alias (for internet bank, mobile
						bank, sms bank
						channel).</documentation>
            </annotation>
          </element>
          <element name="channel" type="tns:channel">
            <annotation>
              <documentation>Sets the self service channel.
						Valid values:
						WAP -
						Mobile bank channel agreement.
						INT - Internet bank channel
						agreement.
						SMS - Sms bank channel agreement.
						TLF - Cash call channel
						agreement.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="numericAlias">
        <annotation>
          <documentation>Numeric alias - which allows on all numerics as password and min and max is 11 digits.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{11}"/>
        </restriction>
      </simpleType>
      <simpleType name="pin">
        <annotation>
          <documentation>Numeric password for cash call.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,6}"/>
        </restriction>
      </simpleType>
      <simpleType name="password">
        <annotation>
          <documentation>Password for internet bank.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,11}"/>
        </restriction>
      </simpleType>
      <simpleType name="swiftAddress">
        <annotation>
          <documentation>ISO 9362 SWIFT address.&lt;br>
					4 characters: bank code (letters only)&lt;br>
					2 characters: ISO 3166-1 alpha-2 country code (letters only) &lt;br>
					2 characters: location code (letters and numbers) (if second charcter is "1", the receiver is a passive participant of the SWIFT network)&lt;br>
					3 characters: department code, optional ('XXX' for headquarters) (letters and numbers)</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customerinformation:v6" xmlns:tns="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customerinformation:v6" xmlns:corewscommon="urn:corews.enterprise.fs.evry.com:domain:common:v6" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Restricted entities in the customer information domain.</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v6"/>
      <simpleType name="unknown">
        <annotation>
          <documentation>Unknown value&lt;br>
				Valid values:&lt;br>
				UNKNOWN Unknown host value</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax15Type">
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="customerType">
        <annotation>
          <documentation>CustomerType&lt;br>
				Valid values: &lt;br>
				RETAIL 			Retail customer				&lt;br>
				CORPORATE 		Corporate customer			&lt;br>
				SELF_EMPLOYD 	Both/self employed customer</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax15Type">
          <enumeration value="RETAIL"/>
          <enumeration value="CORPORATE"/>
          <enumeration value="SELF_EMPLOYD"/>
        </restriction>
      </simpleType>
      <simpleType name="customerTypeOutput">
        <union memberTypes="tns:customerType tns:unknown"/>
      </simpleType>
      <simpleType name="languageCode">
        <annotation>
          <documentation>Language code&lt;br>
				Valid values: &lt;br>
				NOB 			Norwegian bokmål&lt;br>
				NNO 			Norwegian nynorsk	&lt;br></documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax3Type">
          <enumeration value="NOB"/>
          <enumeration value="NNO"/>
        </restriction>
      </simpleType>
      <simpleType name="languageCodeOutput">
        <union memberTypes="tns:languageCode tns:unknown"/>
      </simpleType>
      <simpleType name="creditRateCode">
        <annotation>
          <documentation>Credit rate code&lt;br>
				Valid values: &lt;br>
				GOOD 	Good customer			&lt;br>
				FAIR 	Fairly good customer	&lt;br>
				LESS 	Less good customer		&lt;br>
				BAD 	No good customer</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax5Type">
          <enumeration value="GOOD"/>
          <enumeration value="FAIR"/>
          <enumeration value="LESS"/>
          <enumeration value="BAD"/>
        </restriction>
      </simpleType>
      <simpleType name="creditRateCodeOutput">
        <union memberTypes="tns:creditRateCode tns:unknown"/>
      </simpleType>
      <simpleType name="executiveOfficerType">
        <annotation>
          <documentation>Executive officer type &lt;br>
				Valid values: &lt;br>
				EXEC_OFF 		Executive officer/customer responsible	&lt;br>
				CUST_SEG 		Customer segment						&lt;br>
				CONTACT 		Contact person for customer group</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="EXEC_OFF"/>
          <enumeration value="CUST_SEG"/>
          <enumeration value="CONTACT"/>
        </restriction>
      </simpleType>
      <simpleType name="executiveOfficerTypeOutput">
        <union memberTypes="tns:executiveOfficerType tns:unknown"/>
      </simpleType>
      <simpleType name="attributeTypeCode">
        <annotation>
          <documentation>Attribute type code&lt;br>
				Valid values: &lt;br>
				RATING 		Rating					&lt;br>
				CREDIT 		Credit quality tier		&lt;br>
				WEIGHTING 	Weighting category		&lt;br>
				RISK 		Risk weighting</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="RATING"/>
          <enumeration value="CREDIT"/>
          <enumeration value="WEIGHTING"/>
          <enumeration value="RISK"/>
        </restriction>
      </simpleType>
      <simpleType name="attributeTypeCodeOutput">
        <union memberTypes="tns:attributeTypeCode tns:unknown"/>
      </simpleType>
      <simpleType name="controlLevelCode">
        <annotation>
          <documentation><![CDATA[Anti money laundering control level code<br>
				Valid values: <br>
				NO 				Not controlled		<br>
				SIMPLIFIED 		Simplified control	<br>
				STANDARD 		Standard control	<br>
				ENHANCED 		Enhanced control	<br>
				STANDARDPLUS    Standard plus control]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax12Type">
          <enumeration value="NO"/>
          <enumeration value="SIMPLIFIED"/>
          <enumeration value="STANDARD"/>
          <enumeration value="ENHANCED"/>
          <enumeration value="STANDARDPLUS"/>
        </restriction>
      </simpleType>
      <simpleType name="controlLevelCodeOutput">
        <union memberTypes="tns:controlLevelCode tns:unknown"/>
      </simpleType>
      <simpleType name="shareCode">
        <annotation>
          <documentation>Relation share code&lt;br>
				Valid values: &lt;br>
				FULL 		Full time		&lt;br>
				PART 		Part time</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="FULL"/>
          <enumeration value="PART"/>
        </restriction>
      </simpleType>
      <simpleType name="shareCodeOutput">
        <union memberTypes="tns:shareCode tns:unknown"/>
      </simpleType>
      <simpleType name="connectionCode">
        <annotation>
          <documentation>Customer group connection code&lt;br>
				Valid values: &lt;br>
				MANUAL 			Manual</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="MANUAL"/>
        </restriction>
      </simpleType>
      <simpleType name="connectionCodeOutput">
        <annotation>
          <documentation>Customer group connection code&lt;br>
				Valid values: &lt;br>
				MANUAL 			Manual						&lt;br>
				AUTOMATIC		Automatic						
				UNKNOWN 		Unknown host value</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="MANUAL"/>
          <enumeration value="AUTOMATIC"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="archiveDocType">
        <annotation>
          <documentation>Archive document type. &lt;br>
				Valid values:&lt;br>
				PEP  			Political Exposed Person document&lt;br>
				CORP_CUST  		Corporate market customer messages	&lt;br>
				ACCT_AGR 		Customer account agreements			&lt;br>
				PROOF_ID		Proof of identity</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="PEP"/>
          <enumeration value="CORP_CUST"/>
          <enumeration value="ACCT_AGR"/>
          <enumeration value="PROOF_ID"/>
        </restriction>
      </simpleType>
      <simpleType name="archiveDocTypeOutput">
        <union memberTypes="tns:archiveDocType tns:unknown"/>
      </simpleType>
      <simpleType name="archiveDocGrpType">
        <annotation>
          <documentation>Archive document group type. &lt;br>
				Valid values:&lt;br>
				CUSTB  			Customer document bank employee</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="CUSTB"/>
        </restriction>
      </simpleType>
      <simpleType name="archiveDocGrpTypeOutput">
        <union memberTypes="tns:archiveDocGrpType tns:unknown"/>
      </simpleType>
      <simpleType name="archiveType">
        <annotation>
          <documentation>Archive type. &lt;br>
				Valid values:
				CONTENT_MGR			Content manager					&lt;br>
				PROOF_ID  			Proof of identity from archive</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax15Type">
          <enumeration value="CONTENT_MGR"/>
          <enumeration value="PROOF_ID"/>
        </restriction>
      </simpleType>
      <simpleType name="archiveTypeOutput">
        <union memberTypes="tns:archiveType tns:unknown"/>
      </simpleType>
      <simpleType name="nationalCodeType">
        <annotation>
          <documentation>National codes type. &lt;br>
				Valid values:&lt;br>
				DSTRC  	District/geographical/municipal code		&lt;br>		
				SECTO  	Sector code									&lt;br>
				INDST  	Industrial code/business code				&lt;br>
				SECOW	Sector code of owner</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="SECTO"/>
          <enumeration value="INDST"/>
          <enumeration value="DSTRC"/>
          <enumeration value="SECOW"/>
        </restriction>
      </simpleType>
      <simpleType name="nationalCodeTypeOutput">
        <union memberTypes="tns:nationalCodeType tns:unknown"/>
      </simpleType>
      <simpleType name="sectorOwnerCode">
        <annotation>
          <documentation>Sector owner code&lt;br>
				Valid values: &lt;br>
				NO 				No sector owner		&lt;br>															
				ASSOCIATED 		Associated company, meaning the bank owns a certain percentage of the company	&lt;br>
				SUBSIDIARY 		Subsidiary company, meaning a company controlled by a holding company</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="NO"/>
          <enumeration value="ASSOCIATED"/>
          <enumeration value="SUBSIDIARY"/>
        </restriction>
      </simpleType>
      <simpleType name="sectorOwnerCodeOutput">
        <union memberTypes="tns:sectorOwnerCode tns:unknown"/>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customer:v8" xmlns:tns="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customer:v8" xmlns:corewscommon="urn:corews.enterprise.fs.evry.com:domain:common:v6" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Entities in the customer domain.</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v6"/>
      <simpleType name="unknown">
        <annotation>
          <documentation>Unknown value.                              &lt;br>
                Valid values:       Description:            &lt;br>
                UNKNOWN             Unknown host value.     &lt;br></documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax15Type">
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="customerAgreementStatus">
        <annotation>
          <documentation>Does the customer have any of the agreement types ?                                                        &lt;br>  
             Host value:        Enum value:                     Description:                                            &lt;br>  
             '000'              HAS_ACCOUNT_AGREEMENT           The customer has RK,UL,VR or GA account agreements.     &lt;br>                  
             '010'              HAS_AUTH_AGREEMENT              The Customer has a KE_Autent agreement.                 &lt;br>  
             '020'              HAS_CARD_AGREEMENT              The Customer has a Card agreement.
              All other values  UNKNOWN</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax25Type">
          <enumeration value="HAS_ACCOUNT_AGREEMENT"/>
          <enumeration value="HAS_AUTH_AGREEMENT"/>
          <enumeration value="HAS_CARD_AGREEMENT"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="shipmentInputType">
        <annotation>
          <documentation>Host value:        Enum value:                     Description:                                            
             'A'                A_POSTAGE                       Postal priority A if not overruled in distribution system.  &lt;br>
             'B'                B_POSTAGE                       Postal priority B if not overruled in distribution system.</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="A_POSTAGE"/>
          <enumeration value="B_POSTAGE"/>
        </restriction>
      </simpleType>
      <simpleType name="shipmentOutputType">
        <union memberTypes="tns:shipmentInputType tns:unknown"/>
      </simpleType>
      <simpleType name="languageCode">
        <annotation>
          <documentation>Language code                                           &lt;br>  
                Valid values:   Description:                            &lt;br>  
                NOB             Norwegian bokmål    (host vale "B")     &lt;br>  
                NNO             Norwegian nynorsk   (host vale "N")</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax3Type">
          <enumeration value="NOB"/>
          <enumeration value="NNO"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianLanguageCode">
        <annotation>
          <documentation>Host value:        Enum value:                     Description:                                    &lt;br>  
             'B'                STD_NORWEGIAN                   Norwegian language 'bokmål' is preferred.       &lt;br>  
             'N'                NEW_NORWEGIAN                   Norwegian language 'nynorsk' is preferred.      &lt;br>  
              All other values  UNKNOWN</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax15Type">
          <enumeration value="STD_NORWEGIAN"/>
          <enumeration value="NEW_NORWEGIAN"/>
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="creditRateCodeInputType">
        <annotation>
          <documentation>Enum value:     Description:                                &lt;br>      
                GOOD            Good customer           (host vale "0").    &lt;br>  
                FAIR            Fairly good customer    (host vale "1").    &lt;br>  
                LESS            Less good customer      (host vale "2").    &lt;br>  
                BAD             No good customer        (host vale "3").</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax5Type">
          <enumeration value="GOOD"/>
          <enumeration value="FAIR"/>
          <enumeration value="LESS"/>
          <enumeration value="BAD"/>
        </restriction>
      </simpleType>
      <simpleType name="creditRateCodeOutputType">
        <union memberTypes="tns:creditRateCodeInputType tns:unknown"/>
      </simpleType>
      <simpleType name="attributeTypeCode">
        <annotation>
          <documentation>Attribute type code.                                                &lt;br>      
                Valid values:       Description:                                    &lt;br>      
                RATING              Rating                  (host vale "RATIN")     &lt;br>      
                CREDIT              Credit quality tier     (host vale "KRETR")     &lt;br>      
                WEIGHTING           Weighting category      (host vale "VEKAT")     &lt;br>      
                RISK                Risk weighting          (host vale "RISVE")</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="RATING"/>
          <enumeration value="CREDIT"/>
          <enumeration value="WEIGHTING"/>
          <enumeration value="RISK"/>
        </restriction>
      </simpleType>
      <simpleType name="sectorOwnerCode">
        <annotation>
          <documentation>Sector owner code tells which relation the customer has to the bank.                            &lt;br>
                Valid values:   Description:                                                                    &lt;br>                        
                NO              No sector owner                                                                 &lt;br>                      
                ASSOCIATED      Associated company, meaning the bank owns a certain percentage of the company   &lt;br>
                SUBSIDIARY      Subsidiary company, meaning a company controlled by a holding company</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="NO"/>
          <enumeration value="ASSOCIATED"/>
          <enumeration value="SUBSIDIARY"/>
        </restriction>
      </simpleType>
      <simpleType name="sectorOwnerCodeOutput">
        <union memberTypes="tns:sectorOwnerCode tns:unknown"/>
      </simpleType>
      <simpleType name="mailPriority">
        <annotation>
          <documentation>Sets mail priority.                         &lt;br>
                Valid values:       Description:            &lt;br>
                A                   First priority mail     &lt;br>
                B                   Second priority mail</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax1Type">
          <enumeration value="A"/>
          <enumeration value="B"/>
        </restriction>
      </simpleType>
      <simpleType name="customerInputType">
        <annotation>
          <documentation>Defines type of customer.                                           &lt;br>          
                Valid values:   Description:                                    &lt;br>  
                RETAIL          Retail customer             (host vale "P")     &lt;br>
                CORPORATE       Corporate customer          (host vale "N")</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax15Type">
          <enumeration value="RETAIL"/>
          <enumeration value="CORPORATE"/>
        </restriction>
      </simpleType>
      <complexType name="incomeType">
        <annotation>
          <documentation>Contains income specific information.</documentation>
        </annotation>
        <sequence>
          <element name="incomeAmount" type="corewscommon:amount">
            <annotation>
              <documentation>Yearly income amount.</documentation>
            </annotation>
          </element>
          <element name="incomeYear" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>Income year.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="aMLStatusType">
        <annotation>
          <documentation><![CDATA[The customers AML status    <br>          
                Valid values:   Description:<br>  
                NOT_CHECKED     Not checked <br>
                OLD_JURIDICAL   Approved as juridical before current AML check <br>
                APPROVED        Approved <br>
                REJECTED        Rejected manually <br>
                RISK_APPROVED   Risk check passed <br>
                NAME_APPROVED   Name check passed <br>
                IN_PROCESS      AML checking in process <br> 
                NAMELIST_HIT    Name list hit]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax15Type">
          <enumeration value="NOT_CHECKED"/>
          <enumeration value="OLD_JURIDICAL"/>
          <enumeration value="APPROVED"/>
          <enumeration value="REJECTED"/>
          <enumeration value="RISK_APPROVED"/>
          <enumeration value="NAME_APPROVED"/>
          <enumeration value="IN_PROCESS"/>
          <enumeration value="NAMELIST_HIT"/>
        </restriction>
      </simpleType>
      <simpleType name="aMLStatusTypeOutput">
        <union memberTypes="tns:aMLStatusType tns:unknown"/>
      </simpleType>
      <simpleType name="debtCollectionStatus">
        <annotation>
          <documentation>Debit Collection Code
        Valid values: &lt;br>
        NODEBTCOLLECTION No debt collection(account not in arrears) &lt;br>
        TRANSFEREDTODEBTCOLLECTOR Loan sent to debt collection &lt;br>
        TRANSFERTODEBTCOLLECTOR Loan sent to debt collection automatically. &lt;br>
        NOTRANSFERTODEBTCOLLECTOR Bank has decided that this loan is not to be sent to debt collection for now. &lt;br>
        TRANSFERAUTOMATICTODEBTCOLLECTOR Loan sent to debt collection automatically. Only possible in the periode fra 41 days to 55 days after arrears first occurred.</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax32Type">
          <enumeration value="NODEBTCOLLECTION"/>
          <enumeration value="TRANSFEREDTODEBTCOLLECTOR"/>
          <enumeration value="TRANSFERTODEBTCOLLECTOR"/>
          <enumeration value="NOTRANSFERTODEBTCOLLECTOR"/>
          <enumeration value="TRANSFERAUTOMATICTODEBTCOLLECTOR"/>
        </restriction>
      </simpleType>
      <simpleType name="debtCollectionStatusOutput">
        <union memberTypes="tns:debtCollectionStatus tns:unknown"/>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:corews.enterprise.fs.evry.com:domain:common:v4" xmlns:tns="urn:corews.enterprise.fs.evry.com:domain:common:v4" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <simpleType name="alphaNumMax1Type">
        <annotation>
          <documentation>1 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax2Type">
        <annotation>
          <documentation>2 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax3Type">
        <annotation>
          <documentation>3 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax4Type">
        <annotation>
          <documentation>4 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax5Type">
        <annotation>
          <documentation>5 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax6Type">
        <annotation>
          <documentation>6 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax7Type">
        <annotation>
          <documentation>7 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax8Type">
        <annotation>
          <documentation>8 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax9Type">
        <annotation>
          <documentation>9 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax10Type">
        <annotation>
          <documentation>10 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax11Type">
        <annotation>
          <documentation>11 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax12Type">
        <annotation>
          <documentation>12 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax13Type">
        <annotation>
          <documentation>13 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax15Type">
        <annotation>
          <documentation>15 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax16Type">
        <annotation>
          <documentation>16 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax17Type">
        <annotation>
          <documentation>17 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="17"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax18Type">
        <annotation>
          <documentation>18 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax19Type">
        <annotation>
          <documentation>19 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="19"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax20Type">
        <annotation>
          <documentation>20 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="20"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax22Type">
        <annotation>
          <documentation>22 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="22"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax23Type">
        <annotation>
          <documentation>23 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="23"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax25Type">
        <annotation>
          <documentation>25 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="25"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax26Type">
        <annotation>
          <documentation>26 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="26"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax27Type">
        <annotation>
          <documentation>27 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="27"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax30Type">
        <annotation>
          <documentation>30 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax32Type">
        <annotation>
          <documentation>32 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="32"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax34Type">
        <annotation>
          <documentation>34 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax35Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax36Type">
        <annotation>
          <documentation>36 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="36"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax42Type">
        <annotation>
          <documentation>42 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="42"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax50Type">
        <annotation>
          <documentation>50 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="50"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax60Type">
        <annotation>
          <documentation>60 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="60"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax70Type">
        <annotation>
          <documentation>70 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="70"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax78Type">
        <annotation>
          <documentation>78 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="78"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax80Type">
        <annotation>
          <documentation>80 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="80"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax120Type">
        <annotation>
          <documentation>120 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="120"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax140Type">
        <annotation>
          <documentation>140 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="140"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax200Type">
        <annotation>
          <documentation>200 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="200"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax220Type">
        <annotation>
          <documentation>220 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="220"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax250Type">
        <annotation>
          <documentation>250 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="250"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax255Type">
        <annotation>
          <documentation>255 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="255"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax256Type">
        <annotation>
          <documentation>256 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="256"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax400Type">
        <annotation>
          <documentation>400 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="400"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax1Type">
        <annotation>
          <documentation>Integer value with max length 1</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax2Type">
        <annotation>
          <documentation>Integer value with max length 2</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax3Type">
        <annotation>
          <documentation>Integer value with max length 3</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax4Type">
        <annotation>
          <documentation>Integer value with max length 4</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax5Type">
        <annotation>
          <documentation>Integer value with max length 5</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax6Type">
        <annotation>
          <documentation>Integer value with max length 6</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax7Type">
        <annotation>
          <documentation>Integer value with max length 7</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax8Type">
        <annotation>
          <documentation>Integer value with max length 8</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax9Type">
        <annotation>
          <documentation>Integer value with max length 9</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="intMin1Max999Type">
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax9Type">
        <annotation>
          <documentation>Long value with max length 9.</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax10Type">
        <annotation>
          <documentation>Long value with max length 10</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax11Type">
        <annotation>
          <documentation>Long value with max length 11</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax12Type">
        <annotation>
          <documentation>Long value with max length 12</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax13Type">
        <annotation>
          <documentation>Long value with max length 13</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax16Type">
        <annotation>
          <documentation>Long value with max length 16</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax18Type">
        <annotation>
          <documentation>Long value with max length 18</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax100Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax40Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="40"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax240Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="240"/>
        </restriction>
      </simpleType>
      <simpleType name="iban">
        <annotation>
          <documentation>IBAN number - International Bank Account Number, comprising a country code, two check digits and a basic bank account-number (BBAN), eg. NO5928012192284.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="5"/>
          <maxLength value="34"/>
          <pattern value="[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianAccountNumber">
        <annotation>
          <documentation>Norwegian account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianCustomerNumber">
        <annotation>
          <documentation>Norwegian customer number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="regBankNumber">
        <annotation>
          <documentation>Reg bank number</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([0-9])*"/>
          <minLength value="4"/>
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntId">
        <annotation>
          <documentation>Customer internal id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="userId">
        <annotation>
          <documentation>User id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntIdNumeric">
        <annotation>
          <documentation>Numeric customer internal id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="amount">
        <annotation>
          <documentation>Decimal value of max length 18 with 3 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="18"/>
          <fractionDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="rate">
        <annotation>
          <documentation>Decimal value of max length 9 with 5 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="9"/>
          <fractionDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intId">
        <annotation>
          <documentation>Internal generated id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="productNumber">
        <annotation>
          <documentation>Product number</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="sequenceNumber">
        <annotation>
          <documentation>Sequence number.</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="url">
        <annotation>
          <documentation>URL</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1024"/>
        </restriction>
      </simpleType>
      <simpleType name="ratio">
        <annotation>
          <documentation>Ratio</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode5">
        <annotation>
          <documentation>Alphanumeric value with length 5</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="organisationUnitStrictType">
        <annotation>
          <documentation>Permitted values:'PC' - Profit Centers;'OU' - Organization Units</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PC"/>
          <enumeration value="OU"/>
        </restriction>
      </simpleType>
      <simpleType name="month">
        <annotation>
          <documentation>Month 1-12</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="positiveIntegerMax11Type">
        <annotation>
          <documentation>Positive(>0) integer value with max length 11</documentation>
        </annotation>
        <restriction base="positiveInteger">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="executiveOfficerId">
        <annotation>
          <documentation>Executive officer identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="executiveOfficerName">
        <annotation>
          <documentation>Executive officer name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="shortName">
        <annotation>
          <documentation>Short name of customer</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="productId">
        <annotation>
          <documentation>Product identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax18Type"/>
      </simpleType>
      <simpleType name="productShortName">
        <annotation>
          <documentation>Product short name - 6 characters</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax6Type"/>
      </simpleType>
      <simpleType name="productSequenceNumber">
        <annotation>
          <documentation>Product sequence number</documentation>
        </annotation>
        <restriction base="tns:sequenceNumber"/>
      </simpleType>
      <simpleType name="productName">
        <annotation>
          <documentation>Product name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="productIntId">
        <annotation>
          <documentation>Product internal id</documentation>
        </annotation>
        <restriction base="tns:intId"/>
      </simpleType>
      <simpleType name="profitCenter">
        <annotation>
          <documentation>Profit center id</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="profitCenterText">
        <annotation>
          <documentation>Profit center text</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="alias">
        <annotation>
          <documentation>Sets the alias that identifies the self service channel agreement.
				Either use value from numeric alias (for cash call channel) or
				alphanumeric alias (for internet bank, mobile bank, sms bank channel).</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="channel">
        <annotation>
          <documentation>Sets the self service channel.
				Valid values:
				WAP - Mobile bank channel agreement.
				INT - Internet bank channel agreement.
				SMS - Sms bank channel agreement.
				TLF - Cash call channel agreement.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax5Type">
          <enumeration value="WAP"/>
          <enumeration value="INT"/>
          <enumeration value="SMS"/>
          <enumeration value="TLF"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyCode">
        <annotation>
          <documentation>Currency code (ISO 4217)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([A-Z])*"/>
          <minLength value="3"/>
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationFactor">
        <annotation>
          <documentation>Interest calculation factor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationDivisor">
        <annotation>
          <documentation>Interest calculation divisor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="initialFunctionId">
        <annotation>
          <documentation>Application calling a service.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax8Type"/>
      </simpleType>
      <complexType name="customerInformationType">
        <sequence>
          <element minOccurs="0" name="customerNumber" type="tns:norwegianCustomerNumber"/>
          <element minOccurs="0" name="shortName" type="tns:shortName"/>
          <element minOccurs="0" name="profitCenter" type="tns:profitCenter"/>
          <element minOccurs="0" name="profitCenterText" type="tns:profitCenterText"/>
          <element minOccurs="0" name="productId" type="tns:productId"/>
          <element minOccurs="0" name="productShortName" type="tns:productShortName"/>
          <element minOccurs="0" name="executiveOfficerId" type="tns:executiveOfficerId"/>
          <element minOccurs="0" name="executiveOfficerName" type="tns:executiveOfficerName"/>
        </sequence>
      </complexType>
      <complexType name="customerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="customerIntId" type="tns:customerIntIdNumeric">
            <annotation>
              <documentation>The customer internal id.</documentation>
            </annotation>
          </element>
          <element name="customerNumber" type="tns:norwegianCustomerNumber">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="internationalCustomerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="internationalCustomerId" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer internal id.</documentation>
            </annotation>
          </element>
          <element name="internationalCustomerNumber" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyType">
        <annotation>
          <documentation>The product key consists of either (productNumber and
				sequenceNumber) OR productId.</documentation>
        </annotation>
        <choice>
          <element name="productKeyAlt1" type="tns:productKeyAlt1Type">
            <annotation>
              <documentation>Product key alternative 1 consists of product number
						and product sequence number.</documentation>
            </annotation>
          </element>
          <element name="productKeyAlt2" type="tns:productKeyAlt2Type">
            <annotation>
              <documentation>Product key alternative 2 consists of product id
						only.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyAlt1Type">
        <annotation>
          <documentation>Product key alternative 1 consists of the product
				number and the product sequence number.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productNumber" type="tns:productNumber">
            <annotation>
              <documentation>The product number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sequenceNumber" type="tns:sequenceNumber">
            <annotation>
              <documentation>The product sequence number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productKeyAlt2Type">
        <annotation>
          <documentation>Product key alternative 2 consists of the product id
				only.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="tns:productId">
            <annotation>
              <documentation>The product id.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="selfServiceKeyType">
        <annotation>
          <documentation>SelfServiceKey consist of alias and channel, and
				identifies a self service channel
				agreement.
				Both values must be set.</documentation>
        </annotation>
        <sequence>
          <element name="alias" type="tns:alias">
            <annotation>
              <documentation>Sets the alias that identifies the self service
						channel agreement.
						Either use value from numeric alias (for cash
						call channel) or
						alphanumeric alias (for internet bank, mobile
						bank, sms bank
						channel).</documentation>
            </annotation>
          </element>
          <element name="channel" type="tns:channel">
            <annotation>
              <documentation>Sets the self service channel.
						Valid values:
						WAP -
						Mobile bank channel agreement.
						INT - Internet bank channel
						agreement.
						SMS - Sms bank channel agreement.
						TLF - Cash call channel
						agreement.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="numericAlias">
        <annotation>
          <documentation>Numeric alias - which allows on all numerics as password and min and max is 11 digits.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{11}"/>
        </restriction>
      </simpleType>
      <simpleType name="pin">
        <annotation>
          <documentation>Numeric password for cash call.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,6}"/>
        </restriction>
      </simpleType>
      <simpleType name="password">
        <annotation>
          <documentation>Password for internet bank.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{4,11}"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cus.corews.enterprise.fs.evry.com:domain:retailcustomer:v4" xmlns:tns="urn:srv.cus.corews.enterprise.fs.evry.com:domain:retailcustomer:v4" xmlns:corewscommon="urn:corews.enterprise.fs.evry.com:domain:common:v4" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Entities in the retail customer domain.</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v4"/>
      <simpleType name="unknown">
        <annotation>
          <documentation>Unknown value. 								&lt;br>
				Valid values:		Description:			&lt;br>
				UNKNOWN 			Unknown host value.		&lt;br></documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax15Type">
          <enumeration value="UNKNOWN"/>
        </restriction>
      </simpleType>
      <simpleType name="maritalStatusInputType">
        <annotation>
          <documentation><![CDATA[The marital status of the customer.														<br>
				Valid values: 			Description:													<br>
	            MARRIED					Married	                                    (host value "G").  	<br>				
				UNMARRIED				Unmarried/single                            (host value "U").  	<br>				
				WIDOW_WIDOWER			Widow or widower after marriage             (host value "E").  	<br>				
				REGISTERED_PARTNER		Partner or equal sex marriage               (host value "P").  	<br>				
				COHABITATION			Cohabitor                                   (host value "S").  	<br>				
				SEPARATED				Separated from marriage                     (host value "Y").  	<br>				
				DIVORCED				Divorced after marriage or partnership      (host value "X").  	<br>				
				WIDOW_WIDOWER_PARTNER	Widow or widower after registered partner	(host value "F"). 	<br>				 
				SEPARATED_PARTNER		Separated after registered partner	        (host value "Z").]]]]>><![CDATA[</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax25Type">
          <enumeration value="MARRIED"/>
          <enumeration value="UNMARRIED"/>
          <enumeration value="WIDOW_WIDOWER"/>
          <enumeration value="REGISTERED_PARTNER"/>
          <enumeration value="COHABITATION"/>
          <enumeration value="SEPARATED"/>
          <enumeration value="DIVORCED"/>
          <enumeration value="WIDOW_WIDOWER_PARTNER"/>
          <enumeration value="SEPARATED_PARTNER"/>
        </restriction>
      </simpleType>
      <simpleType name="maritalStatusOutputType">
        <union memberTypes="tns:maritalStatusInputType tns:unknown"/>
      </simpleType>
      <simpleType name="genderInputType">
        <annotation>
          <documentation>Gender.										&lt;br>			
				Valid values: 	Description:				&lt;br>
				MALE 			Male	(host vale "M").	&lt;br>
				FEMALE 			Female	(host vale "K").</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax10Type">
          <enumeration value="MALE"/>
          <enumeration value="FEMALE"/>
        </restriction>
      </simpleType>
      <simpleType name="genderOutputType">
        <union memberTypes="tns:genderInputType tns:unknown"/>
      </simpleType>
      <simpleType name="maritalStatusTextOutputType">
        <annotation>
          <documentation>The marital status of the customer.</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax25Type">
          <enumeration value="Married"/>
          <enumeration value="Unmarried"/>
          <enumeration value="Widow/Widower"/>
          <enumeration value="Same-sex marriage"/>
          <enumeration value="Live-in partner"/>
          <enumeration value="Separated"/>
          <enumeration value="Divorced"/>
          <enumeration value="Not filled in"/>
          <enumeration value="Unknown"/>
        </restriction>
      </simpleType>
      <simpleType name="genderCodeTextOutputType">
        <annotation>
          <documentation>The gender of the customer.</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax25Type">
          <enumeration value="Male"/>
          <enumeration value="Female"/>
          <enumeration value="Not known/applicable"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:corews.enterprise.fs.evry.com:domain:common:v3" xmlns:tns="urn:corews.enterprise.fs.evry.com:domain:common:v3" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <simpleType name="alphaNumMax1Type">
        <annotation>
          <documentation>1 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax2Type">
        <annotation>
          <documentation>2 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax3Type">
        <annotation>
          <documentation>3 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax4Type">
        <annotation>
          <documentation>4 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax5Type">
        <annotation>
          <documentation>5 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax6Type">
        <annotation>
          <documentation>6 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax7Type">
        <annotation>
          <documentation>7 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax8Type">
        <annotation>
          <documentation>8 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax9Type">
        <annotation>
          <documentation>9 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax10Type">
        <annotation>
          <documentation>10 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax11Type">
        <annotation>
          <documentation>11 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax12Type">
        <annotation>
          <documentation>12 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax13Type">
        <annotation>
          <documentation>13 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax15Type">
        <annotation>
          <documentation>15 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="15"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax16Type">
        <annotation>
          <documentation>16 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax17Type">
        <annotation>
          <documentation>17 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="17"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax18Type">
        <annotation>
          <documentation>18 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax19Type">
        <annotation>
          <documentation>19 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="19"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax20Type">
        <annotation>
          <documentation>20 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="20"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax22Type">
        <annotation>
          <documentation>22 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="22"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax23Type">
        <annotation>
          <documentation>23 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="23"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax25Type">
        <annotation>
          <documentation>25 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="25"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax26Type">
        <annotation>
          <documentation>26 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="26"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax27Type">
        <annotation>
          <documentation>27 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="27"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax30Type">
        <annotation>
          <documentation>30 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax32Type">
        <annotation>
          <documentation>32 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="32"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax34Type">
        <annotation>
          <documentation>34 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax35Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax36Type">
        <annotation>
          <documentation>36 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="36"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax42Type">
        <annotation>
          <documentation>42 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="42"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax50Type">
        <annotation>
          <documentation>50 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="50"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax60Type">
        <annotation>
          <documentation>60 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="60"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax70Type">
        <annotation>
          <documentation>70 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="70"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax78Type">
        <annotation>
          <documentation>78 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="78"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax80Type">
        <annotation>
          <documentation>80 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="80"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax120Type">
        <annotation>
          <documentation>120 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="120"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax140Type">
        <annotation>
          <documentation>140 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="140"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax200Type">
        <annotation>
          <documentation>200 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="200"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax220Type">
        <annotation>
          <documentation>220 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="220"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax250Type">
        <annotation>
          <documentation>250 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="250"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax255Type">
        <annotation>
          <documentation>255 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="255"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax256Type">
        <annotation>
          <documentation>256 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="256"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax400Type">
        <annotation>
          <documentation>400 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="400"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax1Type">
        <annotation>
          <documentation>Integer value with max length 1</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax2Type">
        <annotation>
          <documentation>Integer value with max length 2</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax3Type">
        <annotation>
          <documentation>Integer value with max length 3</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax4Type">
        <annotation>
          <documentation>Integer value with max length 4</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax5Type">
        <annotation>
          <documentation>Integer value with max length 5</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax6Type">
        <annotation>
          <documentation>Integer value with max length 6</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax7Type">
        <annotation>
          <documentation>Integer value with max length 7</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax8Type">
        <annotation>
          <documentation>Integer value with max length 8</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="intMax9Type">
        <annotation>
          <documentation>Integer value with max length 9</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="intMin1Max999Type">
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax10Type">
        <annotation>
          <documentation>Long value with max length 10</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax11Type">
        <annotation>
          <documentation>Long value with max length 11</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax12Type">
        <annotation>
          <documentation>Long value with max length 12</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax13Type">
        <annotation>
          <documentation>Long value with max length 13</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="13"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax16Type">
        <annotation>
          <documentation>Long value with max length 16</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="16"/>
        </restriction>
      </simpleType>
      <simpleType name="longMax18Type">
        <annotation>
          <documentation>Long value with max length 18</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax100Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax40Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="40"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumMax240Type">
        <annotation>
          <documentation>35 CHAR length string</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="240"/>
        </restriction>
      </simpleType>
      <simpleType name="iban">
        <annotation>
          <documentation>IBAN number - International Bank Account Number, comprising a country code, two check digits and a basic bank account-number (BBAN), eg. NO5928012192284.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="5"/>
          <maxLength value="34"/>
          <pattern value="[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianAccountNumber">
        <annotation>
          <documentation>Norwegian account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="norwegianCustomerNumber">
        <annotation>
          <documentation>Norwegian customer number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="11"/>
          <maxLength value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="regBankNumber">
        <annotation>
          <documentation>Reg bank number</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([0-9])*"/>
          <minLength value="4"/>
          <maxLength value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntId">
        <annotation>
          <documentation>Customer internal id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="userId">
        <annotation>
          <documentation>User id</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="customerIntIdNumeric">
        <annotation>
          <documentation>Numeric customer internal id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="amount">
        <annotation>
          <documentation>Decimal value of max length 18 with 3 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="18"/>
          <fractionDigits value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="rate">
        <annotation>
          <documentation>Decimal value of max length 9 with 5 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="9"/>
          <fractionDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="intId">
        <annotation>
          <documentation>Internal generated id</documentation>
        </annotation>
        <restriction base="long">
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="productNumber">
        <annotation>
          <documentation>Product number</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="sequenceNumber">
        <annotation>
          <documentation>Sequence number.</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="url">
        <annotation>
          <documentation>URL</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="1024"/>
        </restriction>
      </simpleType>
      <simpleType name="ratio">
        <annotation>
          <documentation>Ratio</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="3"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="typeCode5">
        <annotation>
          <documentation>Alphanumeric value with length 5</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="5"/>
          <pattern value="([A-Z0-9\-])+"/>
        </restriction>
      </simpleType>
      <simpleType name="organisationUnitStrictType">
        <annotation>
          <documentation>Permitted values:'PC' - Profit Centers;'OU' - Organization Units</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PC"/>
          <enumeration value="OU"/>
        </restriction>
      </simpleType>
      <simpleType name="month">
        <annotation>
          <documentation>Month 1-12</documentation>
        </annotation>
        <restriction base="int">
          <totalDigits value="2"/>
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="positiveIntegerMax11Type">
        <annotation>
          <documentation>Positive(>0) integer value with max length 11</documentation>
        </annotation>
        <restriction base="positiveInteger">
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="executiveOfficerId">
        <annotation>
          <documentation>Executive officer identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="executiveOfficerName">
        <annotation>
          <documentation>Executive officer name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="shortName">
        <annotation>
          <documentation>Short name of customer</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="productId">
        <annotation>
          <documentation>Product identification</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax18Type"/>
      </simpleType>
      <simpleType name="productShortName">
        <annotation>
          <documentation>Product short name - 6 characters</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax6Type"/>
      </simpleType>
      <simpleType name="productSequenceNumber">
        <annotation>
          <documentation>Product sequence number</documentation>
        </annotation>
        <restriction base="tns:sequenceNumber"/>
      </simpleType>
      <simpleType name="productName">
        <annotation>
          <documentation>Product name</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="productIntId">
        <annotation>
          <documentation>Product internal id</documentation>
        </annotation>
        <restriction base="tns:intId"/>
      </simpleType>
      <simpleType name="profitCenter">
        <annotation>
          <documentation>Profit center id</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax15Type"/>
      </simpleType>
      <simpleType name="profitCenterText">
        <annotation>
          <documentation>Profit center text</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="alias">
        <annotation>
          <documentation>Sets the alias that identifies the self service channel agreement.
				Either use value from numeric alias (for cash call channel) or
				alphanumeric alias (for internet bank, mobile bank, sms bank channel).</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax35Type"/>
      </simpleType>
      <simpleType name="channel">
        <annotation>
          <documentation>Sets the self service channel.
				Valid values:
				WAP - Mobile bank channel agreement.
				INT - Internet bank channel agreement.
				SMS - Sms bank channel agreement.
				TLF - Cash call channel agreement.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax5Type">
          <enumeration value="WAP"/>
          <enumeration value="INT"/>
          <enumeration value="SMS"/>
          <enumeration value="TLF"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyCode">
        <annotation>
          <documentation>Currency code (ISO 4217)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="([A-Z])*"/>
          <minLength value="3"/>
          <maxLength value="3"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationFactor">
        <annotation>
          <documentation>Interest calculation factor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="interestCalculationDivisor">
        <annotation>
          <documentation>Interest calculation divisor.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="360"/>
          <enumeration value="365"/>
          <enumeration value="366"/>
        </restriction>
      </simpleType>
      <simpleType name="initialFunctionId">
        <annotation>
          <documentation>Application calling a service.</documentation>
        </annotation>
        <restriction base="tns:alphaNumMax8Type"/>
      </simpleType>
      <complexType name="customerInformationType">
        <sequence>
          <element minOccurs="0" name="customerNumber" type="tns:norwegianCustomerNumber"/>
          <element minOccurs="0" name="shortName" type="tns:shortName"/>
          <element minOccurs="0" name="profitCenter" type="tns:profitCenter"/>
          <element minOccurs="0" name="profitCenterText" type="tns:profitCenterText"/>
          <element minOccurs="0" name="productId" type="tns:productId"/>
          <element minOccurs="0" name="productShortName" type="tns:productShortName"/>
          <element minOccurs="0" name="executiveOfficerId" type="tns:executiveOfficerId"/>
          <element minOccurs="0" name="executiveOfficerName" type="tns:executiveOfficerName"/>
        </sequence>
      </complexType>
      <complexType name="customerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="customerIntId" type="tns:customerIntIdNumeric">
            <annotation>
              <documentation>The customer internal id.</documentation>
            </annotation>
          </element>
          <element name="customerNumber" type="tns:norwegianCustomerNumber">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="internationalCustomerKeyType">
        <annotation>
          <documentation>CustomerKey can be supplied by either the customer's
				internal id or as the customer's customer number.</documentation>
        </annotation>
        <choice>
          <element name="internationalCustomerId" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer internal id.</documentation>
            </annotation>
          </element>
          <element name="internationalCustomerNumber" type="tns:alphaNumMax35Type">
            <annotation>
              <documentation>The international customer number.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyType">
        <annotation>
          <documentation>The product key consists of either (productNumber and
				sequenceNumber) OR productId.</documentation>
        </annotation>
        <choice>
          <element name="productKeyAlt1" type="tns:productKeyAlt1Type">
            <annotation>
              <documentation>Product key alternative 1 consists of product number
						and product sequence number.</documentation>
            </annotation>
          </element>
          <element name="productKeyAlt2" type="tns:productKeyAlt2Type">
            <annotation>
              <documentation>Product key alternative 2 consists of product id
						only.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productKeyAlt1Type">
        <annotation>
          <documentation>Product key alternative 1 consists of the product
				number and the product sequence number.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productNumber" type="tns:productNumber">
            <annotation>
              <documentation>The product number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sequenceNumber" type="tns:sequenceNumber">
            <annotation>
              <documentation>The product sequence number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productKeyAlt2Type">
        <annotation>
          <documentation>Product key alternative 2 consists of the product id
				only.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="tns:productId">
            <annotation>
              <documentation>The product id.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="selfServiceKeyType">
        <annotation>
          <documentation>SelfServiceKey consist of alias and channel, and
				identifies a self service channel
				agreement.
				Both values must be set.</documentation>
        </annotation>
        <sequence>
          <element name="alias" type="tns:alias">
            <annotation>
              <documentation>Sets the alias that identifies the self service
						channel agreement.
						Either use value from numeric alias (for cash
						call channel) or
						alphanumeric alias (for internet bank, mobile
						bank, sms bank
						channel).</documentation>
            </annotation>
          </element>
          <element name="channel" type="tns:channel">
            <annotation>
              <documentation>Sets the self service channel.
						Valid values:
						WAP -
						Mobile bank channel agreement.
						INT - Internet bank channel
						agreement.
						SMS - Sms bank channel agreement.
						TLF - Cash call channel
						agreement.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="numericAlias">
        <annotation>
          <documentation>Numeric alias - which allows on all numerics as password and min and max is 11 digits.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{11}"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cus.corews.enterprise.fs.evry.com:domain:commoncustomer:v2" xmlns:tns="urn:srv.cus.corews.enterprise.fs.evry.com:domain:commoncustomer:v2" xmlns:corewscommon="urn:corews.enterprise.fs.evry.com:domain:common:v3" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Entities in the address domain.</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v3"/>
      <simpleType name="shortName19">
        <annotation>
          <documentation>Shortened form of name</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax19Type"/>
      </simpleType>
      <simpleType name="shortName26">
        <annotation>
          <documentation>Shortened form of name</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax26Type"/>
      </simpleType>
      <simpleType name="customerType">
        <annotation>
          <documentation>Customer type</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax25Type">
          <enumeration value="Personal"/>
          <enumeration value="Corporate"/>
          <enumeration value="Personal and Corporate"/>
        </restriction>
      </simpleType>
      <simpleType name="customerTypeSearch">
        <annotation>
          <documentation>Customer type</documentation>
        </annotation>
        <restriction base="corewscommon:alphaNumMax25Type">
          <enumeration value="Personal"/>
          <enumeration value="Corporate"/>
        </restriction>
      </simpleType>
      <simpleType name="percentage">
        <annotation>
          <documentation>Decimal value of max length 5 with 2 decimals</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="5"/>
          <fractionDigits value="2"/>
        </restriction>
      </simpleType>
    </schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customer:v20_2" xmlns:tns="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customer:v20_2" xmlns:retailcustomerv4="urn:srv.cus.corews.enterprise.fs.evry.com:domain:retailcustomer:v4" xmlns:customerv8="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customer:v8" xmlns:customerinformationv6="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customerinformation:v6" xmlns:corewscommon="urn:corews.enterprise.fs.evry.com:domain:common:v10" xmlns:commoncustomerv2="urn:srv.cus.corews.enterprise.fs.evry.com:domain:commoncustomer:v2" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Types for the CUSSCustomerService.</documentation>
      </annotation>
      <import namespace="urn:corews.enterprise.fs.evry.com:domain:common:v10"/>
      <import namespace="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customerinformation:v6"/>
      <import namespace="urn:srv.cus.corews.enterprise.fs.evry.com:domain:customer:v8"/>
      <import namespace="urn:srv.cus.corews.enterprise.fs.evry.com:domain:retailcustomer:v4"/>
      <import namespace="urn:srv.cus.corews.enterprise.fs.evry.com:domain:commoncustomer:v2"/>
      <complexType name="customerProspectCreateQualificationType">
        <annotation>
          <documentation>Qualification of customer prospect create.</documentation>
        </annotation>
        <sequence>
          <element name="customerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer number associated with the prospect customer.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateDetailsType">
        <annotation>
          <documentation>Group containing information of customer prospect create details.</documentation>
        </annotation>
        <sequence>
          <element name="customerDetails" type="tns:customerProspectCreateCustomerGroupType">
            <annotation>
              <documentation>Group containing customer details.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="mailAddress" type="tns:customerProspectCreateMailAddressType">
            <annotation>
              <documentation>Group containing mail address information.</documentation>
            </annotation>
          </element>
          <element name="authorization" type="tns:customerProspectCreateAuthorizationType">
            <annotation>
              <documentation>Group containing authorization information.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateAuthorizationType">
        <annotation>
          <documentation>Group containing authorization information.</documentation>
        </annotation>
        <sequence>
          <element name="numericAlias" type="corewscommon:numericAlias">
            <annotation>
              <documentation>The numeric alias for the cash call channel.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="pin" type="corewscommon:pin">
            <annotation>
              <documentation>The numeric password for the cash call channel.</documentation>
            </annotation>
          </element>
          <element name="alphanumericAlias" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The alias for the internet bank channel.</documentation>
            </annotation>
          </element>
          <element name="password" type="corewscommon:password">
            <annotation>
              <documentation>The password for the internet bank channel.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="workTimeoutLength" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The time in minutes this users session is valid in self-service channels.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="totalTimeoutLength" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The time in minutes this user can be idle in self-service channels.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="timeoutLength" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The time in minutes this users session is valid in self-service channels.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changePinFlag" type="boolean">
            <annotation>
              <documentation>Forces this customer to change password when this customer is using the cash call channel for the first time.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changePasswordFlag" type="boolean">
            <annotation>
              <documentation>Forces this customer to change password when this customer is using the internet bank channel for the first time.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="languageCode" type="corewscommon:alphaNumMax3Type">
            <annotation>
              <documentation>The ISO-639 language code associated with the customer.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateMailAddressType">
        <annotation>
          <documentation>Group containing mail address information.</documentation>
        </annotation>
        <sequence>
          <element name="addressLine1" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The first mail address line.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressLine2" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The second mail address line.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressLine3" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The third mail address line.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="postalCode" type="corewscommon:alphaNumMax12Type">
            <annotation>
              <documentation>The mail address' postal code.</documentation>
            </annotation>
          </element>
          <element name="districtCode" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The mail address' district code (see bank codes handbook for valid values). &lt;br>
                        Only valid for addressType POST and addressGroup HOVED.</documentation>
            </annotation>
          </element>
          <element name="countryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The mail address' country code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="validFromDate" type="date">
            <annotation>
              <documentation>The address' valid from date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="validToDate" type="date">
            <annotation>
              <documentation>The address' valid to date.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateCustomerGroupType">
        <annotation>
          <documentation>Customer details. &lt;br>
                Some commonCustomerInformation items are mandatory, but additional retail or corporate customer information depends on what customer type in question. &lt;br>
                Retail customers will have retail customer data, corporate customers will have corporate customer data and self employed customers can have both.</documentation>
        </annotation>
        <sequence>
          <element name="commonCustomer" type="tns:customerProspectCreateCommonCustomerType">
            <annotation>
              <documentation>Group containing information pertaining all common attributes of a customer.</documentation>
            </annotation>
          </element>
          <choice>
            <element name="retailCustomer" type="tns:customerProspectCreateRetailCustomerType">
              <annotation>
                <documentation>Group containing information about retail customer.</documentation>
              </annotation>
            </element>
            <element name="corporateCustomer" type="tns:customerProspectCreateCorporateCustomerType">
              <annotation>
                <documentation>Group containing corporate customer specific information.</documentation>
              </annotation>
            </element>
            <element name="selfEmployedCustomer" type="tns:customerProspectCreateSelfEmployedCustomerType">
              <annotation>
                <documentation>Group containing self-employed customer specific information.</documentation>
              </annotation>
            </element>
          </choice>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateCorporateCustomerType">
        <annotation>
          <documentation>Group containing corporate customer specific information.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="companyName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>Corporate name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortNames" type="tns:shortNameTypes">
            <annotation>
              <documentation>Group containing various short names.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="creditRateCode" type="customerv8:creditRateCodeInputType">
            <annotation>
              <documentation>Valid values &lt;br>
                        GOOD     Good customer         &lt;br>
                        FAIR     Fairly good customer  &lt;br>
                        LESS     Less good customer    &lt;br>
                        BAD      No good customer</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corpCustEstablishDate" type="date">
            <annotation>
              <documentation>Establish date of the corporate part of the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="riskClass" type="corewscommon:alphaNumMax26Type">
            <annotation>
              <documentation>Risk class. Typical core values: A2, HC3, B2, MB1, LB4, A1, M, MA2, MB3, LB3…</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="industryCode" type="corewscommon:intMax5Type">
            <annotation>
              <documentation>Type of industry (see bank codes handbook for valid values).</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateForm" type="corewscommon:alphaNumMax4Type">
            <annotation>
              <documentation>Type of company. Typical core values: AS, DA, ENK, BEDR, NUF, FLI, ANNA, AAFY, ANS…</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="income" type="customerv8:incomeType">
            <annotation>
              <documentation>Group containing income specific information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxClassification" type="corewscommon:alphaNumMax1Type">
            <annotation>
              <documentation>Returns tax classification.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateCommonCustomerType">
        <annotation>
          <documentation>Group containing information pertaining all common attributes of a customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="deleteAllow" type="boolean">
            <annotation>
              <documentation>True if customer delete is allowed.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="referenceCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>Reference code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="enveloping" type="boolean">
            <annotation>
              <documentation>True if customer wants customer statements enveloped.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shipmentType" type="customerv8:shipmentInputType">
            <annotation>
              <documentation>Valid values: &lt;br>
                      A_POSTAGE        Postal priority A if not overruled in distribution system. &lt;br>
                      B_POSTAGE        Postal priority B if not overruled in distribution system.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="stopChangeProfitCenter" type="boolean">
            <annotation>
              <documentation>True if changing the customer's profit center is not allowed, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="openDate" type="date">
            <annotation>
              <documentation>Customer open date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="officialOrderDate" type="date">
            <annotation>
              <documentation>Date when last updated from an official register.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="profitCenter" type="corewscommon:intMax5Type">
            <annotation>
              <documentation>Key of the profit center.</documentation>
            </annotation>
          </element>
          <element name="sectorCode" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>Sets sector code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="languageCode" type="corewscommon:alphaNumMax3Type">
            <annotation>
              <documentation>The ISO-639 language code associated with the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sectorOwnerCode" type="customerv8:sectorOwnerCode">
            <annotation>
              <documentation>Sector owner code tells which relation the customer has to the bank. &lt;br>
                        Valid values: &lt;br>
                        NO                 No sector owner &lt;br>
                        ASSOCIATED         Associated company, meaning the bank owns a certain percentage of the company &lt;br>
                        SUBSIDIARY         Subsidiary company, meaning a company controlled by a holding company</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="consideredLossDate" type="date">
            <annotation>
              <documentation>Considered loss date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="consentType" type="tns:commonCustomerConsentType">
            <annotation>
              <documentation>Group containing details about consent information.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateSelfEmployedCustomerType">
        <annotation>
          <documentation>Group containing self-employed customer specific information.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="retailCustomer" type="tns:customerProspectCreateRetailCustomerType">
            <annotation>
              <documentation>Group containing information about retail customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateCustomer" type="tns:customerProspectCreateCorporateCustomerType">
            <annotation>
              <documentation>Group containing corporate customer specific information.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateRetailCustomerType">
        <annotation>
          <documentation>Group containing information about retail customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="firstName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The customer's first name.</documentation>
            </annotation>
          </element>
          <element name="lastName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The customer's last name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortNames" type="tns:shortNameTypes">
            <annotation>
              <documentation>Group containing various short names.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="occupation" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer's occupation.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="maritalStatus" type="retailcustomerv4:maritalStatusInputType">
            <annotation>
              <documentation><![CDATA[The customer's marital status. <br>
                        Valid values: <br>
                        MARRIED					Married <br>
                        UNMARRIED				Unmarried/single <br>
                        WIDOW_WIDOWER			Widow or widower after marriage <br>
                        REGISTERED_PARTNER		Partner or equal sex marriage <br>
                        COHABITATION			Cohabitor <br>
                        SEPARATED				Separated from marriage <br>
                        DIVORCED				Divorced after marriage or partnership <br>
                        WIDOW_WIDOWER_PARTNER	Widow or widower after registered partner <br>
                        SEPARATED_PARTNER		Separated after registered partner]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="creditRateCode" type="customerv8:creditRateCodeInputType">
            <annotation>
              <documentation>The customer's credit rate code. &lt;br>
                        Valid values: &lt;br>
                            GOOD    Good customer &lt;br>
                            FAIR    Fairly good customer &lt;br>
                            LESS    Less good customer &lt;br>
                            BAD     No good customer</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="gender" type="retailcustomerv4:genderInputType">
            <annotation>
              <documentation>The customer's gender. &lt;br>
                        Valid values: &lt;br>
                        MALE         Male &lt;br>
                        FEMALE       Female</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="dateOfBirth" type="date">
            <annotation>
              <documentation>The birth date of the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="riskClass" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The retail customer's risk class</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="income" type="customerv8:incomeType">
            <annotation>
              <documentation>Group containing income specific information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship1" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's primary citizenship.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship2" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's secondary citizenship.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship3" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's third citizenship registration.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship4" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's fourth citizenship registration.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship5" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's fifth citizenship registration.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateResultType">
        <annotation>
          <documentation>Group containing information pertaining to all types of customers</documentation>
        </annotation>
        <sequence>
          <element name="customerDetails" type="tns:customerProspectCreateCustomerResultType">
            <annotation>
              <documentation>Group containing customer details.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="mailAddress" type="tns:customerProspectCreateMailAddressResultType">
            <annotation>
              <documentation>Group containing mail address information.</documentation>
            </annotation>
          </element>
          <element name="authorization" type="tns:customerProspectCreateAuthorizationResultType">
            <annotation>
              <documentation>Group containing authorization information.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateAuthorizationResultType">
        <annotation>
          <documentation>Group containing authorization information.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="totalTimeoutLength" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The total time in minutes this users session is valid in this channel.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="workTimeoutLength" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The time in minutes this users session is valid in this channel.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="timeoutLength" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The time in minutes this user can be idle in this channel.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changePinFlag" type="boolean">
            <annotation>
              <documentation>Forces this customer to change password when this customer is using the cash call channel for the first time.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changePasswordFlag" type="boolean">
            <annotation>
              <documentation>Forces this customer to change password when this customer is using the internet bank channel for the first time.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="validFromDate" type="date">
            <annotation>
              <documentation>Authorization valid from date</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="validToDate" type="date">
            <annotation>
              <documentation>Authorization valid to date</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="languageCode" type="corewscommon:alphaNumMax3Type">
            <annotation>
              <documentation>The ISO-639 language code associated with the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="authorizationAgrId" type="corewscommon:longMax18Type">
            <annotation>
              <documentation>Authorization agreement id</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateMailAddressResultType">
        <annotation>
          <documentation>Group containing mail address information.</documentation>
        </annotation>
        <sequence>
          <element name="mailAddress" type="tns:customerProspectCreateMailAddressType">
            <annotation>
              <documentation>Group containing mail specific address data.</documentation>
            </annotation>
          </element>
          <element name="addressGroupSequenceNumber" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>Address group sequence number.</documentation>
            </annotation>
          </element>
          <element name="addressSequenceNumber" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>Address sequence number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressChangeDate" type="date">
            <annotation>
              <documentation>Date address was changed.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="postalArea" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>Date error was set.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressChangeUserId" type="corewscommon:userId">
            <annotation>
              <documentation>User id of changed address.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateCustomerResultType">
        <annotation>
          <documentation>Customer details. &lt;br>
                Some commonCustomerInformation items are mandatory, but additional retail or corporate customer information depends on what customer type in question. &lt;br>
                Retail customers will have retail customer data, corporate customers will have corporate customer data and self employed customers can have both.</documentation>
        </annotation>
        <sequence>
          <element name="commonCustomer" type="tns:customerProspectCreateCommonCustomerResultType">
            <annotation>
              <documentation>Group containing information pertaining all common attributes of a customer.</documentation>
            </annotation>
          </element>
          <choice>
            <element name="retailCustomerDetails" type="tns:customerProspectCreateRetailCustomerResultType">
              <annotation>
                <documentation>Group containing information about retail customer.</documentation>
              </annotation>
            </element>
            <element name="corporateCustomerDetails" type="tns:customerProspectCreateCorporateCustomerResultType">
              <annotation>
                <documentation>Group containing corporate customer specific information.</documentation>
              </annotation>
            </element>
            <element name="selfEmployedCustomer" type="tns:customerProspectCreateSelfEmployedCustomerResultType">
              <annotation>
                <documentation>Group containing self-employed customer specific information.</documentation>
              </annotation>
            </element>
          </choice>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateCommonCustomerResultType">
        <annotation>
          <documentation>Group containing information pertaining all common attributes of a customer.</documentation>
        </annotation>
        <sequence>
          <element name="commonCustomer" type="tns:customerProspectCreateCommonCustomerType">
            <annotation>
              <documentation>Group containing information pertaining all common attributes of a customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerId" type="corewscommon:alphaNumMax11Type">
            <annotation>
              <documentation>Returns customer internal id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changeUserId" type="corewscommon:userId">
            <annotation>
              <documentation>Customer change userid.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="legalCustomer" type="boolean">
            <annotation>
              <documentation>True if customer is a legal customer, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="creationDate" type="date">
            <annotation>
              <documentation>Creation date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="endDate" type="date">
            <annotation>
              <documentation>End date.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateSelfEmployedCustomerResultType">
        <annotation>
          <documentation>Group containing self-employed customer specific information.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="retailCustomer" type="tns:customerProspectCreateRetailCustomerResultType"/>
          <element minOccurs="0" name="corporateCustomer" type="tns:customerProspectCreateCorporateCustomerResultType"/>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateCorporateCustomerResultType">
        <annotation>
          <documentation>Group containing corporate customer specific information.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="corporateCustomerType" type="tns:customerProspectCreateCorporateCustomerType">
            <annotation>
              <documentation>corporate customer specific information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateSeqNo" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>Corporate customer sequence number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressSeqNo" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>Address sequence number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressInfo" type="corewscommon:alphaNumMax60Type">
            <annotation>
              <documentation>Corporate address information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="endDate" type="date">
            <annotation>
              <documentation>End date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changeDate" type="date">
            <annotation>
              <documentation>Last changed date.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProspectCreateRetailCustomerResultType">
        <annotation>
          <documentation>Group containing information about retail customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="retailCustomerType" type="tns:customerProspectCreateRetailCustomerType">
            <annotation>
              <documentation>Retail customer details.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="firstNameSeqNo" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>First name id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lastNameSeqNo" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>Last name id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressSeqNo" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>Address sequence number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressInfo" type="corewscommon:alphaNumMax60Type">
            <annotation>
              <documentation>Address information.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="commonCustomerConsentType">
        <annotation>
          <documentation>Group containing details about consent information.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="wantsMarketing" type="boolean">
            <annotation>
              <documentation>Tells whether customer wants advertisement or not. &lt;br>
                        True : The customer agrees. &lt;br>
                        False: The customer does not agree. &lt;br>
                        NULL : Unacquainted, data not collected.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="informationUsage" type="boolean">
            <annotation>
              <documentation>Tells whether customer allows information usage/marketing of some data or not. &lt;br>
                        True : The customer agrees. &lt;br>
                        False: The customer does not agree. &lt;br>
                        NULL : Unacquainted, data not collected.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="informationUsageOther" type="boolean">
            <annotation>
              <documentation>Tells whether customer allows information usage by other data centrals like common register or not. &lt;br>
                        True : The customer agrees. &lt;br>
                        False: The customer does not agree. &lt;br>
                        NULL : Unacquainted, data not collected.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="electronicCommunication" type="boolean">
            <annotation>
              <documentation>Customer electronic communication tag. True if customer wants electronic communication with bank.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerReadQualificationType">
        <annotation>
          <documentation>Reads data for a customer from the customer system.</documentation>
        </annotation>
        <sequence>
          <choice>
            <element name="internationalCustomerKey" type="corewscommon:internationalCustomerKeyType">
              <annotation>
                <documentation>CustomerKey can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
              </annotation>
            </element>
            <element name="accountNumber" type="corewscommon:accountNumberInputType">
              <annotation>
                <documentation>Account number may be used to find the customer owning the account.</documentation>
              </annotation>
            </element>
          </choice>
        </sequence>
      </complexType>
      <complexType name="customerReadResultType">
        <annotation>
          <documentation>Result of customer read.</documentation>
        </annotation>
        <sequence>
          <element name="commonCustomerDetails" type="tns:customerReadCommonCustomerType"/>
          <element minOccurs="0" name="retailCustomerDetails" type="tns:customerReadRetailCustomerType"/>
          <element minOccurs="0" name="corporateCustomerDetails" type="tns:customerReadCorporateCustomerType"/>
          <element name="commonCodesDetails" type="tns:customerReadCommonCodesType"/>
          <element minOccurs="0" name="mailAddressDetails" type="tns:customerReadMailAddressType"/>
          <element minOccurs="0" name="addressDetailsMain" type="tns:customerReadAddressMainType"/>
          <element minOccurs="0" name="addressDetailsWork" type="tns:customerReadAddressWorkType"/>
          <element minOccurs="0" name="customerInformation" type="tns:customerInformationType"/>
        </sequence>
      </complexType>
      <complexType name="customerInformationType">
        <sequence>
          <element minOccurs="0" name="customerNumber" type="corewscommon:alphaNumMax35Type"/>
          <element minOccurs="0" name="shortName" type="corewscommon:shortName"/>
          <element minOccurs="0" name="profitCenter" type="corewscommon:profitCenter"/>
          <element minOccurs="0" name="profitCenterText" type="corewscommon:profitCenterText"/>
          <element minOccurs="0" name="productId" type="corewscommon:productId"/>
          <element minOccurs="0" name="productShortName" type="corewscommon:productShortName"/>
          <element minOccurs="0" name="executiveOfficerId" type="corewscommon:executiveOfficerId"/>
          <element minOccurs="0" name="executiveOfficerName" type="corewscommon:executiveOfficerName"/>
        </sequence>
      </complexType>
      <complexType name="customerReadAddressWorkType">
        <annotation>
          <documentation>Group containing information about addresses in group WORK.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="eMailAddress" type="corewscommon:alphaNumMax120Type">
            <annotation>
              <documentation>The electronic mail address for the corporation.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="phoneNo" type="corewscommon:alphaNumMax30Type">
            <annotation>
              <documentation>The phone number for the corporation.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="phoneNoCountryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>ISO Countrycode for the phone number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="cellPhoneNo" type="corewscommon:alphaNumMax30Type">
            <annotation>
              <documentation>Cell phone number for the corporation.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="cellPhoneNoCountryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>ISO Countrycode for the cell phone number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerReadAddressMainType">
        <annotation>
          <documentation>Group containing information about addresses in group MAIN.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="eMailAddress" type="corewscommon:alphaNumMax120Type">
            <annotation>
              <documentation>The address for electronic mail.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="phoneNo" type="corewscommon:alphaNumMax30Type">
            <annotation>
              <documentation>The standard phone number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="phoneNoCountryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>ISO Countrycode for the phone number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="cellPhoneNo" type="corewscommon:alphaNumMax30Type">
            <annotation>
              <documentation>Cell phone number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="cellPhoneNoCountryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>ISO Countrycode for the cell phone number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="switchboardPhoneNo" type="corewscommon:alphaNumMax30Type">
            <annotation>
              <documentation>Phone number to the switchboard.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="switchboardPhoneNoCountryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>ISO Countrycode for the switchboard phone number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="faxNo" type="corewscommon:alphaNumMax30Type">
            <annotation>
              <documentation>Fax number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerReadMailAddressType">
        <annotation>
          <documentation>Group containing mail address in group MAIN.</documentation>
        </annotation>
        <sequence>
          <element name="addressLine1" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The first mail address line.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressLine2" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The second mail address line.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressLine3" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The third mail address line.</documentation>
            </annotation>
          </element>
          <element name="postalCode" type="corewscommon:alphaNumMax12Type">
            <annotation>
              <documentation>The address' postal code.</documentation>
            </annotation>
          </element>
          <element name="postalArea" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The address' postal area.</documentation>
            </annotation>
          </element>
          <element name="countryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The address' country code.</documentation>
            </annotation>
          </element>
          <element name="country" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The name of the address' country.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressErrorDate" type="date">
            <annotation>
              <documentation>The date when the faulty address was discovered.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerReadCommonCodesType">
        <annotation>
          <documentation>Group containing information about personal customer.</documentation>
        </annotation>
        <sequence>
          <element name="geographicalCode" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The geographical code associated with the customer.</documentation>
            </annotation>
          </element>
          <element name="geographicalCodeText" type="corewscommon:alphaNumMax150Type">
            <annotation>
              <documentation>The textual description of the geographical code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sectorCode" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The sector code associated with the customer.</documentation>
            </annotation>
          </element>
          <element name="sectorCodeText" type="corewscommon:alphaNumMax150Type">
            <annotation>
              <documentation>The textual description of the sector code.</documentation>
            </annotation>
          </element>
          <element name="industrialCode" type="corewscommon:intMax5Type">
            <annotation>
              <documentation>The industrial code associated with the customer.</documentation>
            </annotation>
          </element>
          <element name="industrialCodeText" type="corewscommon:alphaNumMax150Type">
            <annotation>
              <documentation>The textual description of the industrial code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlStatus" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation><![CDATA[The customer's AML status. <br>
                        Typical values: <br>
                        'blank' Not controlled <br>
                        OK      Approved (G) <br>
                        OKX     Approved without AML control (X) <br>
                        ODDU    Enhanced due diligence (EDD) needed (U) <br>
                        ODDF    Ongoing due diligence (ODD) needed (F) <br>
                        EDDU    EDD needed after ODD (E) <br>
                        AVVIS   Rejected (A) <br>
                        EDDAV   Rejected after ODD (H) <br>
                        NVNOK   Approved after name check (N) <br>
                        NVNU    EDD needed after name check (V) <br>
                        IKJOK   Approved name and partly risk score (K) <br>
                        IKJU    EDD needed after name and risk score (L)]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlStatusDate" type="date">
            <annotation>
              <documentation>The date the customer's AML status was registered.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlRenewalExpiryDate" type="date">
            <annotation>
              <documentation>The expiry date for renewal of the AML check.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerReadCorporateCustomerType">
        <annotation>
          <documentation>Group containing information about corporate customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="corporateName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The customer's corporate name.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerReadRetailCustomerType">
        <annotation>
          <documentation>Group containing information about retail customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="firstName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The customer's first name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lastName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The customer's last name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="age" type="corewscommon:intMax3Type">
            <annotation>
              <documentation>The age of the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="gender" type="retailcustomerv4:genderOutputType">
            <annotation>
              <documentation>The customer's gender. &lt;br>
                        Valid values: &lt;br>
                        MALE         Male &lt;br>
                        FEMALE       Female &lt;br>
                        UNKNOWN      Unknown host value</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="vipLabel" type="corewscommon:intMax1Type">
            <annotation>
              <documentation>The VIP label used to limit access to the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfChildren" type="corewscommon:intMax2Type">
            <annotation>
              <documentation>The customer's number of children.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="maritalStatus" type="retailcustomerv4:maritalStatusOutputType">
            <annotation>
              <documentation><![CDATA[The customer's marital status. <br>
                        Valid values: <br>
                        MARRIED					Married <br>
                        UNMARRIED				Unmarried/single <br>
                        WIDOW_WIDOWER			Widow or widower after marriage <br>
                        REGISTERED_PARTNER		Partner or equal sex marriage <br>
                        COHABITATION			Cohabitor <br>
                        SEPARATED				Separated from marriage <br>
                        DIVORCED				Divorced after marriage or partnership <br>
                        WIDOW_WIDOWER_PARTNER	Widow or widower after registered partner <br>
                        SEPARATED_PARTNER		Separated after registered partner <br>
                        UNKNOWN 				Unknown host value]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="occupation" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer's occupation.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerReadCommonCustomerType">
        <annotation>
          <documentation>Group containing information pertaining to all types of customers.</documentation>
        </annotation>
        <sequence>
          <element name="shortName21" type="corewscommon:alphaNumMax21Type">
            <annotation>
              <documentation>The customer's short name with max length of 21 characters.</documentation>
            </annotation>
          </element>
          <element name="shortName26" type="corewscommon:alphaNumMax26Type">
            <annotation>
              <documentation>The customer's short name with max length of 26 characters.</documentation>
            </annotation>
          </element>
          <element name="customerType" type="customerinformationv6:customerTypeOutput">
            <annotation>
              <documentation>The customer's type. &lt;br>
                        Valid values: &lt;br>
                            RETAIL          Retail customer.  &lt;br>
                            CORPORATE       Corporate customer.  &lt;br>
                            SELF_EMPLOYD    Both/self employed customer. &lt;br>
                            UNKNOWN         All other host values.</documentation>
            </annotation>
          </element>
          <element name="customerIntId" type="corewscommon:customerIntId">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
          <element name="customerAgreementStatus" type="customerv8:customerAgreementStatus">
            <annotation>
              <documentation>Does the customer have any of the agreement types? &lt;br>
                         Valid values: &lt;br>
                         HAS_ACCOUNT_AGREEMENT          The customer has RK, UL, VR or GA account agreements. &lt;br>
                         HAS_AUTH_AGREEMENT             The customer has an authorization agreement. &lt;br>
                         HAS_CARD_AGREEMENT             The customer has a card agreement. &lt;br>
                         UNKNOWN                        Unknown host value</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="languageCode" type="corewscommon:alphaNumMax3Type">
            <annotation>
              <documentation>The ISO-639 language code associated with the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="profitCenter" type="corewscommon:profitCenter">
            <annotation>
              <documentation>Key identifying the profit center the customer is associated with.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="profitCenterText" type="corewscommon:profitCenterText">
            <annotation>
              <documentation>Textual representation of the profit center the customer is associated with.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="executiveOfficerLogonId" type="corewscommon:executiveOfficerId">
            <annotation>
              <documentation>The logonId/userId of the customer's executive officer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="executiveOfficerName" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The name of the customer's executive officer.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerReadKeyQualificationType">
        <annotation>
          <documentation>Customer number update qualification.</documentation>
        </annotation>
        <sequence>
          <element name="customerKey" type="corewscommon:internationalCustomerKeyType">
            <annotation>
              <documentation>CustomerKey can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerReadKeyResultType">
        <annotation>
          <documentation>Result of readKey customer.</documentation>
        </annotation>
        <sequence>
          <element name="customerIntId" type="corewscommon:customerIntId">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
          <element name="customerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerTagsReadQualificationType">
        <annotation>
          <documentation>Reads data for a customer from the customer system.</documentation>
        </annotation>
        <sequence>
          <element name="customerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer number to be queried.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerTagsReadResultType">
        <annotation>
          <documentation>Result of read customer tags.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="customerAddressError" type="boolean">
            <annotation>
              <documentation>True if customer address error exists, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerBankrupt" type="boolean">
            <annotation>
              <documentation>True if customer is bankrupt, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerNoteExist" type="boolean">
            <annotation>
              <documentation>True if a customer note exists, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerEngagementNoteExist" type="boolean">
            <annotation>
              <documentation>True if customer engagement note exists, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerDead" type="boolean">
            <annotation>
              <documentation>True if customer is dead, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerTerminated" type="boolean">
            <annotation>
              <documentation>True if customer is terminated, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerNotLegal" type="boolean">
            <annotation>
              <documentation>True if customer is not legal prepared, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerConsideredLoss" type="boolean">
            <annotation>
              <documentation>True if customer has considered loss, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="prospectCustomer" type="boolean">
            <annotation>
              <documentation>True if customer is a prospect customer, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerIdentityVerified" type="boolean">
            <annotation>
              <documentation>True if the customer identity is verified, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerUnderAged" type="boolean">
            <annotation>
              <documentation>True if customer is under age, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerGuardianExist" type="boolean">
            <annotation>
              <documentation>True if customer guardian exists, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerAuthenticationQuestion" type="boolean">
            <annotation>
              <documentation>True if customer authentication question exists, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerElectronicCommunication" type="boolean">
            <annotation>
              <documentation>True if customer wants electronic communication with bank, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerDataUseMarketingPurpose" type="boolean">
            <annotation>
              <documentation>True if customer allows data to be used for marketing purpose, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerDataExchange" type="boolean">
            <annotation>
              <documentation>True if customer allows data exchange between data operators, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerOtherCommunication" type="boolean">
            <annotation>
              <documentation>True if customer wants other channels to be used for communication with bank, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerDigitalContact" type="boolean">
            <annotation>
              <documentation>True if customer approve of digital contact with the bank, false if not.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerAdvisorReadQualificationType">
        <annotation>
          <documentation>Reads data for a customer from the customer system.</documentation>
        </annotation>
        <sequence>
          <element name="internationalCustomerKey" type="corewscommon:internationalCustomerKeyType">
            <annotation>
              <documentation>CustomerKey can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerAdvisorReadResultType">
        <annotation>
          <documentation>Result of read customer for advisor purposes.</documentation>
        </annotation>
        <sequence>
          <element name="customerDetails" type="tns:customerAdvisorReadCustomerDetailsType"/>
          <element minOccurs="0" name="customerConsent" type="tns:consentAdvisorReadType"/>
          <element maxOccurs="10" minOccurs="0" name="attribute" type="tns:customerAdvisorReadAttributeType"/>
        </sequence>
      </complexType>
      <complexType name="customerAdvisorReadAttributeType">
        <annotation>
          <documentation>Attribute information for the customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="attributeTypeCode" type="customerinformationv6:attributeTypeCodeOutput">
            <annotation>
              <documentation><![CDATA[Attribute type code. <br>
                        Valid values: <br>
                        RATING      Rating  <br>
                        CREDIT      Credit quality tier <br>
                        WEIGHTING   Weighting category <br>
                        RISK        Risk weighting  <br>
                        UNKNOWN     All other core values]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="attributeTypeData" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The attribute type's data.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="validFromDate" type="date">
            <annotation>
              <documentation>The attribute type's valid from date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="validToDate" type="date">
            <annotation>
              <documentation>The attribute type's valid to date.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="consentAdvisorReadType">
        <annotation>
          <documentation>The group contains items concerning consent information about the customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="wantsMarketing" type="boolean">
            <annotation>
              <documentation>Tells whether customer wants advertisement or not. &lt;br>
                        True : The customer agrees. &lt;br>
                        False: The customer does not agree. &lt;br>
                        NULL : Unacquainted, data not collected.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="marketing" type="tns:marketingDetailsType"/>
          <element minOccurs="0" name="export" type="tns:exportDetailsType"/>
          <element minOccurs="0" name="digitalCommunication" type="tns:digitalCommunicationDetailsType"/>
          <element minOccurs="0" name="digitalCommunicationMarketing" type="tns:digitalCommunicationMarketingDetailsType"/>
        </sequence>
      </complexType>
      <complexType name="digitalCommunicationMarketingDetailsType">
        <annotation>
          <documentation>Details for digital communication marketing consent.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="digitalCommunicationMarketing" type="boolean">
            <annotation>
              <documentation>Switch indicating whether customer gives the financial institution consent to distribute marketing information through digital communication. True if customer agrees, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="registerDate" type="date">
            <annotation>
              <documentation>Date the consent was registered.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="registerLogonId" type="corewscommon:userId">
            <annotation>
              <documentation>LogonId/userId for bank employee/system user that registered the consent.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="digitalCommunicationDetailsType">
        <annotation>
          <documentation>Details for digital communication consent.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="digitalCommunication" type="boolean">
            <annotation>
              <documentation>Switch indicating whether customer gives the financial institution consent to distribute agreement and service information through digital communication. True if customer agrees, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="registerDate" type="date">
            <annotation>
              <documentation>Date the consent was registered.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="registerLogonId" type="corewscommon:userId">
            <annotation>
              <documentation>LogonId/userId for bank employee/system user that registered the consent.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="exportDetailsType">
        <annotation>
          <documentation>Details for export consent.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="export" type="boolean">
            <annotation>
              <documentation>Switch indicating whether customer gives consent to export customer information to common customer registry. True if customer agrees, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="registerDate" type="date">
            <annotation>
              <documentation>Date the consent was registered.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="registerLogonId" type="corewscommon:userId">
            <annotation>
              <documentation>LogonId/userId for bank employee/system user that registered the consent.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="marketingDetailsType">
        <annotation>
          <documentation>Details for marketing consent.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="marketing" type="boolean">
            <annotation>
              <documentation>Switch indicating whether customer gives consent to use customer information for marketing purposes. True if customer agrees, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="registerDate" type="date">
            <annotation>
              <documentation>Date the consent was registered.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="registerLogonId" type="corewscommon:userId">
            <annotation>
              <documentation>LogonId/userId for bank employee/system user that registered the consent.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerAdvisorReadCustomerDetailsType">
        <annotation>
          <documentation>Customer details.</documentation>
        </annotation>
        <sequence>
          <element name="commonCustomerDetails" type="tns:customerAdvisorReadCommonCustomerType"/>
          <element minOccurs="0" name="retailCustomerDetails" type="tns:customerAdvisorReadRetailCustomerType"/>
          <element minOccurs="0" name="corporateCustomerDetails" type="tns:customerAdvisorReadCorporateCustomerType"/>
          <element minOccurs="0" name="taxDetails" type="tns:taxDetailsType"/>
        </sequence>
      </complexType>
      <complexType name="taxDetailsType">
        <annotation>
          <documentation>Group containing information about tax details.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="taxDeclaration" type="boolean">
            <annotation>
              <documentation>If true then tax declaration form signed else not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxDeclarationDate" type="date">
            <annotation>
              <documentation>Returns Tax declaration form signed date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxLiabilityDomestic" type="boolean">
            <annotation>
              <documentation>If true then tax liability for domestic else not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxLiabilityDomesticDate" type="date">
            <annotation>
              <documentation>Customer unlimited domestic tax liability date questioned.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxLiabilityUS" type="boolean">
            <annotation>
              <documentation>If true then tax liability for US else not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxLiabilityUSDate" type="date">
            <annotation>
              <documentation>Customer tax liability to USA date questioned.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerAdvisorReadCorporateCustomerType">
        <annotation>
          <documentation>Group containing information about corporate customers</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="corporateForm" type="corewscommon:alphaNumMax4Type">
            <annotation>
              <documentation>The type of corporation/company. &lt;br>
                        Typical core values: &lt;br>
                        AS, DA, ENK, BEDR, NUF, FLI, ANNA, AAFY, ANS.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The name of the corporation/company.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName15" type="corewscommon:alphaNumMax15Type">
            <annotation>
              <documentation>Short name with max length of 15 characters. Used if the customer has a corporate part.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName21" type="corewscommon:alphaNumMax21Type">
            <annotation>
              <documentation>Short name with max length of 21 characters. Used if the customer has a corporate part.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName26" type="corewscommon:alphaNumMax26Type">
            <annotation>
              <documentation>Short name with max length of 26 characters. Used if the customer has a corporate part.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nameAddressString" type="corewscommon:alphaNumMax60Type">
            <annotation>
              <documentation>The corporate name and address string with length of 60 characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateNameId" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>The corporate name, first five char.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressId" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The corporate customer's address, first two char.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nameChangeDate" type="date">
            <annotation>
              <documentation>The date when the corporate name was changed.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="establishDate" type="date">
            <annotation>
              <documentation>The date the corporate customer was established.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="terminateDate" type="date">
            <annotation>
              <documentation>The date when corporate customer was terminated.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="businessRegistrationNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The official business registration number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="producerNumber" type="corewscommon:alphaNumMax20Type">
            <annotation>
              <documentation>The producer number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="industryCode" type="corewscommon:intMax5Type">
            <annotation>
              <documentation>The type of industry (see bank codes handbook for valid values).</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="industryCodeText" type="corewscommon:alphaNumMax150Type">
            <annotation>
              <documentation>The description of the industry code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="creditRateCode" type="customerinformationv6:creditRateCodeOutput">
            <annotation>
              <documentation><![CDATA[The corporate customer's credit rate code. <br>
                        Valid values: <br>
                        GOOD    Good customer <br>
                        FAIR    Fairly good customer <br>
                        LESS    Less good customer <br>
                        BAD     No good customer <br>
                        UNKNOWN All other core values]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="riskClass" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The corporate customer's risk class. &lt;br>
                        Typical core values: &lt;br>
                        A2, HC3, B2, MB1, LB4, A1, M, MA2, MB3, LB3.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="incomeAmount" type="corewscommon:amount">
            <annotation>
              <documentation>The customer's income in year described in incomeYear.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="incomeYear" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The year the incomeAmount is from.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfEmployees" type="corewscommon:intMax7Type">
            <annotation>
              <documentation>The corporation's number of employees.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfManYears" type="corewscommon:intMax7Type">
            <annotation>
              <documentation>The corporation's number of Full Time Equivalents (Norwegian : Årsverk).</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="stockExchangeRegistered" type="boolean">
            <annotation>
              <documentation>True if the corporation is registered at the stock exchange, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lowVolumeOwners" type="boolean">
            <annotation>
              <documentation>True if the corporation has many low volume share holders, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lowVolumeOwnersDate" type="date">
            <annotation>
              <documentation>The date when lowVolumeOwners was set.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="exportShare" type="corewscommon:rate">
            <annotation>
              <documentation>The corporation's export share.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName36" type="corewscommon:alphaNumMax36Type">
            <annotation>
              <documentation>Short name with max length of 36 characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxClassification" type="corewscommon:alphaNumMax1Type">
            <annotation>
              <documentation>The corporation's tax classification.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="exchangeCountryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The corporate customer's exchange location.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="exchangeName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The name of the corporate customer's exchange.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="countryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The country the corporate customer's company is registered in.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="publicOwned" type="boolean">
            <annotation>
              <documentation>True if the corporate customer's company is mostly public owned.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerAdvisorReadRetailCustomerType">
        <annotation>
          <documentation>Group containing information about retail customers.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="firstName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The customer's first name.</documentation>
            </annotation>
          </element>
          <element name="lastName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The customer's last name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName15" type="corewscommon:alphaNumMax15Type">
            <annotation>
              <documentation>Short name with max length of 15 characters. Used if the customer has a retail part.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName21" type="corewscommon:alphaNumMax21Type">
            <annotation>
              <documentation>Short name with max length of 21 characters. Used if the customer has a retail part.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName26" type="corewscommon:alphaNumMax26Type">
            <annotation>
              <documentation>Short name with max length of 26 characters. Used if the customer has a retail part.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nameAddressString" type="corewscommon:alphaNumMax60Type">
            <annotation>
              <documentation>The retail customer's name and address string with length of 60 characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lastNameId" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>The retail customer's last name, first five char.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="firstNameId" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>The retail customer's first name, first five char.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressId" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The retail customer's address, first two char.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nameChange" type="boolean">
            <annotation>
              <documentation>True if name has been changed, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nameChangeDate" type="date">
            <annotation>
              <documentation>The date the name was last changed.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="dateOfBirth" type="date">
            <annotation>
              <documentation>The birth date of the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="birthPlace" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The place of birth.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="countryOfBirth" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The country code of the birth place.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="countryOfBirthText" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The country name of the birth place.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="dateOfDeath" type="date">
            <annotation>
              <documentation>The date of death.</documentation>
            </annotation>
          </element>
          <element name="gender" type="retailcustomerv4:genderOutputType">
            <annotation>
              <documentation>The customer's gender. &lt;br>
                        Valid values: &lt;br>
                        MALE         Male &lt;br>
                        FEMALE       Female &lt;br>
                        UNKNOWN      Unknown host value</documentation>
            </annotation>
          </element>
          <element name="maritalStatus" type="retailcustomerv4:maritalStatusOutputType">
            <annotation>
              <documentation><![CDATA[The customer's marital status. <br>
                        Valid values: <br>
                        MARRIED					Married <br>
                        UNMARRIED				Unmarried/single <br>
                        WIDOW_WIDOWER			Widow or widower after marriage <br>
                        REGISTERED_PARTNER		Partner or equal sex marriage <br>
                        COHABITATION			Cohabitor <br>
                        SEPARATED				Separated from marriage <br>
                        DIVORCED				Divorced after marriage or partnership <br>
                        WIDOW_WIDOWER_PARTNER	Widow or widower after registered partner <br>
                        SEPARATED_PARTNER		Separated after registered partner <br>
                        UNKNOWN 				Unknown host value]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="occupation" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer's occupation.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nationalityText" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The textual representation of nationality/country code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfChildren" type="corewscommon:intMax2Type">
            <annotation>
              <documentation>The customer's number of children.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="creditRateCode" type="customerinformationv6:creditRateCodeOutput">
            <annotation>
              <documentation><![CDATA[The retail customer's credit rate code.<br>
                        Valid values: <br>
                        GOOD    Good customer <br>
                        FAIR    Fairly good customer <br>
                        LESS    Less good customer <br>
                        BAD     No good customer <br>
                        UNKNOWN All other core values]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="riskClass" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The retail customer's risk class. &lt;br>
                        Typical core values: &lt;br>
                        LA2, MC0, LB2, B1, MB2, A1, B4.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="incomeAmount" type="corewscommon:amount">
            <annotation>
              <documentation>The customer's income in year described in incomeYear.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="incomeYear" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>Stating which year the income is from.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nationalRegisterAddressCode" type="corewscommon:alphaNumMax1Type">
            <annotation>
              <documentation><![CDATA[Address code in the national register(DSF). <br>
                        Typical values of National Register (DSF) item SPES-KD <br>
                        0   Regular resident <br>
                        1   Foreign <br>
                        2   Military <br>
                        3   Svalbard <br>
                        4   Client address <br>
                        5   No permanent residence <br>
                        6   Blocked confidential <br>
                        7   Blocked strictly confidential <br>
                        8   Commuter]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nationalRegisterDate" type="date">
            <annotation>
              <documentation>Date from the national register(DSF) or the date when nationalRegisterAddressCode is updated in Evry.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nationalRegisterStatusCode" type="corewscommon:alphaNumMax1Type">
            <annotation>
              <documentation><![CDATA[Customer code in the national register(DSF). <br>
                        Typical values of National Register (DSF)  <br>
                        1   Resident. If the customer has a D-number then active <br>
                        2   Moved out(Utflyttet) <br>
                        3   Emigtated <br>
                        4   Disappeared. If the customer has a D-number then not active <br>
                        5   Dead <br>
                        6   Expired national identity number <br>
                        7   Blocked strictly confidential <br>
                        8   Commuter]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nationalRegisterStatusDate" type="date">
            <annotation>
              <documentation>The customers National Register status was set on this date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nationalRegisterNameDate" type="date">
            <annotation>
              <documentation>The customers name in the National Register was last changed on this date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerGuardianExist" type="boolean">
            <annotation>
              <documentation>True if the customer has a guardian, false if not. &lt;br>
                        If not present it is not known if the customer has a guardian or not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerGuardianDate" type="date">
            <annotation>
              <documentation>The customer's guardian date when customers guardian exist is set.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName36" type="corewscommon:alphaNumMax36Type">
            <annotation>
              <documentation>Short name with max length of 36 characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="industryCode" type="corewscommon:intMax5Type">
            <annotation>
              <documentation>The type of industry (see bank codes handbook for valid values).</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="dateOfDeathReg" type="date">
            <annotation>
              <documentation>The date when the date of death was recorded.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="dateOfDeathLogonId" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The logonid of the person who registered the date of death.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship1" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's primary citizenship.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship2" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's secondary citizenship.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship3" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's third citizenship registration.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship4" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's fourth citizenship registration.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship5" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's fifth citizenship registration.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="socioEconomicStatus" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>The type code for the customer's socio-economical status.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="socioEconomicStatusText" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The text for the customer's socio-economical status.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerAdvisorReadCommonCustomerType">
        <annotation>
          <documentation>Group containing common customer information.</documentation>
        </annotation>
        <sequence>
          <element name="customerType" type="customerinformationv6:customerTypeOutput">
            <annotation>
              <documentation>The customer's type. &lt;br>
                        Valid values: &lt;br>
                        RETAIL          Retail customer &lt;br>
                        CORPORATE       Corporate customer  &lt;br>
                        SELF_EMPLOYD    Both/self employed customer &lt;br>
                        UNKNOWN         All other core values</documentation>
            </annotation>
          </element>
          <element name="customerIntId" type="corewscommon:customerIntId">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
          <element name="customerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="oldCustomerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The old customer number. Only applicable if the customer has changed customer number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="oldCustomerDate" type="date">
            <annotation>
              <documentation>The date the customer number was changed.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="createDate" type="date">
            <annotation>
              <documentation>Customer create date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="openDate" type="date">
            <annotation>
              <documentation>Opening date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changeDate" type="date">
            <annotation>
              <documentation>Last change date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changeLogonId" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>Userid performing the last change.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="terminateDate" type="date">
            <annotation>
              <documentation>Customer termination date.</documentation>
            </annotation>
          </element>
          <element name="profitCenter" type="corewscommon:profitCenter">
            <annotation>
              <documentation>Key identifying the profit center the customer is associated with.</documentation>
            </annotation>
          </element>
          <element name="stopChangeProfitCenter" type="boolean">
            <annotation>
              <documentation>True if changing the customer's profit center is not allowed, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sectorCode" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The customer's sector code (see bank codes handbook for valid values).</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sectorCodeText" type="corewscommon:alphaNumMax150Type">
            <annotation>
              <documentation>The textual representation of the sector code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="languageCode" type="corewscommon:alphaNumMax3Type">
            <annotation>
              <documentation>The ISO-639 language code associated with the customer.</documentation>
            </annotation>
          </element>
          <element name="norwegianLanguageCode" type="customerinformationv6:languageCodeOutput">
            <annotation>
              <documentation>The ISO-639 Norwegian language code associated with the customer. &lt;br>
                        Valid values: &lt;br>
                        NOB             Norwegian 'bokmål' &lt;br>
                        NNO             Norwegian 'nynorsk' &lt;br>
                        UNKNOWN         All other core values</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="prospectCustomer" type="boolean">
            <annotation>
              <documentation>True if customer is a prospect customer, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="identityVerified" type="boolean">
            <annotation>
              <documentation>True if the customer identity is verified, false if not.</documentation>
            </annotation>
          </element>
          <element name="legalCustomer" type="boolean">
            <annotation>
              <documentation>True if customer is a legal customer, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="vipLabel" type="corewscommon:intMax1Type">
            <annotation>
              <documentation>VIP label used to limit access to the customer data. &lt;br>
                        Organizations define their own set of values.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sectorOwnerCode" type="customerinformationv6:sectorOwnerCodeOutput">
            <annotation>
              <documentation>Sector owner code telles which relation the customer has to the bank. &lt;br>
                        Valid values: &lt;br>
                        NO              No sector owner &lt;br>
                        ASSOCIATED      Associated company, meaning the bank owns a certain percentage of the company &lt;br>
                        SUBSIDIARY      Subsidiary company, meaning a company controlled by a holding company &lt;br>
                        UNKNOWN         Unknown host value</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="referenceCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The reference code.</documentation>
            </annotation>
          </element>
          <element name="enveloping" type="boolean">
            <annotation>
              <documentation>True if customer wants messages/customer statements enveloped, false if not.</documentation>
            </annotation>
          </element>
          <element name="deleteAllow" type="boolean">
            <annotation>
              <documentation>True if customer delete is allowed, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="bankruptDate" type="date">
            <annotation>
              <documentation>The date the customer went bankrupt.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lossEvaluationDate" type="date">
            <annotation>
              <documentation>The date when customer loss was evaluated.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxAbroad" type="boolean">
            <annotation>
              <documentation>True if customer pays tax abroad, false if not. This information is supplied by the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxAbroadDate" type="date">
            <annotation>
              <documentation>The date when taxAbroad was set.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlStatus" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation><![CDATA[The customer's AML status. <br>
                        Typical values: <br>
                        'blank' Not controlled <br>
                        OK      Approved (G) <br>
                        OKX     Approved without AML control (X) <br>
                        ODDU    Enhanced due diligence (EDD) needed (U) <br>
                        ODDF    Ongoing due diligence (ODD) needed (F) <br>
                        EDDU    EDD needed after ODD (E) <br>
                        AVVIS   Rejected (A) <br>
                        EDDAV   Rejected after ODD (H) <br>
                        NVNOK   Approved after name check (N) <br>
                        NVNU    EDD needed after name check (V) <br>
                        IKJOK   Approved name and partly risk score (K) <br>
                        IKJU    EDD needed after name and risk score (L) <br>]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlStatusDate" type="date">
            <annotation>
              <documentation>The date the customer's AML status was registered.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="legalType" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>The type code for the customer's legal status.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="legalTypeText" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The text for customer's legal status.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlStatusText" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The textual representation of the AML status.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlRenewalExpiryDate" type="date">
            <annotation>
              <documentation>The expiry date for renewal of the AML check.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlRenewalLogonId" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The logonId/userId for the bank employee/system user that changed the amlRenewalExpiryDate.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlRenewalChangeDate" type="date">
            <annotation>
              <documentation>The date when the amlRenewalExpiryDate was set.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlChangeLogonId" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The logonId/userId for the bank employee/system user that changed the AML information.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDetailsReadQualificationType">
        <annotation>
          <documentation>Reads data for a customer from the customer system.</documentation>
        </annotation>
        <sequence>
          <element name="customerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer number to be queried.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDetailsReadResultType">
        <annotation>
          <documentation>Result of account read details.</documentation>
        </annotation>
        <sequence>
          <element name="commonCustomerDetails" type="tns:customerDetailsReadCommonCustomerType"/>
          <element minOccurs="0" name="retailCustomerDetails" type="tns:customerDetailsReadRetailCustomerType"/>
          <element minOccurs="0" name="corporateCustomerDetails" type="tns:customerDetailsReadCorporateCustomerType"/>
          <element name="commonCodesDetails" type="tns:customerDetailsReadCommonCodesType"/>
          <element minOccurs="0" name="productTableDetails" type="tns:productResultType"/>
          <element minOccurs="0" name="consentDetails" type="tns:consentDetailsType"/>
        </sequence>
      </complexType>
      <complexType name="consentDetailsType">
        <annotation>
          <documentation>The group contains items concerning consent information about the customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="wantsMarketing" type="boolean">
            <annotation>
              <documentation>Tells whether customer wants advertisement or not. &lt;br>
                        True : The customer agrees &lt;br>
                        False: The customer does not agree &lt;br>
                        NULL : Unacquainted, data not collected.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="advertisingByEmail" type="boolean">
            <annotation>
              <documentation>True of the customer has given consent to advertising by e-mail, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="advertisingBySMS" type="boolean">
            <annotation>
              <documentation>True if the customer has given consent to advertising by SMS, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="advertisingByInternetBank" type="boolean">
            <annotation>
              <documentation>True if the customer has given consent to advertising by internet bank, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="marketing" type="tns:marketingDetailsType"/>
          <element minOccurs="0" name="export" type="tns:exportDetailsType"/>
          <element minOccurs="0" name="digitalCommunication" type="tns:digitalCommunicationDetailsType"/>
          <element minOccurs="0" name="digitalCommunicationMarketing" type="tns:digitalCommunicationMarketingDetailsType"/>
        </sequence>
      </complexType>
      <complexType name="productResultType">
        <annotation>
          <documentation>Group containing list of products.</documentation>
        </annotation>
        <sequence>
          <element maxOccurs="unbounded" minOccurs="0" name="product" type="tns:productType"/>
        </sequence>
      </complexType>
      <complexType name="productType">
        <annotation>
          <documentation>Group containing product information</documentation>
        </annotation>
        <sequence>
          <element name="productGroupName" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The product group's name.</documentation>
            </annotation>
          </element>
          <element name="productGroupStatus" type="corewscommon:alphaNumMax6Type">
            <annotation>
              <documentation>The product group's status.</documentation>
            </annotation>
          </element>
          <element name="eTestDate" type="date">
            <annotation>
              <documentation>The product group's create or change date.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDetailsReadCommonCodesType">
        <annotation>
          <documentation>Group containing information about common codes.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="geographicalCode" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The geographical code for the main address.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sectorCode" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The sector code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="industryCode" type="corewscommon:intMax5Type">
            <annotation>
              <documentation>The type of industry (see bank codes handbook for valid values).</documentation>
            </annotation>
          </element>
          <element name="sectorOwnerCode" type="customerv8:sectorOwnerCodeOutput">
            <annotation>
              <documentation>Sector owner code tells which relation the customer has to the bank. &lt;br>
                        Valid values: &lt;br>
                        NO              No sector owner &lt;br>
                        ASSOCIATED      Associated company, meaning the bank owns a certain percentage of the company &lt;br>
                        SUBSIDIARY      Subsidiary company, meaning a company controlled by a holding company &lt;br>
                        UNKNOWN         Unknown host value</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDetailsReadCorporateCustomerType">
        <annotation>
          <documentation>Group containing information about a corporate customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="establishDate" type="date">
            <annotation>
              <documentation>The date the corporate customer was established.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="bankruptcyDate" type="date">
            <annotation>
              <documentation>The date the corporate customer went bankrupt.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="creditRateCode" type="customerv8:creditRateCodeOutputType">
            <annotation>
              <documentation><![CDATA[The corporate customer's credit rate code. <br>
                        Valid values: <br>
                        GOOD    Good customer <br>
                        FAIR    Fairly good customer <br>
                        LESS    Less good customer <br>
                        BAD     No good customer <br>
                        UNKNOWN All other core values]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="income" type="corewscommon:amount">
            <annotation>
              <documentation>The corporate customer's income in year described in incomeYear.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="incomeYear" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>Stating which year the income is from.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="riskClass" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The corporate customer's risk class. &lt;br>
                        Typical core values: &lt;br>
                            A2, HC3, B2, MB1, LB4, A1, M, MA2, MB3, LB3.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDetailsReadRetailCustomerType">
        <annotation>
          <documentation>Group containing information about retail customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="dateOfBirth" type="date">
            <annotation>
              <documentation>The date of birth.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="dateOfDeath" type="date">
            <annotation>
              <documentation>The date of death.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nationalityText" type="corewscommon:alphaNumMax20Type">
            <annotation>
              <documentation>The customer nationality/country code text.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="gender" type="retailcustomerv4:genderOutputType">
            <annotation>
              <documentation>The customer's gender. &lt;br>
                        Valid values: &lt;br>
                        MALE         Male &lt;br>
                        FEMALE       Female &lt;br>
                        UNKNOWN      Unknown host value</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="maritalStatus" type="retailcustomerv4:maritalStatusOutputType">
            <annotation>
              <documentation><![CDATA[The customer's marital status. <br>
                        Valid values: <br>
                        MARRIED					Married <br>
                        UNMARRIED				Unmarried/single <br>
                        WIDOW_WIDOWER			Widow or widower after marriage <br>
                        REGISTERED_PARTNER		Partner or equal sex marriage <br>
                        COHABITATION			Cohabitor <br>
                        SEPARATED				Separated from marriage <br>
                        DIVORCED				Divorced after marriage or partnership <br>
                        WIDOW_WIDOWER_PARTNER	Widow or widower after registered partner <br>
                        SEPARATED_PARTNER		Separated after registered partner <br>
                        UNKNOWN 				Unknown host value]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="creditRateCode" type="customerv8:creditRateCodeOutputType">
            <annotation>
              <documentation><![CDATA[The retail customer's credit rate code. <br>
                        Valid values: <br>
                        GOOD    Good customer <br>
                        FAIR    Fairly good customer <br>
                        LESS    Less good customer <br>
                        BAD     No good customer <br>
                        UNKNOWN All other core values]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="income" type="corewscommon:amount">
            <annotation>
              <documentation>The customer's income in year described in incomeYear.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="incomeYear" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>Stating which year the income is from.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="riskClass" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The retail customer's risk class. &lt;br>
                        Typical core values: &lt;br>
                            A2, HC3, B2, MB1, LB4, A1, M, MA2, MB3, LB3.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDetailsReadCommonCustomerType">
        <annotation>
          <documentation>Group containing information pertaining to all types of customers</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="oldCustomerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The old customer number. Only applicable if the customer has changed customer number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerNumberChangeDate" type="date">
            <annotation>
              <documentation>The customer number change date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="createDate" type="date">
            <annotation>
              <documentation>The customer create date, being the date the customer was created.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="enveloping" type="boolean">
            <annotation>
              <documentation>True if customer wants customer statements enveloped, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="openDate" type="date">
            <annotation>
              <documentation>The customer open date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changeDate" type="date">
            <annotation>
              <documentation>The change date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="terminateDate" type="date">
            <annotation>
              <documentation>The customer termination date.</documentation>
            </annotation>
          </element>
          <element name="customerType" type="customerinformationv6:customerTypeOutput">
            <annotation>
              <documentation>The customer's type. &lt;br>
                        Valid values: &lt;br>
                            RETAIL          Retail customer &lt;br>
                            CORPORATE       Corporate customer &lt;br>
                            SELF_EMPLOYD    Both/self employed person &lt;br>
                            UNKNOWN         Unknown host value</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="norwegianLanguageCode" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The ISO-639 Norwegian language code associated with the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="referenceCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The reference code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="deleteAllow" type="boolean">
            <annotation>
              <documentation>True if customer delete is allowed, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="stopChangeProfitCenter" type="boolean">
            <annotation>
              <documentation>True if changing the customer's profit center is not allowed, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lossEvaluationDate" type="date">
            <annotation>
              <documentation>The date when customer loss was evaluated.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="languageCode" type="corewscommon:alphaNumMax3Type">
            <annotation>
              <documentation>The ISO-639 language code associated with the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="weightingCategory" type="corewscommon:alphaNumMax4Type">
            <annotation>
              <documentation>The customer's weighting category.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="hasRiskWeight" type="boolean">
            <annotation>
              <documentation>True if the customer has risk weight, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="riskWeight" type="corewscommon:alphaNumMax4Type">
            <annotation>
              <documentation>The customer's risk weight.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="rating" type="corewscommon:alphaNumMax4Type">
            <annotation>
              <documentation>The customer's rating.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="creditQualityStep" type="corewscommon:alphaNumMax4Type">
            <annotation>
              <documentation>The customer's credit quality.</documentation>
            </annotation>
          </element>
          <element name="classification" type="corewscommon:alphaNumMax20Type">
            <annotation>
              <documentation>The customer's mifid classification.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="classificationDate" type="date">
            <annotation>
              <documentation>Mifid classification date</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="prospectCustomer" type="boolean">
            <annotation>
              <documentation>True if the customer is a prospect customer, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="identityVerified" type="boolean">
            <annotation>
              <documentation>True if customer identity is verified, false if not.</documentation>
            </annotation>
          </element>
          <element name="vipLabel" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The VIP label used to limit access to the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlStatus" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation><![CDATA[The customer's AML status. <br>
                        Typical values: <br>
                        'blank' Not controlled <br>
                        OK      Approved (G) <br>
                        OKX     Approved without AML control (X) <br>
                        ODDU    Enhanced due diligence (EDD) needed (U) <br>
                        ODDF    Ongoing due diligence (ODD) needed (F) <br>
                        EDDU    EDD needed after ODD (E) <br>
                        AVVIS   Rejected (A) <br>
                        EDDAV   Rejected after ODD (H) <br>
                        NVNOK   Approved after name check (N) <br>
                        NVNU    EDD needed after name check (V) <br>
                        IKJOK   Approved name and partly risk score (K) <br>
                        IKJU    EDD needed after name and risk score (L) <br>]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlStatusDate" type="date">
            <annotation>
              <documentation>The date the customer's AML status was registered.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerReadGLDimensionsQualificationType">
        <annotation>
          <documentation>Qualification for operation customerReadGLDimensions.</documentation>
        </annotation>
        <sequence>
          <element name="customerIntId" type="corewscommon:customerIntIdNumeric">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerReadGLDimensionsResultType">
        <annotation>
          <documentation>Returns the the possible GL dimensions registered in iHub Customer for a customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="countryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The country code for the geographical code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="municipalCode" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>The municipal/geographical code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sectorCode" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The sector code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="industrialCode" type="corewscommon:intMax5Type">
            <annotation>
              <documentation>The industrial code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="profitCenter" type="corewscommon:profitCenter">
            <annotation>
              <documentation>Key identifying the profit center the customer is associated with.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerSearchQualificationType">
        <annotation>
          <documentation>Returns a list of customers based on given input.</documentation>
        </annotation>
        <sequence>
          <element name="customerTypeSearch" type="commoncustomerv2:customerTypeSearch">
            <annotation>
              <documentation>The customer's customer type, enum value.</documentation>
            </annotation>
          </element>
          <element name="lastNameShortSearch" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>The customer's last name, first five characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="firstNameShortSearch" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>The customer's first name, first five characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressShortSearch" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's address, first two char.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="dateOfBirth" type="date">
            <annotation>
              <documentation>The customer's birth date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="orgUnit" type="corewscommon:intMax5Type">
            <annotation>
              <documentation>The organization unit the customer is attached to.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerSearchResultType">
        <annotation>
          <documentation>Result of customer search.</documentation>
        </annotation>
        <sequence>
          <element name="customerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
          <element name="customerIntId" type="corewscommon:customerIntId">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
          <element name="legalCustomer" type="boolean">
            <annotation>
              <documentation>True if customer is a legal customer, false if not.</documentation>
            </annotation>
          </element>
          <element name="customerAddressInformation" type="corewscommon:alphaNumMax60Type">
            <annotation>
              <documentation>Customer information includes name and address.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="eMailAddress" type="corewscommon:alphaNumMax120Type">
            <annotation>
              <documentation>E-mail address.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="endDate" type="date">
            <annotation>
              <documentation>The customer's end date.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerListQualificationType">
        <annotation>
          <documentation>Returns a list of customers based on given input.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="profitCenter" type="corewscommon:profitCenter">
            <annotation>
              <documentation>Key identifying the profit center the customer is associated with.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="executiveOfficerLogonId" type="corewscommon:executiveOfficerId">
            <annotation>
              <documentation>The logonId/userId of the customer's executive officer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="accountNumber" type="corewscommon:accountNumberInputType">
            <annotation>
              <documentation>The customer main account agreement account number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="legalCustomer" type="boolean">
            <annotation>
              <documentation>True if customer is a legal customer, false if not.</documentation>
            </annotation>
          </element>
          <choice>
            <element minOccurs="0" name="privateCustomer" type="tns:privateCustomerListQualificationType">
              <annotation>
                <documentation>The private customer specific qualification items.</documentation>
              </annotation>
            </element>
            <element minOccurs="0" name="corporateCustomer" type="tns:corporateCustomerListQualificationType">
              <annotation>
                <documentation>The corporate customer specific qualification items.</documentation>
              </annotation>
            </element>
          </choice>
        </sequence>
      </complexType>
      <complexType name="corporateCustomerListQualificationType">
        <annotation>
          <documentation>Sets the corporate customers specific qualification.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="corporateNameSearch" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The corporate name search string.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressShortSearch" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>Address search characters; typically the first two characters of the address.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="privateCustomerListQualificationType">
        <annotation>
          <documentation>Sets the private customers specific qualification.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="dateOfBirth" type="date">
            <annotation>
              <documentation>The customer's birth date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lastNameSearch" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The customer's last name search string.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="firstNameSearch" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The customer's first name search string.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressShortSearch" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>Address search characters; typically the first two characters of the address.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerListResultType">
        <annotation>
          <documentation>Result of customer list.</documentation>
        </annotation>
        <sequence>
          <element name="customerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer number.</documentation>
            </annotation>
          </element>
          <element name="customerIntId" type="corewscommon:customerIntId">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
          <element name="customerType" type="customerinformationv6:customerTypeOutput">
            <annotation>
              <documentation>The customer's type. &lt;br>
                        Valid values: &lt;br>
                        RETAIL          Retail customer &lt;br>
                        CORPORATE       Corporate customer &lt;br>
                        SELF_EMPLOYD    Both/self employed customer &lt;br>
                        UNKNOWN         All other host values</documentation>
            </annotation>
          </element>
          <element name="legalCustomer" type="boolean">
            <annotation>
              <documentation>True if customer is a legal customer, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="terminateDate" type="date">
            <annotation>
              <documentation>The customer termination date.</documentation>
            </annotation>
          </element>
          <element name="customerAddressInformation" type="corewscommon:alphaNumMax60Type">
            <annotation>
              <documentation>Customer information includes name and address.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateTerminateDate" type="date">
            <annotation>
              <documentation>Corporate terminate date. &lt;br>
                        Typically set when customer type was self employed customer and now is private only.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerUpdateQualificationType">
        <annotation>
          <documentation>Customer update qualification.</documentation>
        </annotation>
        <sequence>
          <element name="internationalCustomerKey" type="corewscommon:internationalCustomerKeyType">
            <annotation>
              <documentation>CustomerKey can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerUpdateModificationType">
        <annotation>
          <documentation>Customer details. &lt;br>
                Some commonCustomerInformation items are mandatory, but additional retail or corporate customer information depends on the customer type in question.  &lt;br>
                Retail customers will have retail customer data, corporate customers will have corporate customer data and self employed customers can have both.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="commonCustomer" type="tns:commonCustomerUpdateType">
            <annotation>
              <documentation>Group containing common customer information.</documentation>
            </annotation>
          </element>
          <choice minOccurs="0">
            <element name="retailCustomer" type="tns:retailCustomerUpdateType">
              <annotation>
                <documentation>Group containing retail customer information.</documentation>
              </annotation>
            </element>
            <element name="corporateCustomer" type="tns:corporateCustomerUpdateType">
              <annotation>
                <documentation>Group containing corporate customer information.</documentation>
              </annotation>
            </element>
            <element name="selfEmployedCustomer" type="tns:selfEmployedCustomerUpdateType">
              <annotation>
                <documentation>Group containing self-employed customer information.</documentation>
              </annotation>
            </element>
          </choice>
          <element minOccurs="0" name="customerConsent" type="tns:consentType">
            <annotation>
              <documentation>The group contains items concerning consent information about the customer.</documentation>
            </annotation>
          </element>
          <element maxOccurs="10" minOccurs="0" name="attribute" type="tns:customerAttributeUpdateType">
            <annotation>
              <documentation>Group containing attribute information for the customer.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerAttributeUpdateType">
        <annotation>
          <documentation>Group containing attribute information for the customer.</documentation>
        </annotation>
        <sequence>
          <element name="attributeType" type="tns:customerAttributeType">
            <annotation>
              <documentation>Group containing attribute information for the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="validToDate" type="date">
            <annotation>
              <documentation>Attribute valid to date. Only current date is legal.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="retailCustomerUpdateType">
        <annotation>
          <documentation>Group containing retail customer information.</documentation>
        </annotation>
        <sequence>
          <element name="retailCustomer" type="tns:retailCustomerType">
            <annotation>
              <documentation>Group containing retail customer information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="retialCustomerEnums" type="tns:retailCustomerEnumType">
            <annotation>
              <documentation>Group containing enum items for retail customer type.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfChildrenUnknown" type="boolean">
            <annotation>
              <documentation>True if number of children is unknown, false if known.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="dateOfDeath" type="date">
            <annotation>
              <documentation>Date of death.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="dateOfDeathReg" type="date">
            <annotation>
              <documentation>Date when the date of death was recorded.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="dateOfDeathLogonId" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>Logonid to the person who registered the date of death.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="corporateCustomerUpdateType">
        <annotation>
          <documentation>Group containing corporate customer information.</documentation>
        </annotation>
        <sequence>
          <element name="corporateCustomer" type="tns:corporateCustomerType">
            <annotation>
              <documentation>Group containing corporate customer information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateCustomerEnums" type="tns:corporateCustomerEnumType">
            <annotation>
              <documentation>Group containing enum items for corporate customer type.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfEmployeesUnknown" type="boolean">
            <annotation>
              <documentation>Set to TRUE if numberOfEmployees is unknown.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfManYearsUnknown" type="boolean">
            <annotation>
              <documentation>Set to TRUE if numberOfManYears is unknown.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="exportShareUnknown" type="boolean">
            <annotation>
              <documentation>Set to TRUE if exportShare is unknown.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="selfEmployedCustomerUpdateType">
        <annotation>
          <documentation>Group containing self-employed customer information.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="retailCustomer" type="tns:retailCustomerUpdateType">
            <annotation>
              <documentation>Group containing retail customer information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateCustomer" type="tns:corporateCustomerUpdateType">
            <annotation>
              <documentation>Group containing corporate customer information.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="commonCustomerUpdateType">
        <annotation>
          <documentation>Group containing common customer information.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="commonCustomer" type="tns:commonCustomerType">
            <annotation>
              <documentation>Group containing common customer information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="commonCustomerEnums" type="tns:commonCustomerEnumType">
            <annotation>
              <documentation>Group containing common enum items for a customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="legalAddress" type="boolean">
            <annotation>
              <documentation>Set to true if you want host legal controls of address related items to be performed. &lt;br>
                        If this item is true then item legalCustomer must also be true.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lossEstimatedDate" type="date">
            <annotation>
              <documentation>A loss estimate was done on this date. Can not be ahead of time.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxDeclaration" type="boolean">
            <annotation>
              <documentation>If true then tax declaration form signed else not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxLiabilityDomestic" type="boolean">
            <annotation>
              <documentation>If true then tax liability for domestic else not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxLiabilityUS" type="boolean">
            <annotation>
              <documentation>If true then tax liability for US else not.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerNumberUpdateQualificationType">
        <annotation>
          <documentation>Customer number update qualification.</documentation>
        </annotation>
        <sequence>
          <element name="customerKey" type="corewscommon:internationalCustomerKeyType">
            <annotation>
              <documentation>CustomerKey can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerNumberUpdateModificationType">
        <annotation>
          <documentation>Customer number update modification items.</documentation>
        </annotation>
        <sequence>
          <element name="newCustomerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The new customer number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProfitCenterUpdateQualificationType">
        <annotation>
          <documentation>Qualified items to update customer profit center details.s</documentation>
        </annotation>
        <sequence>
          <element name="customerKey" type="corewscommon:internationalCustomerKeyType">
            <annotation>
              <documentation>Sets customerKey, it can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProfitCenterUpdateModificationType">
        <annotation>
          <documentation>modification details to update customer profit center details.s</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="profitCenter" type="corewscommon:profitCenter">
            <annotation>
              <documentation>Sets profit center.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changeProfitCenter" type="boolean">
            <annotation>
              <documentation>Sets boolean value whether change profit center is required or not.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerProfitCenterUpdateResultType">
        <annotation>
          <documentation>Result after updating customer profit center</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="customerIntId" type="corewscommon:customerIntIdNumeric">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changeDate" type="date">
            <annotation>
              <documentation>The customer profit center last changed date</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="changeLogonId" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The customer profit center last changed logon id</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerCreateQualificationType">
        <annotation>
          <documentation>Customer information create qualification.</documentation>
        </annotation>
        <sequence>
          <element name="customerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer number to create customer information for.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerCreateDetailsType">
        <annotation>
          <documentation>Customer details. &lt;br>
                Some commonCustomerInformation items are mandatory, but additional retail or corporate customer information depends on what customer type in question.  &lt;br>
                Retail customers will have retail customer data, corporate customers will have corporate customer data and self employed customers can have both.       &lt;br>
                Minimum requirements are at least two characters in lastName or corporateName.</documentation>
        </annotation>
        <sequence>
          <element name="commonCustomer" type="tns:commonCustomerCreateType">
            <annotation>
              <documentation>Group containing common customer information.</documentation>
            </annotation>
          </element>
          <choice>
            <element name="retailCustomer" type="tns:retailCustomerCreateType">
              <annotation>
                <documentation>Group containing retail customer information.</documentation>
              </annotation>
            </element>
            <element name="corporateCustomer" type="tns:corporateCustomerCreateType">
              <annotation>
                <documentation>Group containing corporate customer information.</documentation>
              </annotation>
            </element>
            <element name="selfEmployedCustomer" type="tns:selfEmployedCustomerCreateType">
              <annotation>
                <documentation>Group containing self-employed customer information.</documentation>
              </annotation>
            </element>
          </choice>
          <element minOccurs="0" name="customerConsent" type="tns:consentType">
            <annotation>
              <documentation>The group contains items concerning consent information about the customer.</documentation>
            </annotation>
          </element>
          <element maxOccurs="10" minOccurs="0" name="attribute" type="tns:customerAttributeType">
            <annotation>
              <documentation>Group containing attribute information for the customer.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerAttributeType">
        <annotation>
          <documentation>Group containing attribute information for the customer.</documentation>
        </annotation>
        <sequence>
          <element name="attributeTypeCode" type="customerv8:attributeTypeCode">
            <annotation>
              <documentation>Attribute type code. &lt;br>
                        Valid values: &lt;br>
                        RATING              Rating                  (host vale "RATIN")     &lt;br>
                        CREDIT              Credit quality tier     (host vale "KRETR")     &lt;br>
                        WEIGHTING           Weighting category      (host vale "VEKAT")     &lt;br>
                        RISK                Risk weighting          (host vale "RISVE")</documentation>
            </annotation>
          </element>
          <element name="attrTypeData" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation><![CDATA[Attribute type data.                                                                                <br>
                        When attribute-type is "RATING", valid values are "ECA" and "ECAI".                                 <br>
                        When attribute-type "CREDIT" can only be filled in if also attribute-type "RATING" is filled in.    <br>
                            -   If "RATING" value is "ECA", "RATING" valid values are "0" to "7".                           <br>
                            -   If "RATING" value is "ECAI", "RATING" valid values are "1" to "6".                          <br>
                        When attribute-type is "WEIGHTING", valid value is "SMB".                                           <br>
                        When attribute-type is "RISK", valid value is "0", "10", "20", "35", "50", "75", "100" and "150".]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="consentType">
        <annotation>
          <documentation>The group contains items concerning consent information about the customer.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="wantsMarketing" type="boolean">
            <annotation>
              <documentation>Tells whether customer wants advertisement or not.    &lt;br>
                        True : The customer agrees.                           &lt;br>
                        False: The customer does not agree.                   &lt;br>
                        NULL : Unacquainted, data not collected.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="selfEmployedCustomerCreateType">
        <annotation>
          <documentation>Group containing self-employed customer information.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="retailCustomer" type="tns:retailCustomerCreateType">
            <annotation>
              <documentation>Group containing retail customer information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateCustomer" type="tns:corporateCustomerCreateType">
            <annotation>
              <documentation>Group containing corporate customer information.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="corporateCustomerCreateType">
        <annotation>
          <documentation>Group containing corporate customer information.</documentation>
        </annotation>
        <sequence>
          <element name="corporateCustomer" type="tns:corporateCustomerType">
            <annotation>
              <documentation>Group containing corporate customer information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateCustomerEnums" type="tns:corporateCustomerEnumType">
            <annotation>
              <documentation>Group containing enum items for corporate customer type.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="corporateCustomerEnumType">
        <annotation>
          <documentation>Group containing enum items for corporate customer type.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="creditRateCode" type="customerv8:creditRateCodeInputType">
            <annotation>
              <documentation>The credit rate code. &lt;br>
                        Enum value: &lt;br>
                        GOOD            Good customer           (host vale "0").    &lt;br>
                        FAIR            Fairly good customer    (host vale "1").    &lt;br>
                        LESS            Less good customer      (host vale "2").    &lt;br>
                        BAD             No good customer        (host vale "3").</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="corporateCustomerType">
        <annotation>
          <documentation>Group containing corporate customer information.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="corporateName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>Corporate name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortNames" type="tns:shortNameType">
            <annotation>
              <documentation>Group containing various short names.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corporateForm" type="corewscommon:alphaNumMax4Type">
            <annotation>
              <documentation>The type of company. &lt;br>
                        Typical core values: &lt;br>
                        AS, DA, ENK, BEDR, NUF, FLI, ANNA, AAFY, ANS.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="industryCode" type="corewscommon:intMax5Type">
            <annotation>
              <documentation>Type of industry (see bank codes handbook for valid values).</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="businessRegistrationNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>Official business register number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="producerNumber" type="corewscommon:alphaNumMax20Type">
            <annotation>
              <documentation>Producer number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="corpCustEstablishDate" type="date">
            <annotation>
              <documentation>Establish date of the corporate part of the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="riskClass" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The risk class. &lt;br>
                        Typical core values: &lt;br>
                        A2, HC3, B2, MB1, LB4, A1, M, MA2, MB3, LB3.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="stockExchangeRegistered" type="boolean">
            <annotation>
              <documentation>True if corporate is registered at the stock exchange.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lowVolumeOwners" type="boolean">
            <annotation>
              <documentation>True if corporate has many low volume share holders.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfEmployees" type="corewscommon:intMax7Type">
            <annotation>
              <documentation>Number of employees.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfManYears" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>Number of man years (FTEs: Full Time Equivalents).</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="exportShare" type="corewscommon:rate">
            <annotation>
              <documentation>Export share.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="income" type="tns:incomeType">
            <annotation>
              <documentation>Group containing income specific information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxClassification" type="corewscommon:alphaNumMax1Type">
            <annotation>
              <documentation>Returns tax classification.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="exchangeCountryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>Iso Country code for the exchange location.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="exchangeName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>Name of the exchange.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="countryCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>Country code for the country the company is registered in.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="publicOwned" type="boolean">
            <annotation>
              <documentation>If true the company is mostly public owned.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="incomeType">
        <annotation>
          <documentation>Group containing income specific information.</documentation>
        </annotation>
        <sequence>
          <element name="incomeAmount" type="corewscommon:longMax13Type">
            <annotation>
              <documentation>Yearly income amount.</documentation>
            </annotation>
          </element>
          <element name="incomeYear" type="corewscommon:intMax4Type">
            <annotation>
              <documentation>Income year.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="shortNameType">
        <annotation>
          <documentation>Group containing various short names.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="shortName15" type="corewscommon:alphaNumMax15Type">
            <annotation>
              <documentation>The customer's short name with max length of 15 characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName21" type="corewscommon:alphaNumMax21Type">
            <annotation>
              <documentation>The customer's short name with max length of 21 characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName26" type="corewscommon:alphaNumMax26Type">
            <annotation>
              <documentation>The customer's short name with max length of 26 characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName36" type="corewscommon:alphaNumMax36Type">
            <annotation>
              <documentation>The customer's short name with max length of 36 characters.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="shortNameTypes">
        <annotation>
          <documentation>Group containing various short names.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="shortName15" type="corewscommon:alphaNumMax15Type">
            <annotation>
              <documentation>The customer's short name with max length of 15 characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName19" type="corewscommon:alphaNumMax19Type">
            <annotation>
              <documentation>The customer's short name with max length of 19 characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName26" type="corewscommon:alphaNumMax26Type">
            <annotation>
              <documentation>The customer's short name with max length of 26 characters.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortName36" type="corewscommon:alphaNumMax36Type">
            <annotation>
              <documentation>The customer's short name with max length of 36 characters.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="retailCustomerCreateType">
        <annotation>
          <documentation>Group containing retail customer information.</documentation>
        </annotation>
        <sequence>
          <element name="retailCustomer" type="tns:retailCustomerType">
            <annotation>
              <documentation>Group containing retail customer information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="retailCustomerEnums" type="tns:retailCustomerEnumType">
            <annotation>
              <documentation>Group containing enum items for retail customer type.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="retailCustomerEnumType">
        <annotation>
          <documentation>Group containing enum items for retail customer type.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="maritalStatus" type="retailcustomerv4:maritalStatusInputType">
            <annotation>
              <documentation><![CDATA[The customer's marital status. <br>
                        Valid values: <br>
                        MARRIED					Married <br>
                        UNMARRIED				Unmarried/single <br>
                        WIDOW_WIDOWER			Widow or widower after marriage <br>
                        REGISTERED_PARTNER		Partner or equal sex marriage <br>
                        COHABITATION			Cohabitor <br>
                        SEPARATED				Separated from marriage <br>
                        DIVORCED				Divorced after marriage or partnership <br>
                        WIDOW_WIDOWER_PARTNER	Widow or widower after registered partner <br>
                        SEPARATED_PARTNER		Separated after registered partner]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="gender" type="retailcustomerv4:genderInputType">
            <annotation>
              <documentation>The customer's gender. &lt;br>
                        Valid values: &lt;br>
                        MALE         Male &lt;br>
                        FEMALE       Female</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="creditRateCode" type="customerv8:creditRateCodeInputType">
            <annotation>
              <documentation>CreditRate code. &lt;br>
                            Valid values: &lt;br>
                            GOOD            Good customer           (host vale "0").    &lt;br>
                            FAIR            Fairly good customer    (host vale "1").    &lt;br>
                            LESS            Less good customer      (host vale "2").    &lt;br>
                            BAD             No good customer        (host vale "3").</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="retailCustomerType">
        <annotation>
          <documentation>Group containing retail customer specific information.</documentation>
        </annotation>
        <sequence>
          <element name="lastName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The customer's last name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="firstName" type="corewscommon:alphaNumMax80Type">
            <annotation>
              <documentation>The customer's first name.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="stopChangeName" type="boolean">
            <annotation>
              <documentation>True if change name is not allowed.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="shortNames" type="tns:shortNameType">
            <annotation>
              <documentation>Group containing various short names.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="occupation" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer's occupation.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="dateOfBirth" type="date">
            <annotation>
              <documentation>Date of birth.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="birthPlace" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>Place of birth.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="countryOfBirth" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>Nationality code of country where customer was born, being a unique identifier of a country. &lt;br>
                        Valid values support ISO 3166-2.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfChildren" type="corewscommon:intMax2Type">
            <annotation>
              <documentation>The customer's number of children.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="riskClass" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The risk class. &lt;br>
                        Typical core values: &lt;br>
                        LA2, MC0, LB2, B1, MB2, A1, B4.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="income" type="tns:incomeType">
            <annotation>
              <documentation>Group containing income specific information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nationalRegisterStatusCode" type="corewscommon:alphaNumMax1Type">
            <annotation>
              <documentation><![CDATA[The customer code in the national register(DSF). <br>
                        Typical values of National Register (DSF)  <br>
                            1   Resident. If the customer has a D-number then active <br>
                            2   Moved out(Utflyttet) <br>
                            3   Emigtated <br>
                            4   Disappeared. If the customer has a D-number then not active <br>
                            5   Dead <br>
                            6   Expired national identity number <br>
                            7   Blocked strictly confidential <br>
                            8   Commuter]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="nationalRegisterNameDate" type="date">
            <annotation>
              <documentation>The customers name in the National Register was last changed on this date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="industryCode" type="corewscommon:intMax5Type">
            <annotation>
              <documentation>Type of industry (see bank codes handbook for valid values).</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship1" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's primary citizenship.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship2" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's secondary citizenship.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship3" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's third citizenship registration.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship4" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's fourth citizenship registration.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="citizenship5" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>The customer's fifth citizenship registration.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="socioEconomicStatus" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>The type code for the customer's socio-economical status.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="commonCustomerCreateType">
        <annotation>
          <documentation>Group containing common customer information.</documentation>
        </annotation>
        <sequence>
          <element name="commonCustomer" type="tns:commonCustomerType">
            <annotation>
              <documentation>Group containing common customer information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="commonCustomerEnums" type="tns:commonCustomerEnumType">
            <annotation>
              <documentation>Group containing enum items for common customer type.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="profitCenter" type="corewscommon:profitCenter">
            <annotation>
              <documentation>Key of the profit center.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="stopChangeProfitCenter" type="boolean">
            <annotation>
              <documentation>True if changing the customer's profit center is not allowed, false if not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="declaration" type="boolean">
            <annotation>
              <documentation>If true then declaration form signed else not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="declarationDate" type="date">
            <annotation>
              <documentation>Returns declaration form signed date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxLiabilityDomestic" type="boolean">
            <annotation>
              <documentation>If true then tax liability for domestic else not.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxLiabilityUS" type="boolean">
            <annotation>
              <documentation>If true then tax liability for US else not.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="commonCustomerEnumType">
        <annotation>
          <documentation>Group containing enum items for common customer type.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="norwegianLanguageCode" type="customerv8:languageCode">
            <annotation>
              <documentation>The ISO-639 Norwegian language code associated with the customer. &lt;br>
                        Valid values:   &lt;br>
                        NOB             Norwegian bokmål        &lt;br>
                        NNO             Norwegian nynorsk</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sectorOwnerCode" type="customerv8:sectorOwnerCode">
            <annotation>
              <documentation>Sector owner code tells which relation the customer has to the bank.                            &lt;br>
                        Valid values:   Description:                                                                    &lt;br>
                        NO              No sector owner                                                                 &lt;br>
                        ASSOCIATED      Associated company, meaning the bank owns a certain percentage of the company   &lt;br>
                        SUBSIDIARY      Subsidiary company, meaning a company controlled by a holding company</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlStatus" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation><![CDATA[The customer's AML status. <br>
                        Typical values: <br>
                        'blank' Not controlled <br>
                        OK      Approved (G) <br>
                        OKX     Approved without AML control (X) <br>
                        ODDU    Enhanced due diligence (EDD) needed (U) <br>
                        ODDF    Ongoing due diligence (ODD) needed (F) <br>
                        EDDU    EDD needed after ODD (E) <br>
                        AVVIS   Rejected (A) <br>
                        EDDAV   Rejected after ODD (H) <br>
                        NVNOK   Approved after name check (N) <br>
                        NVNU    EDD needed after name check (V) <br>
                        IKJOK   Approved name and partly risk score (K) <br>
                        IKJU    EDD needed after name and risk score (L) <br>]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="commonCustomerType">
        <annotation>
          <documentation>Group containing common customer information.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="openDate" type="date">
            <annotation>
              <documentation>Customer open date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="vipLabel" type="corewscommon:intMax1Type">
            <annotation>
              <documentation>VIP label used to limit access to the customer. &lt;br>
                        Organizations define their own set of values.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="legalCustomer" type="boolean">
            <annotation>
              <documentation>Set to true if you want host legal controls of the customer to be performed. &lt;br>
                        The host controls will make sure the customer is prepared for legal roles.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="prospectCustomer" type="boolean">
            <annotation>
              <documentation>True if prospect customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="identityVerified" type="boolean">
            <annotation>
              <documentation>True if customer identity has been verified.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sectorCode" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>Sector code (see bank codes handbook for valid values).</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="referenceCode" type="corewscommon:alphaNumMax2Type">
            <annotation>
              <documentation>Reference code.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="bankruptDate" type="date">
            <annotation>
              <documentation>Customer bankrupt date.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="deleteAllow" type="boolean">
            <annotation>
              <documentation>True if customer delete is allowed.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="enveloping" type="boolean">
            <annotation>
              <documentation>True if customer wants customer statements enveloped.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxAbroad" type="boolean">
            <annotation>
              <documentation>True if customer pays tax abroad. This information is supplied by the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="languageCode" type="corewscommon:alphaNumMax3Type">
            <annotation>
              <documentation>The ISO-639 language code associated with the customer.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlRenewalExpiryDate" type="date">
            <annotation>
              <documentation>Last date for renewal of AML.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="legalType" type="corewscommon:alphaNumMax5Type">
            <annotation>
              <documentation>The customers legal status.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerCreateResultType">
        <annotation>
          <documentation>Customer information create result items.</documentation>
        </annotation>
        <sequence>
          <element name="customerIntId" type="corewscommon:customerIntIdNumeric">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxLiabilityDomesticDate" type="date">
            <annotation>
              <documentation>Customer unlimited domestic tax liability date questioned.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="taxLiabilityUSDate" type="date">
            <annotation>
              <documentation>Customer tax liability to USA date questioned.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="commonCustomerResultType" type="tns:commonCustomerResultType">
            <annotation>
              <documentation>Common Customer result type.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerNumberTemporaryCreateQualificationType">
        <annotation>
          <documentation>Qualified items for temporary customer number creation.</documentation>
        </annotation>
        <sequence>
          <element name="customerType" type="customerv8:customerInputType">
            <annotation>
              <documentation>The customer's type. &lt;br>
                        Valid values:  &lt;br>
                        RETAIL        Retail customer               (host vale "P")        &lt;br>
                        CORPORATE     Corporate customer            (host vale "N")</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="sectorCode" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>Sets the sector code.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerNumberTemporaryCreateResultType">
        <annotation>
          <documentation>Result of customer number temporary create operation.</documentation>
        </annotation>
        <sequence>
          <element name="customerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The temporarily created customer number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerExistValidateQualificationType">
        <annotation>
          <documentation>Qualified items to validate whether customer exists or not.</documentation>
        </annotation>
        <sequence>
          <element name="customerKey" type="corewscommon:internationalCustomerKeyType">
            <annotation>
              <documentation>Sets customerKey, it can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerExistValidateResultType">
        <annotation>
          <documentation>Result of validate customer exist operation.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="customerIntId" type="corewscommon:customerIntIdNumeric">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="customerExists" type="boolean">
            <annotation>
              <documentation>Returns boolean value to indicate the existence of a customer. &lt;br>
                        If 'J' then true indicating customer exists. &lt;br>
                        If 'N' then false indicating customer does not exists.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerLegalValidateQualificationType">
        <annotation>
          <documentation>Qualified items to validate whether customer is legal customer or not.</documentation>
        </annotation>
        <sequence>
          <element name="customerKey" type="corewscommon:internationalCustomerKeyType">
            <annotation>
              <documentation>Sets customerKey, it can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="listLegalShortComings" type="boolean">
            <annotation>
              <documentation>List Legal shortcomings.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerLegalValidateResultType">
        <annotation>
          <documentation>Result after validation whether the customer is legal customer or not.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="customerIntId" type="corewscommon:customerIntIdNumeric">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="legalCustomer" type="boolean">
            <annotation>
              <documentation>True if customer is a legal customer, false if not.</documentation>
            </annotation>
          </element>
          <element maxOccurs="99" minOccurs="0" name="legalShortComing" type="corewscommon:alphaNumMax10Type">
            <annotation>
              <documentation>Short description of a legal shortcoming.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDeleteQualificationType">
        <annotation>
          <documentation>Qualified items to validate whether customer can be deleted or not.</documentation>
        </annotation>
        <sequence>
          <element name="customerKey" type="corewscommon:customerKeyType">
            <annotation>
              <documentation>Sets customerKey, it can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDefaultReadQualificationType">
        <annotation>
          <documentation>Reads customer's default details</documentation>
        </annotation>
        <sequence>
          <element name="customerKey" type="corewscommon:customerKeyType">
            <annotation>
              <documentation>Sets customerKey, it can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDefaultReadResultType">
        <annotation>
          <documentation>Returns customer's default details</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="engagementCredit" type="corewscommon:amount">
            <annotation>
              <documentation>Returns engagement credit</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="engagementDebit" type="corewscommon:amount">
            <annotation>
              <documentation>Returns engagement debit</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amountCreditLimit" type="corewscommon:amount">
            <annotation>
              <documentation>Returns total amount credit limit</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="createdDate" type="date">
            <annotation>
              <documentation>Returns customer created date</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfActiveRKAccounts" type="corewscommon:intMax8Type">
            <annotation>
              <documentation>Returns number of active RK accounts</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfActiveULAccounts" type="corewscommon:intMax8Type">
            <annotation>
              <documentation>Returns number of active UL accounts</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="depositDetails" type="tns:customerDefaultReadDepositDetailsType">
            <annotation>
              <documentation>Returns deposit details of a customer</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="loanDetails" type="tns:customerDefaultReadLoanDetailsType">
            <annotation>
              <documentation>Returns loan details of a customer</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDefaultReadLoanDetailsType">
        <annotation>
          <documentation>Returns loan details of a customer</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="amountArrears" type="corewscommon:amount">
            <annotation>
              <documentation>Returns loan amount arrears of a customer</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="debtCollectionStatus" type="customerv8:debtCollectionStatusOutput">
            <annotation>
              <documentation><![CDATA[Returns debt collection status <br>
                        Valid values:                    Description <br>
                        NODEBTCOLLECTION                 No debt collection(account not in arrears) <br>
                        TRANSFEREDTODEBTCOLLECTOR        Loan sent to debt collection <br>
                        TRANSFERTODEBTCOLLECTOR          Loan sent to debt collection automatically. <br>
                        NOTRANSFERTODEBTCOLLECTOR        Bank has decided that this loan is not to be sent to debt collection for now. <br>
                        TRANSFERAUTOMATICTODEBTCOLLECTOR Loan sent to debt collection automatically. Only possible in the periode fra 41 days to 55 days after arrears first occurred.<br>
                        UNKNOWN                          Unknown host value <br>]]]]>><![CDATA[</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amountReminder1" type="corewscommon:intMax8Type">
            <annotation>
              <documentation>Returns amount reminder 1</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amountReminder2" type="corewscommon:intMax8Type">
            <annotation>
              <documentation>Returns amount reminder 2</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amountReminder3" type="corewscommon:intMax8Type">
            <annotation>
              <documentation>Returns amount reminder 3</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lastReminderCategory" type="corewscommon:intMax1Type">
            <annotation>
              <documentation>Returns last reminder category</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lastReminderDate" type="date">
            <annotation>
              <documentation>Returns last reminder date</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="alertCode" type="corewscommon:alphaNumMax1Type">
            <annotation>
              <documentation>Returns alert code</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfAlertCodes" type="corewscommon:intMax3Type">
            <annotation>
              <documentation>Returns number of alert code</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="oldestOpeningDate" type="date">
            <annotation>
              <documentation>Returns oldest opening date</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfLoanWithArrears" type="corewscommon:intMax8Type">
            <annotation>
              <documentation>Returns number of loan with arrears</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDefaultReadDepositDetailsType">
        <annotation>
          <documentation>Returns deposit details of a customer</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="amountOverdraft" type="corewscommon:amount">
            <annotation>
              <documentation>Returns over draft amount</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amountReminder1" type="corewscommon:intMax6Type">
            <annotation>
              <documentation>Returns amount reminder 1</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amountReminder2" type="corewscommon:intMax6Type">
            <annotation>
              <documentation>Returns amount reminder 2</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amountReminder3" type="corewscommon:intMax6Type">
            <annotation>
              <documentation>Returns amount reminder 3</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lastReminderCategory" type="corewscommon:intMax1Type">
            <annotation>
              <documentation>Returns last reminder category</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="lastReminderDate" type="date">
            <annotation>
              <documentation>Returns last reminder date</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="oldestOpeningDate" type="date">
            <annotation>
              <documentation>Returns oldest opening date</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="alertCode" type="corewscommon:alphaNumMax1Type">
            <annotation>
              <documentation>Returns alert code</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfAlertCodes" type="corewscommon:intMax3Type">
            <annotation>
              <documentation>Returns number of alert codes</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="numberOfDaysOverdraft" type="corewscommon:intMax5Type">
            <annotation>
              <documentation>Returns number of days overdraft</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDirectParameterValueListQualificationType">
        <annotation>
          <documentation>Lists direct parameter values for customer from the customer system.</documentation>
        </annotation>
        <sequence>
          <element maxOccurs="unbounded" name="customerDirectParameterValueListDetails" type="tns:customerDirectParameterValueListDetailsType">
            <annotation>
              <documentation>Details to be queried</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDirectParameterValueListDetailsType">
        <annotation>
          <documentation>Group containing Customer details to be queried</documentation>
        </annotation>
        <sequence>
          <element name="customerKey" type="corewscommon:customerKeyType">
            <annotation>
              <documentation>CustomerKey can be supplied by either the customer's internal id or as the customer's customer number.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="parameterValueIntId" type="corewscommon:intId">
            <annotation>
              <documentation>The parameter value int id to be queried.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="parameterId" type="corewscommon:alphaNumMax15Type">
            <annotation>
              <documentation>The parameter id to be queried.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="parameterSequenceNumber" type="corewscommon:sequenceNumber">
            <annotation>
              <documentation>The parameter sequence number to be queried.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerDirectParameterValueListResultType">
        <annotation>
          <documentation>Returns customers direct parameter value list</documentation>
        </annotation>
        <sequence>
          <element name="customerIntId" type="corewscommon:customerIntIdNumeric">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="parameterValueIntId" type="corewscommon:intId">
            <annotation>
              <documentation>Returns parameter value int id</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="parameterValueName" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>Returns parameter value name</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="parameterId" type="corewscommon:alphaNumMax15Type">
            <annotation>
              <documentation>Returns parameter value Id</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="parameterSequenceNumber" type="corewscommon:sequenceNumber">
            <annotation>
              <documentation>Returns parameter sequence number</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="registeredValue" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>Returns registered value</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="standardValue" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>Returns standard value</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerInternalIdentificationAcquireQualificationType">
        <annotation>
          <documentation>Reads internal id of a customer</documentation>
        </annotation>
        <sequence>
          <element name="customerNumber" type="corewscommon:alphaNumMax35Type">
            <annotation>
              <documentation>The customer number to be queried.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="customerInternalIdentificationAcquireResultType">
        <annotation>
          <documentation>Returns internal id of a customer</documentation>
        </annotation>
        <sequence>
          <element name="customerIntId" type="corewscommon:customerIntIdNumeric">
            <annotation>
              <documentation>The internal customer identifier.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="commonCustomerResultType">
        <annotation>
          <documentation>Customer information create result items.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="amlChangeLogonId" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The logonId/userId for the bank employee/system user that changed the AML information.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlRenewalLogonId" type="corewscommon:alphaNumMax7Type">
            <annotation>
              <documentation>The logonId/userId for the bank employee/system user that changed the amlRenewalExpiryDate.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="amlRenewalChangeDate" type="date">
            <annotation>
              <documentation>The date when the amlRenewalExpiryDate was set.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
    </schema>
  </wsdl:types>
  <wsdl:message name="customerProfitCenterUpdateRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerProfitCenterUpdateRequest" name="customerProfitCenterUpdateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerCreateFault">
    <wsdl:part element="sch0:customerCreateFault" name="customerCreateFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerReadRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerReadRequest" name="customerReadRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDetailsReadRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerDetailsReadRequest" name="customerDetailsReadRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerInternalIdentificationAcquireResponse">
    <wsdl:part element="sch0:customerInternalIdentificationAcquireResponse" name="customerInternalIdentificationAcquireResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerSearchFault">
    <wsdl:part element="sch0:customerSearchFault" name="customerSearchFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerNumberTemporaryCreateFault">
    <wsdl:part element="sch0:customerNumberTemporaryCreateFault" name="customerNumberTemporaryCreateFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDeleteRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerDeleteRequest" name="customerDeleteRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerProspectCreateResponse">
    <wsdl:part element="sch0:customerProspectCreateResponse" name="customerProspectCreateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDefaultReadResponse">
    <wsdl:part element="sch0:customerDefaultReadResponse" name="customerDefaultReadResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerSearchRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerSearchRequest" name="customerSearchRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerNumberUpdateRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerNumberUpdateRequest" name="customerNumberUpdateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerLegalValidateResponse">
    <wsdl:part element="sch0:customerLegalValidateResponse" name="customerLegalValidateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDetailsReadResponse">
    <wsdl:part element="sch0:customerDetailsReadResponse" name="customerDetailsReadResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerUpdateFault">
    <wsdl:part element="sch0:customerUpdateFault" name="customerUpdateFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerAdvisorReadResponse">
    <wsdl:part element="sch0:customerAdvisorReadResponse" name="customerAdvisorReadResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerReadGLDimensionsFault">
    <wsdl:part element="sch0:customerReadGLDimensionsFault" name="customerReadGLDimensionsFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerNumberTemporaryCreateRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerNumberTemporaryCreateRequest" name="customerNumberTemporaryCreateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerListFault">
    <wsdl:part element="sch0:customerListFault" name="customerListFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerTagsReadFault">
    <wsdl:part element="sch0:customerTagsReadFault" name="customerTagsReadFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerTagsReadRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerTagsReadRequest" name="customerTagsReadRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDetailsReadFault">
    <wsdl:part element="sch0:customerDetailsReadFault" name="customerDetailsReadFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDeleteFault">
    <wsdl:part element="sch0:customerDeleteFault" name="customerDeleteFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerCreateResponse">
    <wsdl:part element="sch0:customerCreateResponse" name="customerCreateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerExistValidateResponse">
    <wsdl:part element="sch0:customerExistValidateResponse" name="customerExistValidateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerProspectCreateFault">
    <wsdl:part element="sch0:customerProspectCreateFault" name="customerProspectCreateFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerReadKeyResponse">
    <wsdl:part element="sch0:customerReadKeyResponse" name="customerReadKeyResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerReadFault">
    <wsdl:part element="sch0:customerReadFault" name="customerReadFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerExistValidateRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerExistValidateRequest" name="customerExistValidateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerUpdateResponse">
    <wsdl:part element="sch0:customerUpdateResponse" name="customerUpdateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDirectParameterValueListRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerDirectParameterValueListRequest" name="customerDirectParameterValueListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerNumberUpdateFault">
    <wsdl:part element="sch0:customerNumberUpdateFault" name="customerNumberUpdateFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerReadGLDimensionsRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerReadGLDimensionsRequest" name="customerReadGLDimensionsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerProfitCenterUpdateFault">
    <wsdl:part element="sch0:customerProfitCenterUpdateFault" name="customerProfitCenterUpdateFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerCreateRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerCreateRequest" name="customerCreateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerProfitCenterUpdateResponse">
    <wsdl:part element="sch0:customerProfitCenterUpdateResponse" name="customerProfitCenterUpdateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerSearchResponse">
    <wsdl:part element="sch0:customerSearchResponse" name="customerSearchResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDefaultReadFault">
    <wsdl:part element="sch0:customerDefaultReadFault" name="customerDefaultReadFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerListResponse">
    <wsdl:part element="sch0:customerListResponse" name="customerListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerAdvisorReadFault">
    <wsdl:part element="sch0:customerAdvisorReadFault" name="customerAdvisorReadFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDeleteResponse">
    <wsdl:part element="sch0:customerDeleteResponse" name="customerDeleteResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDirectParameterValueListResponse">
    <wsdl:part element="sch0:customerDirectParameterValueListResponse" name="customerDirectParameterValueListResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDirectParameterValueListFault">
    <wsdl:part element="sch0:customerDirectParameterValueListFault" name="customerDirectParameterValueListFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerDefaultReadRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerDefaultReadRequest" name="customerDefaultReadRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerLegalValidateFault">
    <wsdl:part element="sch0:customerLegalValidateFault" name="customerLegalValidateFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerListRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerListRequest" name="customerListRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerAdvisorReadRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerAdvisorReadRequest" name="customerAdvisorReadRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerLegalValidateRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerLegalValidateRequest" name="customerLegalValidateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerNumberTemporaryCreateResponse">
    <wsdl:part element="sch0:customerNumberTemporaryCreateResponse" name="customerNumberTemporaryCreateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerTagsReadResponse">
    <wsdl:part element="sch0:customerTagsReadResponse" name="customerTagsReadResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerReadKeyFault">
    <wsdl:part element="sch0:customerReadKeyFault" name="customerReadKeyFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerInternalIdentificationAcquireFault">
    <wsdl:part element="sch0:customerInternalIdentificationAcquireFault" name="customerInternalIdentificationAcquireFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerReadResponse">
    <wsdl:part element="sch0:customerReadResponse" name="customerReadResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerUpdateRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerUpdateRequest" name="customerUpdateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerExistValidateFault">
    <wsdl:part element="sch0:customerExistValidateFault" name="customerExistValidateFault"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerReadGLDimensionsResponse">
    <wsdl:part element="sch0:customerReadGLDimensionsResponse" name="customerReadGLDimensionsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerProspectCreateRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerProspectCreateRequest" name="customerProspectCreateRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerNumberUpdateResponse">
    <wsdl:part element="sch0:customerNumberUpdateResponse" name="customerNumberUpdateResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerInternalIdentificationAcquireRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerInternalIdentificationAcquireRequest" name="customerInternalIdentificationAcquireRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="customerReadKeyRequest">
    <wsdl:part element="sch2:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="sch0:customerReadKeyRequest" name="customerReadKeyRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="CUSSCustomerService_V20_2PortType">
    <wsdl:operation name="customerProfitCenterUpdate">
      <wsdl:input message="sch0:customerProfitCenterUpdateRequest" name="customerProfitCenterUpdateRequest"></wsdl:input>
      <wsdl:output message="sch0:customerProfitCenterUpdateResponse" name="customerProfitCenterUpdateResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerProfitCenterUpdateFault" name="customerProfitCenterUpdateFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerCreate">
      <wsdl:input message="sch0:customerCreateRequest" name="customerCreateRequest"></wsdl:input>
      <wsdl:output message="sch0:customerCreateResponse" name="customerCreateResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerCreateFault" name="customerCreateFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerRead">
      <wsdl:input message="sch0:customerReadRequest" name="customerReadRequest"></wsdl:input>
      <wsdl:output message="sch0:customerReadResponse" name="customerReadResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerReadFault" name="customerReadFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerDetailsRead">
      <wsdl:input message="sch0:customerDetailsReadRequest" name="customerDetailsReadRequest"></wsdl:input>
      <wsdl:output message="sch0:customerDetailsReadResponse" name="customerDetailsReadResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerDetailsReadFault" name="customerDetailsReadFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerInternalIdentificationAcquire">
      <wsdl:input message="sch0:customerInternalIdentificationAcquireRequest" name="customerInternalIdentificationAcquireRequest"></wsdl:input>
      <wsdl:output message="sch0:customerInternalIdentificationAcquireResponse" name="customerInternalIdentificationAcquireResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerInternalIdentificationAcquireFault" name="customerInternalIdentificationAcquireFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerSearch">
      <wsdl:input message="sch0:customerSearchRequest" name="customerSearchRequest"></wsdl:input>
      <wsdl:output message="sch0:customerSearchResponse" name="customerSearchResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerSearchFault" name="customerSearchFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerNumberTemporaryCreate">
      <wsdl:input message="sch0:customerNumberTemporaryCreateRequest" name="customerNumberTemporaryCreateRequest"></wsdl:input>
      <wsdl:output message="sch0:customerNumberTemporaryCreateResponse" name="customerNumberTemporaryCreateResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerNumberTemporaryCreateFault" name="customerNumberTemporaryCreateFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerDelete">
      <wsdl:input message="sch0:customerDeleteRequest" name="customerDeleteRequest"></wsdl:input>
      <wsdl:output message="sch0:customerDeleteResponse" name="customerDeleteResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerDeleteFault" name="customerDeleteFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerProspectCreate">
      <wsdl:input message="sch0:customerProspectCreateRequest" name="customerProspectCreateRequest"></wsdl:input>
      <wsdl:output message="sch0:customerProspectCreateResponse" name="customerProspectCreateResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerProspectCreateFault" name="customerProspectCreateFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerDefaultRead">
      <wsdl:input message="sch0:customerDefaultReadRequest" name="customerDefaultReadRequest"></wsdl:input>
      <wsdl:output message="sch0:customerDefaultReadResponse" name="customerDefaultReadResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerDefaultReadFault" name="customerDefaultReadFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerNumberUpdate">
      <wsdl:input message="sch0:customerNumberUpdateRequest" name="customerNumberUpdateRequest"></wsdl:input>
      <wsdl:output message="sch0:customerNumberUpdateResponse" name="customerNumberUpdateResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerNumberUpdateFault" name="customerNumberUpdateFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerLegalValidate">
      <wsdl:input message="sch0:customerLegalValidateRequest" name="customerLegalValidateRequest"></wsdl:input>
      <wsdl:output message="sch0:customerLegalValidateResponse" name="customerLegalValidateResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerLegalValidateFault" name="customerLegalValidateFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerUpdate">
      <wsdl:input message="sch0:customerUpdateRequest" name="customerUpdateRequest"></wsdl:input>
      <wsdl:output message="sch0:customerUpdateResponse" name="customerUpdateResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerUpdateFault" name="customerUpdateFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerAdvisorRead">
      <wsdl:input message="sch0:customerAdvisorReadRequest" name="customerAdvisorReadRequest"></wsdl:input>
      <wsdl:output message="sch0:customerAdvisorReadResponse" name="customerAdvisorReadResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerAdvisorReadFault" name="customerAdvisorReadFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerReadGLDimensions">
      <wsdl:input message="sch0:customerReadGLDimensionsRequest" name="customerReadGLDimensionsRequest"></wsdl:input>
      <wsdl:output message="sch0:customerReadGLDimensionsResponse" name="customerReadGLDimensionsResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerReadGLDimensionsFault" name="customerReadGLDimensionsFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerList">
      <wsdl:input message="sch0:customerListRequest" name="customerListRequest"></wsdl:input>
      <wsdl:output message="sch0:customerListResponse" name="customerListResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerListFault" name="customerListFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerTagsRead">
      <wsdl:input message="sch0:customerTagsReadRequest" name="customerTagsReadRequest"></wsdl:input>
      <wsdl:output message="sch0:customerTagsReadResponse" name="customerTagsReadResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerTagsReadFault" name="customerTagsReadFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerExistValidate">
      <wsdl:input message="sch0:customerExistValidateRequest" name="customerExistValidateRequest"></wsdl:input>
      <wsdl:output message="sch0:customerExistValidateResponse" name="customerExistValidateResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerExistValidateFault" name="customerExistValidateFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerReadKey">
      <wsdl:input message="sch0:customerReadKeyRequest" name="customerReadKeyRequest"></wsdl:input>
      <wsdl:output message="sch0:customerReadKeyResponse" name="customerReadKeyResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerReadKeyFault" name="customerReadKeyFault"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerDirectParameterValueList">
      <wsdl:input message="sch0:customerDirectParameterValueListRequest" name="customerDirectParameterValueListRequest"></wsdl:input>
      <wsdl:output message="sch0:customerDirectParameterValueListResponse" name="customerDirectParameterValueListResponse"></wsdl:output>
      <wsdl:fault message="sch0:customerDirectParameterValueListFault" name="customerDirectParameterValueListFault"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="CUSSCustomerService_V20_2PortTypeSoap11" type="sch0:CUSSCustomerService_V20_2PortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="customerProfitCenterUpdate">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerProfitCenterUpdateRequest">
        <soap:header message="sch0:customerProfitCenterUpdateRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerProfitCenterUpdateRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerProfitCenterUpdateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerProfitCenterUpdateFault">
        <soap:fault name="customerProfitCenterUpdateFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerCreate">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerCreateRequest">
        <soap:header message="sch0:customerCreateRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerCreateRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerCreateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerCreateFault">
        <soap:fault name="customerCreateFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerRead">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerReadRequest">
        <soap:header message="sch0:customerReadRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerReadRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerReadResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerReadFault">
        <soap:fault name="customerReadFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerDetailsRead">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerDetailsReadRequest">
        <soap:header message="sch0:customerDetailsReadRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerDetailsReadRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerDetailsReadResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerDetailsReadFault">
        <soap:fault name="customerDetailsReadFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerInternalIdentificationAcquire">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerInternalIdentificationAcquireRequest">
        <soap:header message="sch0:customerInternalIdentificationAcquireRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerInternalIdentificationAcquireRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerInternalIdentificationAcquireResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerInternalIdentificationAcquireFault">
        <soap:fault name="customerInternalIdentificationAcquireFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerSearch">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerSearchRequest">
        <soap:header message="sch0:customerSearchRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerSearchRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerSearchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerSearchFault">
        <soap:fault name="customerSearchFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerNumberTemporaryCreate">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerNumberTemporaryCreateRequest">
        <soap:header message="sch0:customerNumberTemporaryCreateRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerNumberTemporaryCreateRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerNumberTemporaryCreateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerNumberTemporaryCreateFault">
        <soap:fault name="customerNumberTemporaryCreateFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerDelete">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerDeleteRequest">
        <soap:header message="sch0:customerDeleteRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerDeleteRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerDeleteResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerDeleteFault">
        <soap:fault name="customerDeleteFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerProspectCreate">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerProspectCreateRequest">
        <soap:header message="sch0:customerProspectCreateRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerProspectCreateRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerProspectCreateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerProspectCreateFault">
        <soap:fault name="customerProspectCreateFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerDefaultRead">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerDefaultReadRequest">
        <soap:header message="sch0:customerDefaultReadRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerDefaultReadRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerDefaultReadResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerDefaultReadFault">
        <soap:fault name="customerDefaultReadFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerNumberUpdate">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerNumberUpdateRequest">
        <soap:header message="sch0:customerNumberUpdateRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerNumberUpdateRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerNumberUpdateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerNumberUpdateFault">
        <soap:fault name="customerNumberUpdateFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerLegalValidate">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerLegalValidateRequest">
        <soap:header message="sch0:customerLegalValidateRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerLegalValidateRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerLegalValidateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerLegalValidateFault">
        <soap:fault name="customerLegalValidateFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerUpdate">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerUpdateRequest">
        <soap:header message="sch0:customerUpdateRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerUpdateRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerUpdateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerUpdateFault">
        <soap:fault name="customerUpdateFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerAdvisorRead">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerAdvisorReadRequest">
        <soap:header message="sch0:customerAdvisorReadRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerAdvisorReadRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerAdvisorReadResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerAdvisorReadFault">
        <soap:fault name="customerAdvisorReadFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerReadGLDimensions">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerReadGLDimensionsRequest">
        <soap:header message="sch0:customerReadGLDimensionsRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerReadGLDimensionsRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerReadGLDimensionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerReadGLDimensionsFault">
        <soap:fault name="customerReadGLDimensionsFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerList">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerListRequest">
        <soap:header message="sch0:customerListRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerListRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerListFault">
        <soap:fault name="customerListFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerTagsRead">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerTagsReadRequest">
        <soap:header message="sch0:customerTagsReadRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerTagsReadRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerTagsReadResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerTagsReadFault">
        <soap:fault name="customerTagsReadFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerExistValidate">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerExistValidateRequest">
        <soap:header message="sch0:customerExistValidateRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerExistValidateRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerExistValidateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerExistValidateFault">
        <soap:fault name="customerExistValidateFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerReadKey">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerReadKeyRequest">
        <soap:header message="sch0:customerReadKeyRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerReadKeyRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerReadKeyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerReadKeyFault">
        <soap:fault name="customerReadKeyFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="customerDirectParameterValueList">
      <soap:operation soapAction=""/>
      <wsdl:input name="customerDirectParameterValueListRequest">
        <soap:header message="sch0:customerDirectParameterValueListRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="customerDirectParameterValueListRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="customerDirectParameterValueListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="customerDirectParameterValueListFault">
        <soap:fault name="customerDirectParameterValueListFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CUSSCustomerService_V20_2">
    <wsdl:port binding="sch0:CUSSCustomerService_V20_2PortTypeSoap11" name="CUSSCustomerService_V20_2PortTypeSoap11">
      <soap:address location="http://10.246.89.245:10710/corewsdpgensrv/services/CUSSCustomerService_V20_2"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
      <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
    </con:part>
  </con:definitionCache>
  <con:endpoints>
    <con:endpoint>http://10.246.89.245:10710/corewsdpgensrv/services/CUSSCustomerService_V20_2</con:endpoint>
  </con:endpoints>
</con:interface>
