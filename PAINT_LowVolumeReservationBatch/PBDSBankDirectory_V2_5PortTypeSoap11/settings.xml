<?xml version="1.0" encoding="UTF-8"?>
<con:interface xsi:type="con:WsdlInterface" id="b686a8a9-2564-4bfb-95b8-e815a6d40eaf" wsaVersion="NONE" name="PBDSBankDirectory_V2_5PortTypeSoap11" type="wsdl" bindingName="{urn:srv.pbd.fs.edb.com:ws:bankdirectory:v2_5}PBDSBankDirectory_V2_5PortTypeSoap11" soapVersion="1_1" anonymous="optional" definition="http://10.246.89.245:10450/pbdsrv/services/PBDSBankDirectory_V2_5Service?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="2cf264f2-f0ce-4184-8311-ae4a006a41b1fileName">PBDSBankDirectory_V2_5PortTypeSoap11</con:setting>
    <con:setting id="b686a8a9-2564-4bfb-95b8-e815a6d40eaffileName">PBDSBankDirectory_V2_5PortTypeSoap11</con:setting>
  </con:settings>
  <con:definitionCache type="TEXT" rootPart="http://10.246.89.245:10450/pbdsrv/services/PBDSBankDirectory_V2_5Service?wsdl">
    <con:part>
      <con:url>http://10.246.89.245:10450/pbdsrv/services/PBDSBankDirectory_V2_5Service?wsdl</con:url>
      <con:content><![CDATA[<wsdl:definitions targetNamespace="urn:srv.pbd.fs.edb.com:ws:bankdirectory:v2_5" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:srv.pbd.fs.edb.com:ws:bankdirectory:v2_5" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:sch4="urn:srv.pbd.fs.edb.com:domain:bankdirectory:v2_5" xmlns:sch3="urn:srv.pbd.fs.edb.com:domain:common:v1_0" xmlns:sch2="http://edb.com/ws/WSCommon_v22" xmlns:sch1="http://edb.com/ws/WSCommon_v21" xmlns:sch0="urn:srv.pbd.fs.edb.com:ws:bankdirectory:v2_5">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.pbd.fs.edb.com:ws:bankdirectory:v2_5" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:common="urn:srv.pbd.fs.edb.com:domain:common:v1_0" xmlns:bankdirectory="urn:srv.pbd.fs.edb.com:domain:bankdirectory:v2_5">
      <xs:annotation>
        <xs:documentation>Bank directory specific operations for external
            systems.

            Operation supported.

            bicDirectorySearch:This
            operation is used
            to get list of bank
            directories based on input

            Input
            Fields
            description.

            bankOrdgId: unique
            Bank
            identifier.
            bicToken:Bank
            identification code.
            nationalIdToken:National ID.
            bankNameToken:Bank
            Name
            cityToken:city
            countryCodeToken:Country code
            countryNameToken:Country Name
            includeNonPublicBic:Flag to include non
            public bic default false.
            startIndex : Start
            Index for Pagination
            pageSize : Page size for number
            of elements
            returned in a page

            bicAndNationalIdValidateList:This
            operation is used to
            validate list
            of BIC's and NationalId+country
            code.

            Input Fields
            description.

            bankOrdgId: unique
            Bank
            identifier.

            bic:Bank
            identification code.
            nationalId:National ID.
            countryCode:Country Code.
            checkSepaAdherence:Flag to check sepa
            adherence for bic.
            includeNonPublicBic:Flag to include non public bic
            default false.

            ibanOnlyGet:This operation is used to Validate IBAN and
            derive BIC.
            Input Fields
            description.

            bankOrdgId: unique
            Bank
            identifier.

            iban:IBAN.
            doIbanValidation:Flag for Iban validation.
            doReturnBicInfo:Flag to
            return bicInfo.
            doReturnAdditionalBicInfo:Flag
            to include additional
            bic info.
            doSepaAdherenceCheck:Flag to check sepa
            adherence.


            Response
            status codes:
            0=Ok
            4000=SystemError
            5121=Search
            criteria is not
            provided
            [At least 1
            search criteria must
            be given]
            5122=No matching
            information
            found
            5123=Both bic and
            nationalId are not
            provided [Either
            bic or
            nationalId+CountryCode
            must be given in request]
            5211=IBAN
            Structure not
            found for country
            code [Country doesn't exist in
            Swift's
            IbanDirectory]
            5212=Invalid
            IBAN Length [Invalid length of IBAN
            compared to value in Swift's
            IbanDirectory]
            5213=IBAN check digits are
            not valid [IBAN failing
            mod97 validation]
            5214=Bank details not found
            for IBAN [Failing to
            find link between (valid) IBAN account number and
            Swift's
            IbanDirectory]</xs:documentation>
      </xs:annotation>
      <xs:import namespace="urn:srv.pbd.fs.edb.com:domain:bankdirectory:v2_5"/>
      <xs:import namespace="urn:srv.pbd.fs.edb.com:domain:common:v1_0"/>
      <xs:element name="bankDirectorySearchV2Request" type="tns:bankDirectorySearchRequestType">
        <xs:annotation>
          <xs:documentation>Search Swift's "Bank Directory Plus" for bank agent
                information. Search is case-insensitive. Any
                non-null search tokens
                will be treated as wildcard. If a bank in the result lacks BIC
                details, the parent bank's
                BIC will be fetched (if any).
                Can return
                following error codes: 4000, 5121, 5122.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bankDirectorySearchV2Response" type="tns:bankDirectorySearchResponseType">
        <xs:annotation>
          <xs:documentation>Response for bankDirectorySearch</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ibanOnlyGetRequest" type="tns:ibanOnlyGetRequestType">
        <xs:annotation>
          <xs:documentation>Get Bank information from Swift's "Iban Directory
                Plus" when providing an IBAN
                Can also return additional bank
                information form Swift's Bank Directory needed
                Can return following
                error codes: 4000, 5211, 5212, 5213, 5214</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="ibanOnlyGetResponse" type="tns:ibanOnlyGetResponseType">
        <xs:annotation>
          <xs:documentation>Response for ibanOnlyGet</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bicAndNationalIdValidateV2Request" type="tns:bicAndNationalIdValidateListRequestType">
        <xs:annotation>
          <xs:documentation>Validates List of BIC and/or
                nationalId+CountryCode. One of them must be provided.
                Can return
                following
                error codes: 4000, 5123.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bicAndNationalIdValidateV2Response" type="tns:bicAndNationalIdValidateListResponseType">
        <xs:annotation>
          <xs:documentation>Response for bicAndNationalIdValidate Request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="getIbanStructureRequest" type="tns:getIbanStructureRequestType">
        <xs:annotation>
          <xs:documentation>Request with the country code to get the IBAN structure for</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="getIbanStructureResponse" type="tns:getIbanStructureResponseType">
        <xs:annotation>
          <xs:documentation>Response containing the IBAN structure for the country code in the request</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:complexType name="bankDirectorySearchRequestType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the request to search
                Swift's "Bank Directory Plus"</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="pagingInputElementType" type="common:pagingInputElementType">
            <xs:annotation>
              <xs:documentation>Describes a paging segment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="searchCriteria" type="bankdirectory:bankDirectorySearchTokens">
            <xs:annotation>
              <xs:documentation>Describes search criteria fields</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bankDirectorySearchResponseType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the Response to search
                Swift's "Bank Directory Plus"</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="isResultPartial" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Records count matching search criteria is more
                                than limit (default=25)
                                then System will not
                                return number of
                                records as per limit.
                                TRUE in response says limited records are
                                receiving otherwise
                                response is
                                complete.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="bankDirectorySearchResponseList" type="bankdirectory:bankDetails">
                <xs:annotation>
                  <xs:documentation>Banks Directory details for GUI.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="pagingoutPutElement" type="common:pagingOutputElementType">
                <xs:annotation>
                  <xs:documentation>Describes a paging output segment</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="bicAndNationalIdValidateListRequestType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the List Request to
                validate
                the BIC/National ID</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element maxOccurs="unbounded" name="validBankIdentifierListRequest" type="bankdirectory:validBankIdentifier"/>
          <xs:element default="false" name="includeNonPublicBic" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to indicate whether Non-public BICs are
                        included or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bicAndNationalIdValidateListResponseType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the List Response to
                validate
                list of BIC/National ID</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="validBankAddressDetails" type="bankdirectory:ValidBankAddressDetails">
                <xs:annotation>
                  <xs:documentation>Describes Valid Bank Address Details</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ibanOnlyGetRequestType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the Request to get Bank
                information from an IBAN</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="bankdirectory:ibanOnly"/>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="ibanOnlyGetResponseType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the Response to get Bank
                information from IBAN only</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ibanBicDetails" type="bankdirectory:ibanBicDetails">
                <xs:annotation>
                  <xs:documentation>Iban BIC information.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="routingBicDetails" type="bankdirectory:bicDetails">
                <xs:annotation>
                  <xs:documentation>Routing BIC information.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ibanBankIsoCountryCode" type="common:countryISOCode">
                <xs:annotation>
                  <xs:documentation>ISO country code of Bank that issued the IBAN.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ibanIsoCountryCode" type="common:countryISOCode">
                <xs:annotation>
                  <xs:documentation>ISO country code of IBAN bic.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="searchIbanDetailsResponseType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the Response to get Bank
			information from IBAN only</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ibanBicDetails" type="bankdirectory:bankBicDirectoryDetailsType">
                <xs:annotation>
                  <xs:documentation>Iban BIC information.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="routingBicDetails" type="bankdirectory:bankBicDirectoryDetailsType">
                <xs:annotation>
                  <xs:documentation>Routing BIC information.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ibanBankIsoCountryCode" type="common:countryISOCode">
                <xs:annotation>
                  <xs:documentation>ISO country code of Bank that issued the IBAN.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ibanIsoCountryCode" type="common:countryISOCode">
                <xs:annotation>
                  <xs:documentation>ISO country code of IBAN bic.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="bankBicDirectoryDetailsSearchRequest" type="tns:bankBicDirectoryDetailsSearchRequestType">
        <xs:annotation>
          <xs:documentation>Search Swift's "Bank Directory Plus" for bank agent
                information with head office details as optional. Search is case-insensitive. Any
                non-null search tokens
                will be treated as wildcard.
                following error codes: 4000, 5121, 5122.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="bankBicDirectoryDetailsSearchResponse" type="tns:bankBicDirectoryDetailsSearchResponseType">
        <xs:annotation>
          <xs:documentation>Response for bankDirectorySearch with head office details and sepa adherent.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="searchIbanDetailsRequest" type="tns:searchIbanDetailsRequestType">
        <xs:annotation>
          <xs:documentation>Get Bank information from Swift's "Iban Directory
				Plus" when providing an IBAN
				,also return additional bank
				information form Swift's Bank Directory needed
				Can return following
				error codes: 4000, 5211, 5212, 5213, 5214</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="searchIbanDetailsResponse" type="tns:searchIbanDetailsResponseType">
        <xs:annotation>
          <xs:documentation>Response for bic details search with head office on
				basis of iban</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:complexType name="searchIbanDetailsRequestType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the Request to get Bank
				information from an IBAN with head office details.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="iban" type="common:ibanAccountNumberType">
            <xs:annotation>
              <xs:documentation>International Bank Account Number (IBAN)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bankBicDirectoryDetailsSearchRequestType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the request to search
                Swift's "Bank Directory Plus" with head office</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="pagingInputElementType" type="common:pagingInputElementType">
            <xs:annotation>
              <xs:documentation>Describes a paging segment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="searchCriteria" type="bankdirectory:bankBicDirectoryDetailsTokens">
            <xs:annotation>
              <xs:documentation>Describes search criteria fields</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="sortingElement" type="bankdirectory:sortingElement">
            <xs:annotation>
              <xs:documentation>Describes the sorting field and type</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bankBicDirectoryDetailsSearchResponseType">
        <xs:annotation>
          <xs:documentation>Complex type to represent the Response to search
                Swift's "Bank Directory Plus"</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="isResultPartial" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Records count matching search criteria is more
                                than limit (default=25)
                                then System will not
                                return number of
                                records as per limit.
                                TRUE in response says limited records are
                                receiving otherwise
                                response is
                                complete.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element maxOccurs="unbounded" minOccurs="0" name="bankBicDirectoryDetails" type="bankdirectory:bankBicDirectoryDetailsType">
                <xs:annotation>
                  <xs:documentation>Banks Directory details for GUI.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="pagingOutputElement" type="common:pagingOutputElementType">
                <xs:annotation>
                  <xs:documentation>Describes a paging output segment</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="getIbanStructureRequestType">
        <xs:annotation>
          <xs:documentation>Complex type of the request to get the IBAN structure</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="countryCode" type="common:countryISOCode"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getIbanStructureResponseType">
        <xs:annotation>
          <xs:documentation>Complex type of the response of the IBAN structure get operation.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="common:baseResponseType">
            <xs:sequence>
              <xs:element minOccurs="0" name="ibanStructure" type="bankdirectory:ibanStructureDetails"/>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://edb.com/ws/WSCommon_v21" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://edb.com/ws/WSCommon_v21">
      <xsd:complexType name="ClientContextType">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the person who initiated the action This could either be the customer itself in a netbank) or an employee</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="credentials" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Authorization data. This is typically a security Object retriewed from a logon, but can also be a plain password.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="channel" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Indicated what type of application that initiated the request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="orgid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The OrganizationalId - will in a banking context be Financial Institution / Konsernnr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="orgunit" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The Organizational unit will in a banking context be Branch / Registernr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="customerid" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Id of the customer on which the operation is requested, may be the same as userid, but may well be different</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="locale" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Locale in a java syntax e.g "en_EN". May be used if application supports localized response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ip" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The ip adress of the client</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="itemType">
            <xsd:annotation>
              <xsd:documentation>Optionnal extention items - Add key/value pairs for application specific extentions</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="itemType">
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="EDBHeaderType">
        <xsd:sequence>
          <xsd:element name="SourceApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the source that initiated the message. Used to separate different service consumers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="DestinationApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the destination of the message. Used to separate different service providers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Function" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the service to be called.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Version" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Service version "X.Y.Z" according to this standard:
                X = Main release (major changes, not necessarily backwards compatible)
                Y = Minor release (backwards compatible, new functionality)
                Z = Bugfix (backwards compatible, error correction only)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ClientContext" type="ClientContextType">
            <xsd:annotation>
              <xsd:documentation>Elements for identifying client context information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="AutHeader" type="EDBHeaderType"/>
      <xsd:complexType name="ResponseStateType">
        <xsd:sequence>
          <xsd:element name="ErrorCode" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>3 digit Numeric error code reported for this error.
						200-299  Reserved for the Input Errors 
						300-399  Reserved for the Logic/Business Errors
						400-499  System Errors</xsd:documentation>
              <xsd:documentation>Cash Pool Main Setup Error codes.
						200=Invalid Customer Identification number
						300=Cash pool already exist
						301=Update of cash pool status from Production to Simulation is not allowed
						400=Could not establish connection to Customer Information System 
						401=Could not establish connection to Bank Business Data</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Severity" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Response Status Severity Code</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ComponentId" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Unique code identifying the component returning the service response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StrErrorCode" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Deprecated: Error code represented as String</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Message" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Message describing the error. Default is english language. Optionally localized according to the locale parameter in the service request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="NativeError" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Deprecated: Optional detailed error information reported from involved components. Used for diagnostics purposes.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="LogSequence" nillable="true" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>Optional key generated to be used for log correlation purposes.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="errorItem" nillable="true" type="errorItemType">
            <xsd:annotation>
              <xsd:documentation>Optional extention items - key/value pairs are used for extented error inforamtion.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="errorItemType">
        <xsd:annotation/>
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://edb.com/ws/WSCommon_v22" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://edb.com/ws/WSCommon_v22">
      <xsd:complexType name="ClientContextType">
        <xsd:sequence>
          <xsd:element name="userid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the person who initiated the action This could either be the customer itself in a netbank) or an employee</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="credentials" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Authorization data. This is typically a security Object retriewed from a logon, but can also be a plain password.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="channel" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Indicated what type of application that initiated the request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="orgid" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The OrganizationalId - will in a banking context be Financial Institution / Konsernnr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="orgunit" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The Organizational unit will in a banking context be Branch / Registernr</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="customerid" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Id of the customer on which the operation is requested, may be the same as userid, but may well be different</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="locale" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Locale in a java syntax e.g "en_EN". May be used if application supports localized response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ip" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>The ip adress of the client</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="item" nillable="true" type="itemType">
            <xsd:annotation>
              <xsd:documentation>Optionnal extention items - Add key/value pairs for application specific extentions</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="itemType">
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
      <xsd:complexType name="EDBHeaderType">
        <xsd:sequence>
          <xsd:element name="SourceApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the source that initiated the message. Used to separate different service consumers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="DestinationApplication" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the destination of the message. Used to separate different service providers.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Function" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Identifies the service to be called.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Version" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Service version "X.Y.Z" according to this standard:
                X = Main release (major changes, not necessarily backwards compatible)
                Y = Minor release (backwards compatible, new functionality)
                Z = Bugfix (backwards compatible, error correction only)</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ClientContext" type="ClientContextType">
            <xsd:annotation>
              <xsd:documentation>Elements for identifying client context information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="AutHeader" type="EDBHeaderType"/>
      <xsd:complexType name="ResponseStateType">
        <xsd:sequence>
          <xsd:element name="ErrorCode" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Numeric error code reported for this error.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Severity" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Response Status Severity Code</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ComponentId" type="xsd:int">
            <xsd:annotation>
              <xsd:documentation>Unique code identifying the component returning the service response</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Message" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Message describing the error. Default is english language. Optionally localized according to the locale parameter in the service request</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="LogSequence" nillable="true" type="xsd:long">
            <xsd:annotation>
              <xsd:documentation>Optional key generated to be used for log correlation purposes.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element maxOccurs="unbounded" minOccurs="0" name="errorItem" nillable="true" type="errorItemType">
            <xsd:annotation>
              <xsd:documentation>Optional extention items - key/value pairs are used for extented error inforamtion.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="errorItemType">
        <xsd:annotation/>
        <xsd:attribute name="key" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
      </xsd:complexType>
    </xsd:schema>
    <schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.pbd.fs.edb.com:domain:common:v1_0" xmlns:tns="urn:srv.pbd.fs.edb.com:domain:common:v1_0" xmlns:edbheaderv22="http://edb.com/ws/WSCommon_v22" xmlns:edbheader="http://edb.com/ws/WSCommon_v21" xmlns:common="urn:srv.pbd.fs.edb.com:domain:common:v1_0" xmlns="http://www.w3.org/2001/XMLSchema">
      <annotation>
        <documentation>Common type definitions.</documentation>
      </annotation>
      <import namespace="http://edb.com/ws/WSCommon_v21"/>
      <import namespace="http://edb.com/ws/WSCommon_v22"/>
      <simpleType name="pageLengthType">
        <annotation>
          <documentation>An type capable of describing a segments length or
				wished length, if set to 0 then system defaults to 500.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="500"/>
        </restriction>
      </simpleType>
      <simpleType name="pageIndexType">
        <annotation>
          <documentation>Index of segment start</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <complexType name="pagingInputElementType">
        <annotation>
          <documentation>Describes a paging segment. pageSize must be greater
				than or equal to 1.</documentation>
        </annotation>
        <sequence>
          <element name="startIndex" type="common:pageIndexType"/>
          <element name="pageSize" type="common:pageLengthType"/>
        </sequence>
      </complexType>
      <complexType name="pagingOutputElementType">
        <annotation>
          <documentation>Describes the returned segment</documentation>
        </annotation>
        <sequence>
          <element name="numberOfElements" type="common:pageLengthType">
            <annotation>
              <documentation>Number of elements returned</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType abstract="true" name="pageResultType">
        <annotation>
          <documentation>Wraps paging and data elements</documentation>
        </annotation>
        <sequence>
          <element name="pagingOutput" type="common:pagingOutputElementType"/>
          <element name="elements">
            <complexType>
              <sequence>
                <any namespace="##other"/>
              </sequence>
            </complexType>
          </element>
        </sequence>
      </complexType>
      <simpleType name="generatedPkType">
        <annotation>
          <documentation>Generated primary key in database</documentation>
        </annotation>
        <restriction base="long">
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <simpleType name="optimisticLockVersionType">
        <annotation>
          <documentation>Version counter field used for optimistic locking
				See:
				http://en.wikipedia.org/wiki/Optimistic_concurrency_control
				This
				ensures data consistency when data travels across
				layers.</documentation>
        </annotation>
        <restriction base="long">
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <complexType abstract="true" name="basePersistentEntityType">
        <annotation>
          <documentation>base Persistent Entity Type Holds the primary key
				Value</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="pk" type="common:generatedPkType">
            <annotation>
              <documentation>Bearer of the primary key.
						Not present for an
						non-persisted entity.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="version" type="common:optimisticLockVersionType">
            <annotation>
              <documentation>The optimistic locking version field.
						Not present for
						an non-persisted entity.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType abstract="true" name="baseResponseType">
        <annotation>
          <documentation>Base response type which all services should extend
				off</documentation>
        </annotation>
        <sequence>
          <element name="ResponseState" type="edbheader:ResponseStateType">
            <annotation>
              <documentation>The response state which describes the outcome of
						calling the service.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="dateTime">
        <annotation>
          <documentation>Generic Datatype for date and Time</documentation>
        </annotation>
        <restriction base="dateTime"/>
      </simpleType>
      <simpleType name="date">
        <annotation>
          <documentation>Generic Datatype for dates</documentation>
        </annotation>
        <restriction base="date"/>
      </simpleType>
      <simpleType name="userId">
        <annotation>
          <documentation>String supporting 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="50"/>
        </restriction>
      </simpleType>
      <simpleType name="userTimeFormat">
        <restriction base="string">
          <pattern value="(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]"/>
        </restriction>
      </simpleType>
      <simpleType name="max1digit">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 9.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="9"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max2digit">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 99.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="99"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max2Digit10MaxValue">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 10.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="10"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max3Digit120MaxValue">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 120.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="120"/>
        </restriction>
      </simpleType>
      <simpleType name="max2digit">
        <annotation>
          <documentation>Integer supporting 2 integers.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="10"/>
          <maxInclusive value="99"/>
        </restriction>
      </simpleType>
      <simpleType name="max6digit">
        <annotation>
          <documentation>Integer supporting 6 integers.</documentation>
        </annotation>
        <restriction base="int">
          <maxInclusive value="999999"/>
        </restriction>
      </simpleType>
      <simpleType name="max3digit">
        <annotation>
          <documentation>Integer supporting 3 integers.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max6digit">
        <annotation>
          <documentation>Integer supporting 6 integers where minimum expecting
				1.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999999"/>
        </restriction>
      </simpleType>
      <simpleType name="orderNumber">
        <annotation>
          <documentation>Integer supporting 6 integers where minimum expecting
				1.</documentation>
        </annotation>
        <restriction base="long">
          <minInclusive value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="order">
        <annotation>
          <documentation>Simple type to represent order number
				1.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="min4max6digit">
        <annotation>
          <documentation>Integer supporting 6 integers where minumum expecting
				1.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{4,6}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString50">
        <annotation>
          <documentation>String supporting 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,50}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString20">
        <annotation>
          <documentation>String supporting 20 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString21">
        <annotation>
          <documentation>String supporting 21 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,21}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaCharacter4">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-z//A-Z]{3,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="currencyISOCode">
        <annotation>
          <documentation>ISO 4217 alpha code (3 positions)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z]{3}"/>
        </restriction>
      </simpleType>
      <simpleType name="countryISOCode">
        <annotation>
          <documentation>ISO 3166 Country code(2 positions) and this is
				optional filed for Bank Info</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z]{2}"/>
        </restriction>
      </simpleType>
      <simpleType name="languageISOCode">
        <annotation>
          <documentation>ISO 3166 Language code(2 positions)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_-]{2,5}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max2AlphabetType">
        <annotation>
          <documentation>ISO 3166 Country code(2 positions) and this is
				optional filed for Bank Info</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z]{1,2}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max2caseInsensitiveAlphabetType">
        <annotation>
          <documentation>ISO 3166 Country code(2 positions) and this is
				optional filed for Bank Info</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z]{1,2}"/>
        </restriction>
      </simpleType>
      <simpleType name="max10StringType">
        <annotation>
          <documentation>String supporting 10 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.# ]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="max20StringType">
        <annotation>
          <documentation>String supporting 20 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.# ]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="max34StringType">
        <annotation>
          <documentation>String supporting 34 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.# ]{1,34}"/>
        </restriction>
      </simpleType>
      <simpleType name="max50StringType">
        <annotation>
          <documentation>String supporting 34 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.# ]{1,50}"/>
        </restriction>
      </simpleType>
      <simpleType name="max200StringType">
        <annotation>
          <documentation>String supporting 200 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,200}"/>
        </restriction>
      </simpleType>
      <simpleType name="max255StringType">
        <annotation>
          <documentation>String supporting 255 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,255}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString320">
        <annotation>
          <documentation>String supporting 320 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{0,320}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric35WithoutSpecialChar">
        <annotation>
          <documentation>String supporting max 35 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9 ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric35withspecificchar">
        <annotation>
          <documentation>String supporting max 35 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[!\[\]anc\d-]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric40withoutspeicalchar">
        <annotation>
          <documentation>String supporting max 40 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,40}"/>
        </restriction>
      </simpleType>
      <simpleType name="min2max5AlphaNumericwithoutspeicalchar">
        <annotation>
          <documentation>String supporting min 2 and max 5 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{2,5}"/>
        </restriction>
      </simpleType>
      <simpleType name="min4max18AlphaNumericwithoutspeicalchar">
        <annotation>
          <documentation>String supporting min 4 and max 18 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{4,18}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric50">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 50</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.#0-9 ]{1,50}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric250Type">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 250</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W_,.#0-9 ]{1,250}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric20">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 20</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z0-9 ]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric20withoutspeicalchar">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 20</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric18withoutspeicalchar">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 18</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9]{1,18}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric34speicalcharwithSpace">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 34</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9 ]{1,34}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric35speicalcharwithSpace">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 35</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9 ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric40SpeicalcharWithSpace">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 40</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9 ]{1,40}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric80SpeicalcharWithSpace">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxlength
				of 80</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9 ]{1,80}"/>
        </restriction>
      </simpleType>
      <simpleType name="booleanType">
        <annotation>
          <documentation>Boolean Type</documentation>
        </annotation>
        <restriction base="boolean"/>
      </simpleType>
      <simpleType name="bankOrgId">
        <annotation>
          <documentation>Bank Organizational Identification</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="bbanAccountNumberType">
        <annotation>
          <documentation>Type for representing an international bank account
				number, e.g. 33660663301</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="\S.*\S|\S"/>
          <minLength value="1"/>
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <simpleType name="max34AlphaNumeric">
        <annotation>
          <documentation>Type for representing a account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="34"/>
          <pattern value="[a-zA-Z0-9]{1,34}"/>
        </restriction>
      </simpleType>
      <simpleType name="max11Numeric">
        <annotation>
          <documentation>Type for representing a numeric account number upto 11
				digits</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="11"/>
          <pattern value="[0-9]{1,11}"/>
        </restriction>
      </simpleType>
      <simpleType name="max10Numeric">
        <annotation>
          <documentation>Type for representing a numeric 
			account number upto 10 digits.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="10"/>
          <pattern value="[0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="max70AplphaNumeric">
        <annotation>
          <documentation>Type for representing a account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="70"/>
          <pattern value="[a-zA-Z0-9]{1,70}"/>
        </restriction>
      </simpleType>
      <simpleType name="max35AlphaNumeric">
        <annotation>
          <documentation>Type for representing a account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="35"/>
          <pattern value="[a-zA-Z0-9]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="max35AlphaNumericWithSpaceWithoutSpecialCharacters">
        <annotation>
          <documentation>Type for representing a account number</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="35"/>
          <pattern value="[a-zA-Z0-9 ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="max3AlphaNumeric">
        <annotation>
          <documentation>Type for representing a AlphaNumericString with 3
				characters</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="3"/>
          <pattern value="[a-zA-Z0-9]{1,3}"/>
        </restriction>
      </simpleType>
      <simpleType name="standardAgreementLabelInput" tns:nil="true">
        <restriction base="string">
          <enumeration value="ALL">
            <annotation>
              <documentation>Standard Agreement Label is All.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="NONE">
            <annotation>
              <documentation>Standard Agreement Label is None.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="customerIdentificationNumber">
        <annotation>
          <documentation>Customer Identification Number, being a unique
				external identifier of customer.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="ibanAccountNumberType">
        <annotation>
          <documentation>Type for representing an international bank account
				number, e.g. DE89370400440532013001</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="\S.*\S|\S"/>
          <minLength value="1"/>
          <maxLength value="34"/>
        </restriction>
      </simpleType>
      <complexType name="address">
        <annotation>
          <documentation>Complex type to represent the Address in pbd</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="postalCode" type="common:maxString20">
            <annotation>
              <documentation>Describes the postal code of the address.It is a
						optional field</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="place" type="common:maxString50">
            <annotation>
              <documentation>Describes the place of address.It is a optional
						field</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="countryCode" type="common:countryISOCode">
            <annotation>
              <documentation>Describes the country code of address.It is a
						optional field in corporate Group and Mandatory field in
						BankInformation</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="countryName" type="common:min1max70stringTypeWithSpace">
            <annotation>
              <documentation>Describes the country name of address.It is a
						optional field in corporate Group and BankInformation</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressLine1" type="common:maxAlphaNumeric250Type">
            <annotation>
              <documentation>Describes the address Line1.It is a optional field</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addressLine2" type="common:maxAlphaNumeric250Type">
            <annotation>
              <documentation>Describes the address Line2.It is a optional field</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="accountType" tns:nil="true">
        <restriction base="string">
          <enumeration value="OPA">
            <annotation>
              <documentation>Operational account</documentation>
            </annotation>
          </enumeration>
          <enumeration value="ICA">
            <annotation>
              <documentation>Intermediate concentration account</documentation>
            </annotation>
          </enumeration>
          <enumeration value="GCA">
            <annotation>
              <documentation>Group concentration account</documentation>
            </annotation>
          </enumeration>
          <enumeration value="MCLA">
            <annotation>
              <documentation>Multi currency limit account</documentation>
            </annotation>
          </enumeration>
          <enumeration value="CRA">
            <annotation>
              <documentation>Corporate report account (Organization)</documentation>
            </annotation>
          </enumeration>
          <enumeration value="PMA">
            <annotation>
              <documentation>PMA account</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="bankIdentificationNumber">
        <annotation>
          <documentation>Describes the primary identification number for
				particular Bank</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="35"/>
        </restriction>
      </simpleType>
      <simpleType name="bankIdentificationCode">
        <annotation>
          <documentation>Describes the primary identification code for
				particular Bank</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z0-9]{8,11}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphanumeric">
        <annotation>
          <documentation>This is just a restriction on string to contain only
				alphabets and digits</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z0-9]{1,11}"/>
        </restriction>
      </simpleType>
      <complexType name="productInfoType">
        <annotation>
          <documentation>Complex Type Describes the value for ProductInfo
				in
				PBD.</documentation>
        </annotation>
        <sequence>
          <element name="productCode" type="common:maxAlphaNumeric18withoutspeicalchar">
            <annotation>
              <documentation>Describes the code for the product being
						used in
						PBD.</documentation>
            </annotation>
          </element>
          <element name="productLabel" type="common:maxString50">
            <annotation>
              <documentation>Describes the name of the product being
						used in
						PBD.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="period" tns:nil="true">
        <annotation>
          <documentation>Enumeration over the different type of periods allowed
				in terms and conditions</documentation>
        </annotation>
        <restriction base="duration">
          <enumeration value="P1D">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on DAILY
						basis</documentation>
            </annotation>
          </enumeration>
          <enumeration value="P7D">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on WEEKLY
						basis</documentation>
            </annotation>
          </enumeration>
          <enumeration value="P14D">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on BIWEEKLY
						basis</documentation>
            </annotation>
          </enumeration>
          <enumeration value="P1M">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on MONTLY
						basis</documentation>
            </annotation>
          </enumeration>
          <enumeration value="P4M">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on QUARTERLY
						basis</documentation>
            </annotation>
          </enumeration>
          <enumeration value="P1Y">
            <annotation>
              <documentation>Fee/Interest charges will be applicable on YEARLY
						basis</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="textType">
        <annotation>
          <documentation>Enumeration to define the Field Type.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ALPHABETIC">
            <annotation>
              <documentation>Specified Filed is allow only Alphabetics.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="NUMERIC">
            <annotation>
              <documentation>Specified Filed is allow only numbers.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="ALPHANUMERIC">
            <annotation>
              <documentation>Specified Filed is allow both Alphabetic and
						numbers.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="paymentOffice">
        <annotation>
          <documentation>Enumeration for Payment Location.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="HEAD">
            <annotation>
              <documentation>Payment Specified to Head Office.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BRANCH">
            <annotation>
              <documentation>Payment Specified to branch Office.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="paymentMethod">
        <annotation>
          <documentation>Enumeration for Payment Method.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="SERIAL">
            <annotation>
              <documentation>Payment Specified to Serial Method.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="COVER">
            <annotation>
              <documentation>Payment Specified to Cover Method.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="usageType">
        <annotation>
          <documentation>Enumeration for Usage Type.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="YES">
            <annotation>
              <documentation>Usage Type is Specified to Yes.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="NO">
            <annotation>
              <documentation>Usage Type is Specified to No.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="MUST">
            <annotation>
              <documentation>Usage Type is Specified to Must.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="itemType">
        <annotation>
          <documentation>Enumeration for Item Type.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="COUNTRY">
            <annotation>
              <documentation>Item Type Specified to COUTNRY.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BANK">
            <annotation>
              <documentation>Item Type Specified to BANK.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="CUSTOMER">
            <annotation>
              <documentation>Item Type Specified to CIN.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="ACCOUNT">
            <annotation>
              <documentation>Item Type Specified to ACCOUNT.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="businessArea">
        <annotation>
          <documentation>Enumeration for Business Area.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PAYMENTS">
            <annotation>
              <documentation>Business Area Specified to PAYMENTS.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="CHEQUES">
            <annotation>
              <documentation>Business Area Specified to CHEQUES.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="direction">
        <annotation>
          <documentation>Enumeration over the different type of periods allowed
				in terms and conditions</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="DAILY">
            <annotation>
              <documentation>fee charges will be applicable on daily basis for
						the cashpool</documentation>
            </annotation>
          </enumeration>
          <enumeration value="WEEKLY">
            <annotation>
              <documentation>fee charges will be applicable on weekly basis for
						the cashpool</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BI_WEEKLY">
            <annotation>
              <documentation>fee charges will be applicable on biweekly basis for
						the cashpool</documentation>
            </annotation>
          </enumeration>
          <enumeration value="MONTHLY">
            <annotation>
              <documentation>fee charges will be applicable on biweekly basis for
						the cashpool</documentation>
            </annotation>
          </enumeration>
          <enumeration value="QUARTERLY">
            <annotation>
              <documentation>fee charges will be applicable on quarterly basis
						for the cashpool</documentation>
            </annotation>
          </enumeration>
          <enumeration value="YEARLY">
            <annotation>
              <documentation>fee charges will be applicable on yearly basis for
						the cashpool</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="verifyDirection">
        <annotation>
          <documentation>Enumeration over the different type of direction for</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="INPUT">
            <annotation>
              <documentation>Only accepted in input</documentation>
            </annotation>
          </enumeration>
          <enumeration value="OUTPUT">
            <annotation>
              <documentation>Only shown in output</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BOTH">
            <annotation>
              <documentation>accepted in input and show in output too</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="moniteryAmount">
        <annotation>
          <documentation>common decimal type used for amounts in cashpool</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="3"/>
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="chargeAmount">
        <annotation>
          <documentation>common decimal type used for amounts in cashpool</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="3"/>
          <totalDigits value="21"/>
          <minExclusive value="-1"/>
        </restriction>
      </simpleType>
      <simpleType name="toleranceAmount">
        <annotation>
          <documentation>Decimal type used for funds check tolerance.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="2"/>
          <totalDigits value="5"/>
        </restriction>
      </simpleType>
      <simpleType name="amount">
        <annotation>
          <documentation>Decimal type used for payments.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="18"/>
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <simpleType name="amountType">
        <annotation>
          <documentation>Decimal type used for payments.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="23"/>
          <minInclusive value="0"/>
        </restriction>
      </simpleType>
      <simpleType name="baseAmount">
        <annotation>
          <documentation>Amount that is ISO20022. Use this for amount types by
				extending it</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="18"/>
        </restriction>
      </simpleType>
      <simpleType name="paymentAmount">
        <annotation>
          <documentation>Used for charge amounts in Payment product and product
				Agreement</documentation>
        </annotation>
        <restriction>
          <simpleType>
            <restriction base="common:baseAmount">
              <minInclusive value="0"/>
              <maxInclusive value="9999999999999.99999"/>
            </restriction>
          </simpleType>
        </restriction>
      </simpleType>
      <simpleType name="toleranceMin">
        <annotation>
          <documentation>Describes funds check tolerance minimum.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="9999"/>
        </restriction>
      </simpleType>
      <simpleType name="retryDays">
        <annotation>
          <documentation>Describes funds check retry days.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="99"/>
        </restriction>
      </simpleType>
      <simpleType name="max30StringType">
        <annotation>
          <documentation>Value restricted to min of 1 and max of 30 characters</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric35">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric60">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{1,60}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric70">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{1,70}"/>
        </restriction>
      </simpleType>
      <simpleType name="AlphaNumericmin4max40">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{4,40}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmin1max10">
        <annotation>
          <documentation>String supporting 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}A-Za-z_,.#0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmin1max75">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,75}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax75">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 75 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{0,75}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric35withspeicalchar">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString35">
        <annotation>
          <documentation>String supporting 35 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max105StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,105}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max35StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max15StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,15}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max16StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,16}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max4StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max5StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,5}"/>
        </restriction>
      </simpleType>
      <simpleType name="max4StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{4}"/>
        </restriction>
      </simpleType>
      <simpleType name="max5StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{5}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max10StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max60StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,60}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max50StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,60}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max90StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,90}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max100StringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,100}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max70stringTypeWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,70}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxAlphaNumeric11">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{11}"/>
        </restriction>
      </simpleType>
      <simpleType name="AlphaNumericmin4max18">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{4,18}"/>
        </restriction>
      </simpleType>
      <simpleType name="AlphaNumericmin1max4">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="AlphaNumericmin1max5">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,5}"/>
        </restriction>
      </simpleType>
      <simpleType name="AlphaNumericmin1max12">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,12}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax4">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 4 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Z0-9]{4}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax9">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 9 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{0,9}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax30">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 30 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{0,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax50">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{0,50}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max8Alphanumeric">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 8 and minLength of 1 char.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,8}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max60stringType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{1,60}"/>
        </restriction>
      </simpleType>
      <simpleType name="max70stringType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{0,70}"/>
        </restriction>
      </simpleType>
      <simpleType name="cutOffDayType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="99"/>
        </restriction>
      </simpleType>
      <simpleType name="accountTypeInfo">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="NOSTRO"/>
          <enumeration value="VOSTRO"/>
        </restriction>
      </simpleType>
      <simpleType name="userDateformat">
        <restriction base="string">
          <pattern value="yyyy-mm-dd"/>
        </restriction>
      </simpleType>
      <simpleType name="dayType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="31"/>
        </restriction>
      </simpleType>
      <simpleType name="monthType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="12"/>
        </restriction>
      </simpleType>
      <simpleType name="yearType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{4}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max18stringType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,18}"/>
        </restriction>
      </simpleType>
      <simpleType name="max35AlphabeticTypeWithSpace">
        <annotation>
          <documentation>Describes the pattern for a alphabetic string with
				whitespace and size limit of 35</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="contactPersonEmail">
        <annotation>
          <documentation>Describes the pattern for correspondent contact
				person's email</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z.@_]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="phoneNum">
        <annotation>
          <documentation>Describes the pattern for correspondent contact
				person's phone number</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9 -()+]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="previousOrNextEnum">
        <annotation>
          <documentation>Describes the next or previous Enum.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="NEXT"/>
          <enumeration value="PREVIOUS"/>
        </restriction>
      </simpleType>
      <simpleType name="unitNumber">
        <annotation>
          <documentation>Describes the unit Number.</documentation>
        </annotation>
        <restriction base="int">
          <enumeration value="1"/>
          <enumeration value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="max4NumericValue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{4}"/>
        </restriction>
      </simpleType>
      <simpleType name="max3NumericValue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{3}"/>
        </restriction>
      </simpleType>
      <simpleType name="max34numericvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{34}"/>
        </restriction>
      </simpleType>
      <simpleType name="min0max6numericvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="999999"/>
        </restriction>
      </simpleType>
      <simpleType name="max11decimalvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit decimal with ten digit fraction that are
				not otherwise restricted by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="10"/>
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="bankIdentifierCode">
        <annotation>
          <documentation>Describes the Bank Identifier Code for Bank</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{11}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max11stringType">
        <annotation>
          <documentation>Describes the Bank Identifier Code for Bank</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,11}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max15AlphaNumericType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,15}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max15AlphaNumericWithSpaceType">
        <annotation>
          <documentation>Allows alphabets (any case), numbers and space with
				length 1 to 15</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9 ]{1,15}"/>
        </restriction>
      </simpleType>
      <simpleType name="timeFormat">
        <annotation>
          <documentation>User defined time format.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString70">
        <annotation>
          <documentation>String supporting 70 chars.</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="0"/>
          <maxLength value="70"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString72">
        <annotation>
          <documentation>String supporting 72 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z_,.# ]{1,72}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString75">
        <annotation>
          <documentation>String supporting 75 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,75}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString140">
        <annotation>
          <documentation>String supporting 140 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,140}"/>
        </restriction>
      </simpleType>
      <simpleType name="piFormat">
        <annotation>
          <documentation>Enumeration for Message Format.</documentation>
        </annotation>
        <restriction base="string">
          <annotation>
            <documentation>Specifies from and to format for Payment
					Initiation</documentation>
          </annotation>
          <enumeration value="MT101"/>
        </restriction>
      </simpleType>
      <simpleType name="eodFormat">
        <annotation>
          <documentation>Enumeration for Message Format.</documentation>
        </annotation>
        <restriction base="string">
          <annotation>
            <documentation>Specifies from and to format for EOD Account
					Information Format</documentation>
          </annotation>
          <enumeration value="MT940"/>
        </restriction>
      </simpleType>
      <simpleType name="intradayFormat">
        <annotation>
          <documentation>Enumeration for Message Format.</documentation>
        </annotation>
        <restriction base="string">
          <annotation>
            <documentation>Specifies from and to format for Intraday Account
					Information Format</documentation>
          </annotation>
          <enumeration value="MT942"/>
        </restriction>
      </simpleType>
      <simpleType name="messageExchangeType">
        <annotation>
          <documentation>Enumeration for Message Format.</documentation>
        </annotation>
        <restriction base="string">
          <annotation>
            <documentation>Specifies Message Exchange Type</documentation>
          </annotation>
          <enumeration value="PI"/>
          <enumeration value="EOD"/>
          <enumeration value="INTRADAY"/>
        </restriction>
      </simpleType>
      <simpleType name="max21decimalvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit decimal with ten digit fraction that are
				not otherwise restricted by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <totalDigits value="21"/>
          <fractionDigits value="3"/>
          <minInclusive value="000000000000000000000.000"/>
          <maxInclusive value="999999999999999999.999"/>
        </restriction>
      </simpleType>
      <simpleType name="max15alphabeticType">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{1,15}"/>
        </restriction>
      </simpleType>
      <simpleType name="min0max5numericvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{0,5}"/>
        </restriction>
      </simpleType>
      <simpleType name="statusType">
        <annotation>
          <documentation>Enumeration for Status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE">
            <annotation>
              <documentation>Describes active status.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="CLOSED">
            <annotation>
              <documentation>Describes closed status.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="FUTURE">
            <annotation>
              <documentation>Describes future status.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="statusActiveFuture">
        <annotation>
          <documentation>Enumeration for Status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE">
            <annotation>
              <documentation>Describes active status.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="FUTURE">
            <annotation>
              <documentation>Describes future status.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="max3screenRank">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{1,3}"/>
        </restriction>
      </simpleType>
      <simpleType name="max6decimalvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit decimal with ten digit fraction that are
				not otherwise restricted by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="6"/>
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="max8totaldigits">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit decimal with ten digit fraction that are
				not otherwise restricted by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="6"/>
          <totalDigits value="8"/>
        </restriction>
      </simpleType>
      <simpleType name="percentage">
        <restriction base="decimal">
          <totalDigits value="3"/>
          <minInclusive value="0"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="percentageInt">
        <restriction base="int">
          <totalDigits value="3"/>
          <minInclusive value="0"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="percentageUnitSplit">
        <restriction base="decimal">
          <totalDigits value="5"/>
          <fractionDigits value="2"/>
          <minInclusive value="0"/>
          <maxInclusive value="100"/>
        </restriction>
      </simpleType>
      <simpleType name="max5numericvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{5}"/>
        </restriction>
      </simpleType>
      <complexType name="accountTypewithCashPool">
        <choice>
          <element minOccurs="0" name="accountType" type="common:accountType">
            <annotation>
              <documentation>Describes the Accounts that are available in
						PBD .</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="CashPool" type="string">
            <annotation>
              <documentation>Describes the Cash Pool Type that are available in
						PBD
						.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <simpleType name="status">
        <annotation>
          <documentation></documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE"/>
          <enumeration value="AWAITING_VERIFICATION"/>
          <enumeration value="UNDER_VERIFICATION"/>
          <enumeration value="VERIFIED"/>
          <enumeration value="CLOSED"/>
          <enumeration value="INACTIVE"/>
          <enumeration value="FUTURE"/>
        </restriction>
      </simpleType>
      <simpleType name="gmtDifference">
        <restriction base="string">
          <pattern value="[+\-](0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]"/>
        </restriction>
      </simpleType>
      <simpleType name="fxMargin">
        <restriction base="int">
          <minInclusive value="-100"/>
          <maxInclusive value="+999"/>
        </restriction>
      </simpleType>
      <complexType name="accountIdentifier">
        <annotation>
          <documentation>Account Identifier for BBAN or IBAN</documentation>
        </annotation>
        <choice>
          <element name="IBANAccountNumber" type="common:ibanAccountNumberType">
            <annotation>
              <documentation>represents International Bank Identification Number</documentation>
            </annotation>
          </element>
          <element name="BBANAccountNumber" type="common:bbanAccountNumberType">
            <annotation>
              <documentation>represents Basic Bank Account Number</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <simpleType name="agreementType">
        <annotation>
          <documentation>Enum for Agreement type like SpecialAgreements or ApplyStandardAgreements or StandardAgreements</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="SPECIALAGREEMENT">
            <annotation>
              <documentation>This enum only for list to
						fetch special agreements</documentation>
            </annotation>
          </enumeration>
          <enumeration value="APPLYSTANDARDAGREEMENT">
            <annotation>
              <documentation>This enum only for list to
						fetch apply standard agreements</documentation>
            </annotation>
          </enumeration>
          <enumeration value="STANDARDAGREEMENT">
            <annotation>
              <documentation>This enum only for list to
						fetch standard agreements</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="interestRatePercentageType">
        <annotation>
          <documentation>Common decimal type used for interest rate in
				PBD. Can
				be negative.
				1.0 is 1%</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="4"/>
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="max7DigitsWith5Fraction">
        <annotation>
          <documentation>Common decimal type used for interest rate in
				PBD. Can
				be negative.
				1.0 is 1%</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="7"/>
        </restriction>
      </simpleType>
      <simpleType name="marginType">
        <annotation>
          <documentation>Common decimal type used for margins rate in PBD</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="4"/>
          <totalDigits value="6"/>
        </restriction>
      </simpleType>
      <simpleType name="interestRatePositivePercentageType">
        <annotation>
          <documentation>Common decimal type used for interest rate in
				cashpool. Must be positive
				1.0 is 1%</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="4"/>
          <totalDigits value="6"/>
          <minExclusive value="0"/>
        </restriction>
      </simpleType>
      <simpleType name="positive7MaxDigitsWith5Fraction">
        <annotation>
          <documentation>Common decimal type used for interest rate in
				cashpool. Must be positive
				1.0 is 1%</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="7"/>
          <minExclusive value="0"/>
        </restriction>
      </simpleType>
      <complexType name="currency">
        <annotation>
          <documentation>Complex type to represent the Currency Value.</documentation>
        </annotation>
        <choice>
          <element name="currencyId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the Currency Id .</documentation>
            </annotation>
          </element>
          <element name="currency" type="common:currencyISOCode">
            <annotation>
              <documentation>Describes the Currency Id .</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="bank">
        <annotation>
          <documentation>Complex type to represent the bank Value.</documentation>
        </annotation>
        <choice>
          <element name="bankId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the bankId .</documentation>
            </annotation>
          </element>
          <element name="bankCode" type="common:bankIdentificationNumber">
            <annotation>
              <documentation>Describes the bankCode.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="oldBankCode" type="common:bankIdentificationNumber">
            <annotation>
              <documentation>Describes the Old bankCode.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="country">
        <annotation>
          <documentation>Complex type to represent the country Value.</documentation>
        </annotation>
        <choice>
          <element name="countryId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the country Id .</documentation>
            </annotation>
          </element>
          <element name="countryCode" type="common:countryISOCode">
            <annotation>
              <documentation>Describes the country code .</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="bankProduct">
        <annotation>
          <documentation>Complex type to represent the bankProduct Value.</documentation>
        </annotation>
        <choice>
          <element name="bankProductId" type="common:generatedPkType">
            <annotation>
              <documentation>Holds the Bank defined product name Id for
						Prodcut
						which
						will
						be used by BANK .</documentation>
            </annotation>
          </element>
          <element name="bankProductName" type="common:alphaNumericmin1max35">
            <annotation>
              <documentation>Describes the bank Product Keys
						which
						will
						be used
						by
						BANK .</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="category">
        <annotation>
          <documentation>Complex type to represent the category Values.</documentation>
        </annotation>
        <choice>
          <element name="categoryId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the category Id which will be used in
						Interestrates and Commission.</documentation>
            </annotation>
          </element>
          <element name="categoryType" type="common:maxString50">
            <annotation>
              <documentation>Describes the category Type which will be used in
						Interestrates and Commission.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="products">
        <annotation>
          <documentation>Complex type to represent the for product info.</documentation>
        </annotation>
        <choice>
          <element name="productId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the product Id .</documentation>
            </annotation>
          </element>
          <element name="productName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Name.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productArea">
        <annotation>
          <documentation>Complex type to represent the for product Area
				info.</documentation>
        </annotation>
        <choice>
          <element minOccurs="0" name="productAreaId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the productArea Id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productAreaName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Area Name.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productGroup">
        <annotation>
          <documentation>Complex type to represent the for product Group
				info.</documentation>
        </annotation>
        <choice>
          <element minOccurs="0" name="productGroupId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the productGroup Id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productGroupName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Group Name.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productFamily">
        <annotation>
          <documentation>Complex type to represent the for product Family
				info.</documentation>
        </annotation>
        <choice>
          <element name="productFamilyId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the productFamily Id.</documentation>
            </annotation>
          </element>
          <element name="productFamilyName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Family Name.</documentation>
            </annotation>
          </element>
        </choice>
      </complexType>
      <complexType name="productAreaType">
        <annotation>
          <documentation>Complex type to represent the for product Area
				info.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productAreaId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the product Area Id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productAreaName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Area Name.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productGroupType">
        <annotation>
          <documentation>Complex type to represent the for product Group
				info.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productGroupId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the product Group Id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productGroupName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Group Name.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productFamilyType">
        <annotation>
          <documentation>Complex type to represent the for product Family
				info.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productFamilyId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the product Family Id.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productFamilyName" type="common:maxString50">
            <annotation>
              <documentation>Describes the product Family Name.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="bankProductType">
        <annotation>
          <documentation>Complex type to represent the bankProduct Value.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="bankProductId" type="common:generatedPkType">
            <annotation>
              <documentation>Holds the Bank defined product name Id for
						Prodcut
						which
						will
						be used by BANK .</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="bankProductName" type="common:alphaNumericmin1max35">
            <annotation>
              <documentation>Describes the bank Product Keys
						which
						will
						be used
						by
						BANK .</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="categoryType">
        <annotation>
          <documentation>Complex type to represent the category Values.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="categoryId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the category Id which will be used in
						Interestrates and Commission.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="categoryType" type="common:maxString50">
            <annotation>
              <documentation>Describes the category Type which will be used in
						Interest rates and Commission.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="currencyType">
        <annotation>
          <documentation>Complex type to represent the Currency Value.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="currencyId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the Currency Id .</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="currency" type="common:currencyISOCode">
            <annotation>
              <documentation>Describes the Currency Id .</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="bankType">
        <annotation>
          <documentation>Complex type to represent the Currency Value.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="bankId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the bankId .</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="bankCode" type="common:bankIdentificationNumber">
            <annotation>
              <documentation>Describes the bankCode.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="productType">
        <annotation>
          <documentation>Complex type to represent the for product info.</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="productId" type="common:generatedPkType">
            <annotation>
              <documentation>Describes the product Id .</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="productName" type="common:max35AlphabeticTypeWithSpace">
            <annotation>
              <documentation>Describes the product Name.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="currencyAndAmountType">
        <annotation>
          <documentation>Type for an amount in a given currency</documentation>
        </annotation>
        <sequence>
          <element name="amount" type="common:moniteryAmount"/>
          <element minOccurs="0" name="currency" type="common:currencyISOCode"/>
        </sequence>
      </complexType>
      <complexType name="currencyAndPaymentAmountType">
        <annotation>
          <documentation>Type for an amount in a given currency Payment Product
				and Product Agreement.</documentation>
        </annotation>
        <sequence>
          <element name="amount" type="common:paymentAmount"/>
          <element minOccurs="0" name="currency" type="common:currencyISOCode"/>
        </sequence>
      </complexType>
      <complexType name="currencyAndBigPaymentAmountType">
        <annotation>
          <documentation>Type for an amount in a given currency Payment Product
				and Product Agreement.</documentation>
        </annotation>
        <sequence>
          <element name="amount" type="common:amountType"/>
          <element minOccurs="0" name="currency" type="common:currencyISOCode"/>
        </sequence>
      </complexType>
      <complexType name="currencyAndBigPaymentAmountTypeWithVat">
        <annotation>
          <documentation>Type for an amount in a given currency Payment Product
				and Product Agreement.</documentation>
        </annotation>
        <sequence>
          <element name="amount" type="common:amountType"/>
          <element minOccurs="0" name="totalCharge" type="common:amountType"/>
          <element minOccurs="0" name="vat" type="common:amountType"/>
          <element minOccurs="0" name="currency" type="common:currencyISOCode"/>
        </sequence>
      </complexType>
      <complexType name="currencyAndChargeAmountType">
        <annotation>
          <documentation>Type for an charge amount in a given currency</documentation>
        </annotation>
        <sequence>
          <element name="amount" type="common:chargeAmount"/>
          <element minOccurs="0" name="currency" type="common:currencyISOCode"/>
        </sequence>
      </complexType>
      <complexType name="translationDetails">
        <annotation>
          <documentation>Complex Type for transaction details list</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="languageCode" type="common:languageISOCode">
            <annotation>
              <documentation>Language Code
						Valid values:EN,NB(till now). Any
						language support is there.
						Language Code is optional in input and
						output.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="description" type="common:max255StringType">
            <annotation>
              <documentation>Describes the additional Description for
						translated
						field. This is an optional field in output.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <complexType name="ipctranslationDetails">
        <annotation>
          <documentation>Complex Type for transaction details list</documentation>
        </annotation>
        <complexContent>
          <extension base="common:translationDetails">
            <sequence>
              <element minOccurs="0" name="internalProductName" type="common:alphaNumericmax75">
                <annotation>
                  <documentation>Translated internal product name of length 75. This will show
								translated value for internal product code name. This is an optional field
								in
								output.</documentation>
                </annotation>
              </element>
            </sequence>
          </extension>
        </complexContent>
      </complexType>
      <simpleType name="alphaNumericmin1max35">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit alphanumeric that are not otherwise
				restricted by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmin1max20">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit alphanumeric that are not otherwise
				restricted by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="orderDirectionType">
        <annotation>
          <documentation>Order direction when sorting</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ASC">
            <annotation>
              <documentation>Ascending</documentation>
            </annotation>
          </enumeration>
          <enumeration value="DESC">
            <annotation>
              <documentation>Descending</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="BICLevelEnum">
        <annotation>
          <documentation>This enumeration to represent the BIC level.like
				BIC04, BIC06, BIC08 and BIC11.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="BIC04"/>
          <enumeration value="BIC06"/>
          <enumeration value="BIC08"/>
          <enumeration value="BIC11"/>
        </restriction>
      </simpleType>
      <simpleType name="BICMaintStatusEnum">
        <annotation>
          <documentation>This enumeration to represent the status for
				bankIdentifierCode.like
				Completed or Pending.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PENDING"/>
          <enumeration value="COMPLETE"/>
        </restriction>
      </simpleType>
      <simpleType name="ActionEnum">
        <annotation>
          <documentation>This enumeration to represent the action for
				bankIdentifierCode.like
				Modify or Delete.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="DELETED"/>
          <enumeration value="MODIFIED"/>
        </restriction>
      </simpleType>
      <simpleType name="BICMaintAreaEnum">
        <annotation>
          <documentation>This enumeration to represent the PBDAreaName for
				bankIdentifierCode.like
				WBRULE,BANK,BANKAGREEMENT or
				CUSTOMERAGREEMENT .</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="WBRULE"/>
          <enumeration value="BANK"/>
          <enumeration value="BANKAGREEMENT"/>
          <enumeration value="CUSTOMERAGREEMENT"/>
        </restriction>
      </simpleType>
      <simpleType name="codeWordValidForEnum">
        <restriction base="string">
          <enumeration value="INWARD">
            <annotation>
              <documentation>Describes if a code word will be used on incoming
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="OUTWARD">
            <annotation>
              <documentation>Describes if a code word will be used on outgoing
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BOTH">
            <annotation>
              <documentation>Describes if a code word will be used both on
						incoming and outgoing payments</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="codeWordValidDirection">
        <restriction base="string">
          <enumeration value="INWARD">
            <annotation>
              <documentation>Describes if a code word will be used on incoming
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="OUTWARD">
            <annotation>
              <documentation>Describes if a code word will be used on outgoing
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="ANY">
            <annotation>
              <documentation>Describes if a code word will be used on
						outgoing/incoming
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="BANKTOBANK">
            <annotation>
              <documentation>Describes if a code word will be used on
						outgoing/incoming
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="TOTALPOSTING">
            <annotation>
              <documentation>Describes if a code word will be used on
						outgoing/incoming
						payments</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="paymentDirectionEnum">
        <restriction base="string">
          <enumeration value="INCOMING">
            <annotation>
              <documentation>Describes if a payment direction will be used on
						incoming
						payments</documentation>
            </annotation>
          </enumeration>
          <enumeration value="OUTGOING">
            <annotation>
              <documentation>Describes if a payment direction will be used on
						outgoing
						payments</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="alphabetic4CharactersString">
        <annotation>
          <documentation>Restriction on a string value to contain 4 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}a-zA-Z]{4}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphanumeric4CharactersString">
        <annotation>
          <documentation>Restriction on a string value to contain 4 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}a-zA-Z]{4}"/>
        </restriction>
      </simpleType>
      <complexType name="previousOrNextDate">
        <annotation>
          <documentation>Describes the previous or next date</documentation>
        </annotation>
        <sequence>
          <choice>
            <element name="previousValidDate" type="common:date"/>
            <element name="nextValidDate" type="common:date"/>
          </choice>
        </sequence>
      </complexType>
      <simpleType name="min1max140String">
        <annotation>
          <documentation>String supporting 140 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,140}"/>
        </restriction>
      </simpleType>
      <simpleType name="maxString105">
        <annotation>
          <documentation>String supporting 105 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,105}"/>
        </restriction>
      </simpleType>
      <simpleType name="PBDAreaEnum">
        <annotation>
          <documentation>This enumeration to represent the PBDAreaName like
				CG,BG,BI .</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="CORPORATE_GROUP"/>
          <enumeration value="BANK_GROUP"/>
          <enumeration value="BANK"/>
          <enumeration value="BANK_STANDARDS"/>
          <enumeration value="CASH_POOL_STANDARDS"/>
          <enumeration value="CASH_POOL_TYPES"/>
          <enumeration value="MARKET_INTEREST_RATE_TYPES"/>
          <enumeration value="OBS_ACCOUNTS"/>
          <enumeration value="ICP_ACCOUNTS"/>
          <enumeration value="PRODUCT_MAPPING"/>
          <enumeration value="CA"/>
          <enumeration value="CCT"/>
          <enumeration value="CRSP"/>
          <enumeration value="CRSPCD"/>
          <enumeration value="SYSTEM_CURRENCY"/>
          <enumeration value="BANK_CURRENCY"/>
          <enumeration value="PRODUCT_MODULE"/>
          <enumeration value="PRODUCT_AGREEMENT"/>
          <enumeration value="WBRULE"/>
          <enumeration value="BANKCOUNTRY"/>
          <enumeration value="CODEWORDS"/>
          <enumeration value="BANKAGREEMENT"/>
          <enumeration value="CUSTOMERAGREEMENT"/>
          <enumeration value="PAYMENTPRODUCT"/>
          <enumeration value="SECURITYPRODUCT"/>
          <enumeration value="INTEREST_ADJUSTMENT"/>
          <enumeration value="PAYMENTPRODUCTAGREEMENT"/>
          <enumeration value="PAYMENTSTANDARDAGREEMENT"/>
          <enumeration value="SECURITYPRODUCTAGREEMENT"/>
          <enumeration value="SECURITYSTANDARDAGREEMENT"/>
          <enumeration value="APPLYSTANDARDAGREEMENT"/>
          <enumeration value="PRODUCTMAP"/>
          <enumeration value="EXCHANGE_RATE"/>
          <enumeration value="CORRESPONDENT"/>
          <enumeration value="DEFAULTBANK"/>
          <enumeration value="ACCOUNT_REPLACEMENT_AGREEMENT"/>
          <enumeration value="AGENT_BANK"/>
          <enumeration value="AGENCY_PARAMETER"/>
          <enumeration value="FORWARD_ACCOUNT_AGREEMENT"/>
          <enumeration value="NUMBER_OF_VERIFIER"/>
          <enumeration value="CHARGE_ACCUMULATION_AGREEMENT"/>
          <enumeration value="SWEEPING_TOPPING_AGREEMENT"/>
          <enumeration value="STANDARD_SETTLEMENT_INSTRUCTION"/>
          <enumeration value="GLOBAL_LIQUIDITY_TYPES"/>
          <enumeration value="MESSAGE_RELEASE_SCHEDULER"/>
          <enumeration value="RESERVATION_DAYS"/>
          <enumeration value="SCHEDULER_PARAMETERS"/>
          <enumeration value="GENERAL_PAYMENT_PARAMETERS"/>
          <enumeration value="ACCESS_PAYMENT_PARAMETERS"/>
          <enumeration value="PAYMENT_PARAMETERS"/>
          <enumeration value="FUNDS_CHECK_PAYMENT_PARAMETERS"/>
          <enumeration value="CHARGE_ENGINE_PAYMENT_PARAMETERS"/>
          <enumeration value="PAYMENT_ENGINE_PAYMENT_PARAMETERS"/>
          <enumeration value="FOREIGN_EXCHANGE_PAYMENT_PARAMETERS"/>
          <enumeration value="INTERNAL_ACCOUNTS_PAYMENT_PARAMETERS"/>
          <enumeration value="STANDING_ORDER_PAYMENT_PARAMETERS"/>
          <enumeration value="SETTLEMENT_MECHANISM"/>
          <enumeration value="ROUTING_PRIORITY"/>
          <enumeration value="SETTLEMENT_PRIORITY"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max4Alphanumeric">
        <annotation>
          <documentation>Restriction on a string value to contain 4 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max12numericvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="0"/>
          <totalDigits value="12"/>
          <minExclusive value="0"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max10Alphanumeric">
        <annotation>
          <documentation>Restriction on a string value to contain 4 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="max120AlphaNumericWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,120}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max80Alphanumeric">
        <annotation>
          <documentation>Restriction on a string value to contain 4 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\w\W ]{1,80}"/>
        </restriction>
      </simpleType>
      <simpleType name="max12AlphaNumericWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,12}"/>
        </restriction>
      </simpleType>
      <simpleType name="max35AlphaNumericWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="max10AlphaNumeric">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="max20StringNorwegianType">
        <annotation>
          <documentation>String supporting 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,20}"/>
        </restriction>
      </simpleType>
      <simpleType name="max10StringNorwegianType">
        <annotation>
          <documentation>String supporting 50 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="productIdType">
        <annotation>
          <documentation>This will be right zero-padded before sent to core.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="max35StringType">
        <annotation>
          <documentation>Value restricted to min of 1 and max of 35 characters</documentation>
        </annotation>
        <restriction base="string">
          <maxLength value="35"/>
          <minLength value="1"/>
        </restriction>
      </simpleType>
      <simpleType name="max3StringType">
        <annotation>
          <documentation>ISO 4217 alpha code (3 positions)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z]{3}"/>
        </restriction>
      </simpleType>
      <simpleType name="max5decimalvalue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit decimal with five digit fraction that are
				not otherwise restricted by some business means.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="5"/>
          <totalDigits value="11"/>
        </restriction>
      </simpleType>
      <simpleType name="changeStatus">
        <annotation>
          <documentation>Describes the change status.
				Supported Status are:
				ACTIVE, AWAITING_VERIFICATION, UNDER_VERIFICATION", VERIFIED",
				INACTIVE,
				FUTURE, CLOSED.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE"/>
          <enumeration value="AWAITING_VERIFICATION"/>
          <enumeration value="UNDER_VERIFICATION"/>
          <enumeration value="VERIFIED"/>
          <enumeration value="INACTIVE"/>
          <enumeration value="FUTURE"/>
          <enumeration value="CLOSED"/>
        </restriction>
      </simpleType>
      <simpleType name="changeStatusWithAll">
        <annotation>
          <documentation>Describes the change status.
				Supported Status are:
				ACTIVE, AWAITING_VERIFICATION, UNDER_VERIFICATION", VERIFIED",
				INACTIVE,
				FUTURE, CLOSED and ALL.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ALL"/>
          <enumeration value="ACTIVE"/>
          <enumeration value="AWAITING_VERIFICATION"/>
          <enumeration value="UNDER_VERIFICATION"/>
          <enumeration value="VERIFIED"/>
          <enumeration value="INACTIVE"/>
          <enumeration value="FUTURE"/>
          <enumeration value="CLOSED"/>
        </restriction>
      </simpleType>
      <simpleType name="max35AlphaNumericType">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 35 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="yesOrNoStatus">
        <annotation>
          <documentation>Describes the Yes or No status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="YES"/>
          <enumeration value="NO"/>
        </restriction>
      </simpleType>
      <simpleType name="yesNoAndBothStatus">
        <annotation>
          <documentation>Describes the Yes No and BOTH status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="YES"/>
          <enumeration value="NO"/>
          <enumeration value="BOTH"/>
        </restriction>
      </simpleType>
      <simpleType name="trueOrFalseStatus">
        <annotation>
          <documentation>Describes the True or False status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="TRUE"/>
          <enumeration value="FALSE"/>
        </restriction>
      </simpleType>
      <simpleType name="trueFalseAndAnyStatus">
        <annotation>
          <documentation>Describes the True, False and Any status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="TRUE"/>
          <enumeration value="FALSE"/>
          <enumeration value="ANY"/>
        </restriction>
      </simpleType>
      <simpleType name="messageType">
        <annotation>
          <documentation>Describes the message type.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PAYMENT"/>
          <enumeration value="COVER"/>
          <enumeration value="FILE"/>
          <enumeration value="INVESTIGATION"/>
        </restriction>
      </simpleType>
      <simpleType name="messageFormat">
        <annotation>
          <documentation>Describes the message format.String supporting Alpha
				Numeric type with a maxlength
				of 35</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W0-9 ]{1,40}"/>
        </restriction>
      </simpleType>
      <simpleType name="min4max35AlphaNumericWithSpace">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{4,35}"/>
        </restriction>
      </simpleType>
      <simpleType name="emailId">
        <annotation>
          <documentation>Describes the pattern for contact person's email</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[A-Za-z0-9.@_]{1,70}"/>
        </restriction>
      </simpleType>
      <simpleType name="paymentPriority">
        <annotation>
          <documentation>This enumeration to represent the priority of the
				payment transaction</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="NORMAL"/>
          <enumeration value="HIGH"/>
        </restriction>
      </simpleType>
      <simpleType name="closeToSEPA">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 4.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="4"/>
        </restriction>
      </simpleType>
      <simpleType name="dateIfHoliday">
        <annotation>
          <documentation>Enumeration for dateIfHoliday.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="MOVE_TO_NEXT_BUSINESS_DAY"/>
          <enumeration value="MOVE_TO_FORMER_BUSINESS_DAY"/>
          <enumeration value="REJECT"/>
        </restriction>
      </simpleType>
      <simpleType name="payAwayCurrency">
        <annotation>
          <documentation>Enumeration for the handling of incoming pay-aways.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="OK"/>
          <enumeration value="EXCEPTION"/>
        </restriction>
      </simpleType>
      <simpleType name="settlementTypeEnum">
        <annotation>
          <documentation>Describes allowed for Settlement types.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="SEPA"/>
          <enumeration value="AGENT"/>
          <enumeration value="S"/>
          <enumeration value="MASS"/>
          <enumeration value="ORDINARY_MECHANISM"/>
          <enumeration value="SEPA_SALA"/>
        </restriction>
      </simpleType>
      <simpleType name="standardSettlementInstruction">
        <annotation>
          <documentation>Enumeration for Standard Settlement Instruction.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="DEFAULT_BANK"/>
          <enumeration value="EXCEPTION"/>
        </restriction>
      </simpleType>
      <simpleType name="blockRateSetting">
        <annotation>
          <documentation>Enumeration for PE Block Rate.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="PE_BLOCK_RATE_MODULE"/>
          <enumeration value="TREASURY_SYSTEM"/>
        </restriction>
      </simpleType>
      <simpleType name="marketLedger">
        <annotation>
          <documentation>Enumeration for Market Ledger.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="EVRY_LEDGER"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max2digit24maxvalue">
        <annotation>
          <documentation>Integer supporting min value 0 and max value 24.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="0"/>
          <maxInclusive value="24"/>
        </restriction>
      </simpleType>
      <simpleType name="snapshotTimeEnum">
        <annotation>
          <documentation>This enumeration to represent the SnapshotTime in half
				an hour intervals like
				06:00,06:30,07:00,07:30 .. .Range range of
				06:00 to 18:00</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="06:00"/>
          <enumeration value="06:30"/>
          <enumeration value="07:00"/>
          <enumeration value="07:30"/>
          <enumeration value="08:00"/>
          <enumeration value="08:30"/>
          <enumeration value="09:00"/>
          <enumeration value="09:30"/>
          <enumeration value="10:00"/>
          <enumeration value="10:30"/>
          <enumeration value="11:00"/>
          <enumeration value="11:30"/>
          <enumeration value="12:00"/>
          <enumeration value="12:30"/>
          <enumeration value="13:00"/>
          <enumeration value="13:30"/>
          <enumeration value="14:00"/>
          <enumeration value="14:30"/>
          <enumeration value="15:00"/>
          <enumeration value="15:30"/>
          <enumeration value="16:00"/>
          <enumeration value="16:30"/>
          <enumeration value="17:00"/>
          <enumeration value="17:30"/>
          <enumeration value="18:00"/>
        </restriction>
      </simpleType>
      <simpleType name="checktolerance">
        <annotation>
          <documentation>Decimal type used for funds check tolerance.</documentation>
        </annotation>
        <restriction base="decimal">
          <fractionDigits value="2"/>
          <totalDigits value="5"/>
          <maxInclusive value="100.00"/>
          <minInclusive value="-100.00"/>
        </restriction>
      </simpleType>
      <simpleType name="holidayTypeEnum">
        <annotation>
          <documentation>Describes the holiday type.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="H"/>
        </restriction>
      </simpleType>
      <simpleType name="alphabetic140CharactersString">
        <annotation>
          <documentation>Restriction on a string value to contain 140 alphabets</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="140"/>
        </restriction>
      </simpleType>
      <simpleType name="statusActiveInactive">
        <annotation>
          <documentation>Enumeration for Status.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE">
            <annotation>
              <documentation>Describes active status.</documentation>
            </annotation>
          </enumeration>
          <enumeration value="INACTIVE">
            <annotation>
              <documentation>Describes Inactive status.</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="statusActiveInactiveFuture">
        <annotation>
          <documentation>Describes State status as Active, Inactive, Future</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ACTIVE"/>
          <enumeration value="INACTIVE"/>
          <enumeration value="FUTURE"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max50AlphaNumericWithSpaceType">
        <annotation>
          <documentation>Allows alphabets (any case), numbers and space with
				length 1 to 50</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9 ]{1,50}"/>
        </restriction>
      </simpleType>
      <simpleType name="max4AlphaNumeric">
        <annotation>
          <documentation>ISO 4217 alpha code (4 positions)</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="max4Numeric">
        <annotation>
          <documentation>Allows digits/numbers with
				length 1 to 4</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmax140">
        <annotation>
          <documentation>String supporting Alpha Numeric type with a maxLength
				of 140 chars.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[a-zA-Z0-9]{1,140}"/>
        </restriction>
      </simpleType>
      <simpleType name="alphaNumericmin1max30">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit alphanumeric that are not otherwise
				restricted by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}\w\W ]{1,30}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1Max10NumericValue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="long">
          <pattern value="[0-9]{1,10}"/>
        </restriction>
      </simpleType>
      <simpleType name="weekDays">
        <annotation>
          <documentation>List of Valid weekDays - MONDAY...FRIDAY..No Short
				Form Allowed</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="MONDAY"/>
          <enumeration value="TUESDAY"/>
          <enumeration value="WEDNESDAY"/>
          <enumeration value="THURSDAY"/>
          <enumeration value="FRIDAY"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max3StringTypeWithSpace">
        <annotation>
          <documentation>Type for representing a AlphaNumericString with 3
				characters like service code only with 3 character</documentation>
        </annotation>
        <restriction base="string">
          <minLength value="1"/>
          <maxLength value="3"/>
          <pattern value="[\w\W ]{1,3}"/>
        </restriction>
      </simpleType>
      <simpleType name="sortDirection">
        <annotation>
          <documentation>Enumeration for Sort Direction.</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="ASC">
            <annotation>
              <documentation>Ascending</documentation>
            </annotation>
          </enumeration>
          <enumeration value="DESC">
            <annotation>
              <documentation>Descending</documentation>
            </annotation>
          </enumeration>
        </restriction>
      </simpleType>
      <simpleType name="adviceForBank">
        <annotation>
          <documentation>Describes the advice for Bank.
				Supported Status are:
				"DEBIT", "CREDIT", "DEBIT/CREDIT", "NO".</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="DEBIT"/>
          <enumeration value="CREDIT"/>
          <enumeration value="DEBIT/CREDIT"/>
          <enumeration value="NO"/>
        </restriction>
      </simpleType>
      <simpleType name="transactionType">
        <annotation>
          <documentation>Describes the Transaction Type.
				Supported Status are:
				"COPA".</documentation>
        </annotation>
        <restriction base="string">
          <enumeration value="COPA"/>
        </restriction>
      </simpleType>
      <simpleType name="max4StringAsNumberOnly">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit strings that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{1,4}"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max3NumericValue">
        <annotation>
          <documentation>This is just a restriction chosen which fits the
				persistence model.It has no business meaning as such, and is just
				chosen as a way to limit integer that are not otherwise restricted
				by some business means.</documentation>
        </annotation>
        <restriction base="int">
          <pattern value="[0-9]{1,3}"/>
        </restriction>
      </simpleType>
      <simpleType name="max3DigitStrValue">
        <annotation>
          <documentation>This is just a restriction chosen for 3 digits base as
				String(0-9 which can also support prefix as '0')</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[0-9]{3}"/>
        </restriction>
      </simpleType>
      <simpleType name="max4StringWithoutSpace">
        <annotation>
          <documentation>This is just a restriction chosen for 4 digits base as
				String (Alphabets Only) without space</documentation>
        </annotation>
        <restriction base="string">
          <pattern value="[\p{L}]{4,4}"/>
        </restriction>
      </simpleType>
      <complexType name="auditInfo">
        <annotation>
          <documentation>This type contains fields of Audit Information such Add
			User, Modified User,
			Add Date and Modified Date</documentation>
        </annotation>
        <sequence>
          <element minOccurs="0" name="addDate" type="date">
            <annotation>
              <documentation>Describes the date on which a record was created.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="addUser" type="common:userId">
            <annotation>
              <documentation>Describes who created a record.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="modifiedDate" type="date">
            <annotation>
              <documentation>Describes the date on which a record was modified.</documentation>
            </annotation>
          </element>
          <element minOccurs="0" name="modifiedUser" type="common:userId">
            <annotation>
              <documentation>Describes who modified a record.</documentation>
            </annotation>
          </element>
        </sequence>
      </complexType>
      <simpleType name="min1max2digit30maxvalue">
        <annotation>
          <documentation>Integer supporting min value 1 and max value 30.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="30"/>
        </restriction>
      </simpleType>
      <simpleType name="min1max3digit">
        <annotation>
          <documentation>Integer supporting 3 integers.</documentation>
        </annotation>
        <restriction base="int">
          <minInclusive value="1"/>
          <maxInclusive value="999"/>
        </restriction>
      </simpleType>
    </schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:srv.pbd.fs.edb.com:domain:bankdirectory:v2_5" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:srv.pbd.fs.edb.com:domain:bankdirectory:v2_5" xmlns:common="urn:srv.pbd.fs.edb.com:domain:common:v1_0" xmlns:bankdirectory="urn:srv.pbd.fs.edb.com:domain:bankdirectory:v2_5">
      <xs:import namespace="urn:srv.pbd.fs.edb.com:domain:common:v1_0"/>
      <xs:complexType name="ibanOnly">
        <xs:sequence>
          <xs:element name="iban" type="common:ibanAccountNumberType">
            <xs:annotation>
              <xs:documentation>International Bank Account Number (IBAN)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="doIbanValidation" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to indicate if iban validation should be
                        done (mod97 validation). Default=false</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="doReturnBicInfo" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to indicate if BIC info should be returned.
                        Default=true</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="doReturnAdditionalBicInfo" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to indicate if Additional BIC
                        info(address1-4,city,pob and zip code) should be returned.
                        Default=true</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="doSepaAdherenceCheck" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to indicate whether to do SEPA adherence
                        check or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="validBankIdentifier">
        <xs:annotation>
          <xs:documentation>Bank identifier</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:choice>
            <xs:element minOccurs="0" name="bic" type="common:bankIdentifierCode">
              <xs:annotation>
                <xs:documentation>BIC related to the bank.</xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="nationalIdentifier" type="tns:nationalIdentifier">
              <xs:annotation>
                <xs:documentation>NationalId and CountryCode related to the bank.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>
          <xs:element minOccurs="0" name="checkSepaAdherence" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Check SEPA Adherence.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="nationalIdentifier">
        <xs:annotation>
          <xs:documentation>national Identifier</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="nationalId" type="common:maxAlphaNumeric35withspeicalchar">
            <xs:annotation>
              <xs:documentation>The National identifier of the
                        bank/branch (spaces
                        allowed as found some in bank directory from SWIFT file).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="countryCode" type="common:countryISOCode">
            <xs:annotation>
              <xs:documentation>The code of the country of the
                        institution/branch.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bankIdentifier">
        <xs:annotation>
          <xs:documentation>bank Identifier</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="bic" type="common:bankIdentifierCode">
            <xs:annotation>
              <xs:documentation>BIC related to the bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="nationalId" type="common:min1max15AlphaNumericType">
            <xs:annotation>
              <xs:documentation>The National identifier of the
                        bank/branch (spaces
                        allowed as found some in bank directory from SWIFT file).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="countryCode" type="common:countryISOCode">
            <xs:annotation>
              <xs:documentation>The code of the country of the
                        institution/branch.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bankDirectorySearchTokens">
        <xs:annotation>
          <xs:documentation>Bank directory search tokens</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="bicToken" type="common:min1max11stringType">
            <xs:annotation>
              <xs:documentation>BIC related to the bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="nationalIdToken" type="common:maxAlphaNumeric35withspeicalchar">
            <xs:annotation>
              <xs:documentation>The National identifier of the
                        bank/branch (spaces
                        allowed as found some in bank directory from SWIFT file).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="bankNameToken" type="common:min1max105StringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>The Name of the bank/branch.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cityToken" type="common:min1max35StringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>The City name of the bank/branch.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="countryCodeToken" type="common:countryISOCode">
            <xs:annotation>
              <xs:documentation>The code of the country of the
                        institution/branch.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="countryNameToken" type="common:min1max70stringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>The country name of the bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" name="includeNonPublicBic" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Flag to indicate whether Non-public BICs are
                        included or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bankDetails">
        <xs:annotation>
          <xs:documentation>The bankDirectory Details For
                GUI/External System.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:bankIdentifier">
            <xs:sequence>
              <xs:element minOccurs="0" name="city" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>City name of the bank/branch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="countryName" type="common:min1max70stringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Country name of the bank.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="connectedBIC" type="common:bankIdentifierCode">
                <xs:annotation>
                  <xs:documentation>This is the connected BIC code of the same
                                institution, if available, or of its correspondent through which
                                it connects.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="branchQualifiers" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>BIC branch qualifiers from the BIC Directory.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="chipsUID" type="common:min0max6numericvalue">
                <xs:annotation>
                  <xs:documentation>This is the CHIPS Universal ID related to the
                                institution.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="cps" type="common:min1max90StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>County, province, state or other administrative
                                region of the owner institution/branch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="ibanKey" type="common:AlphaNumericmin1max12">
                <xs:annotation>
                  <xs:documentation>Identifies the RECORD KEY in the IBAN PLUS flat
                                file that contains the IBAN data for this entity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="institutionStatus" type="tns:institutionType">
                <xs:annotation>
                  <xs:documentation>The license status of the institution.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="institutionName" type="common:min1max105StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>This is the bank name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="legalType" type="tns:legalType">
                <xs:annotation>
                  <xs:documentation>The status of the entity in the legal
                                hierarchy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="networkConnectivity" type="common:AlphaNumericmin1max4">
                <xs:annotation>
                  <xs:documentation>Network Connectivity.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="officetype" type="tns:officeType">
                <xs:annotation>
                  <xs:documentation>The status of the entity in the
                                office
                                hierarchy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="pobNumber" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Post office box number of the
                                institution/branch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="serviceCodes" type="common:min1max60StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Service codes.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress1" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address1.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress2" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address2.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress3" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address3.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress4" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address4.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="subTypeIndicator" type="common:min1max4StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Type of financial institution from the
                                BIC
                                Directory.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="timeZone" type="common:min1max10StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>The time zone at the bank location.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="zipCode" type="common:min1max15StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Zip code of the institution/branch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="nonPublicBic" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>The institutions which do not submit their BICs
                                to SWIFTs directory.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="validBankAddress">
        <xs:annotation>
          <xs:documentation>Describes the bankDirectory Details For
                GUI/External System.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:bankIdentifier">
            <xs:sequence>
              <xs:element name="validationResponse" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>This will say whether the value is valid or not</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="bankName" type="common:min1max105StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Describes the Name of the bank/branch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="city" type="common:min1max70stringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Describes the City name of the bank/branch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="countryName" type="common:min1max70stringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Describes the the country name of the bank.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="pobNumber" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Post office box number of the
                                institution/branch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress1" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address1.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress2" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address2.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress3" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address3.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress4" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address4.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="zipCode" type="common:min1max15StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Zip code of the institution/branch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="hasMultipleRecords" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>This field describes multiple records are
                                available or not for a given bic or (nationalId, countryCode)</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="nonPublicBic" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>The institutions which do not submit their BICs
                                to SWIFTs directory.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:simpleType name="institutionType">
        <xs:annotation>
          <xs:documentation>Enumeration for institution type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BANK">
            <xs:annotation>
              <xs:documentation>Describes Universal Bank.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="COOP">
            <xs:annotation>
              <xs:documentation>Describes Cooperative Bank.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CBMA">
            <xs:annotation>
              <xs:documentation>Describes Central Bank/Monetary Authority.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="CRUN">
            <xs:annotation>
              <xs:documentation>Describes Credit Union.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="XCHG">
            <xs:annotation>
              <xs:documentation>Describes Exchange.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="PYMI">
            <xs:annotation>
              <xs:documentation>Describes Payments Institution.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="INVM">
            <xs:annotation>
              <xs:documentation>A value which isn't mentioned in the
                        BankDirectory specification, but exists in the dataset.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="OTHR">
            <xs:annotation>
              <xs:documentation>Describes other institution.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MONX">
            <xs:annotation>
              <xs:documentation>Money Exchange</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NPAA">
            <xs:annotation>
              <xs:documentation>National payment association</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SLBH">
            <xs:annotation>
              <xs:documentation>Saving-Lending Bank Housing</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SUFI">
            <xs:annotation>
              <xs:documentation>Supervised Financial Institution</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ASSM">
            <xs:annotation>
              <xs:documentation>Asset manager</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="ICSD">
            <xs:annotation>
              <xs:documentation>International Central Securities
                        Depository</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="legalType">
        <xs:annotation>
          <xs:documentation>Enumeration for legal type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="L">
            <xs:annotation>
              <xs:documentation>Describes Legal Entity.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="B">
            <xs:annotation>
              <xs:documentation>Business Entity.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="U">
            <xs:annotation>
              <xs:documentation>Describes Unknown.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="officeType">
        <xs:annotation>
          <xs:documentation>Enumeration for office type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="HO">
            <xs:annotation>
              <xs:documentation>Describes Head Office.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="MP">
            <xs:annotation>
              <xs:documentation>Describes Main Payments Office.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="DB">
            <xs:annotation>
              <xs:documentation>Describes Domestic Branch or department.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SB">
            <xs:annotation>
              <xs:documentation>Describes Sub Domestic Branch.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="FB">
            <xs:annotation>
              <xs:documentation>Describes Foreign Branch.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="SF">
            <xs:annotation>
              <xs:documentation>Describes Sub Foreign Branch .</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="UC">
            <xs:annotation>
              <xs:documentation>Describes Unclassified.</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ibanBicDetails">
        <xs:complexContent>
          <xs:extension base="tns:bicDetails">
            <xs:sequence>
              <xs:element minOccurs="0" name="isSepaAdherent" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Is SEPA adherent or not.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="isSepaInstantAdherent" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Indicates if BIC is SEPA INSTANT adherent or not</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="bicDetails">
        <xs:annotation>
          <xs:documentation>BIC/Routing BIC and it's details for IBAN validation response</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="bic" type="common:bankIdentifierCode">
            <xs:annotation>
              <xs:documentation>BIC of the bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="institutionName" type="common:min1max105StringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>Institution Name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="isoCountryCode" type="common:countryISOCode">
            <xs:annotation>
              <xs:documentation>ISO country code of bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element name="countryName" type="common:min1max70stringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>Country Name of the bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="nationalId" type="common:maxString35">
            <xs:annotation>
              <xs:documentation>National identifier of the bank (spaces allowed
                        as found some in bank directory from SWIFT file).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="city" type="common:min1max35StringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>City name of the bank/branch.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="pobNumber" type="common:min1max35StringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>Post office box number of the
                        institution/branch.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="streetAddress1" type="common:min1max35StringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>Street address1.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="streetAddress2" type="common:min1max35StringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>Street address2.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="streetAddress3" type="common:min1max35StringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>Street address3.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="streetAddress4" type="common:min1max35StringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>Street address4.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="zipCode" type="common:min1max15StringTypeWithSpace">
            <xs:annotation>
              <xs:documentation>Zip code of the institution/branch.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="hasMultipleAdditionalBICRecords" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates multiple addresses found when doing
                        additional search in BankDirectory</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="ValidBankAddressDetails">
        <xs:sequence>
          <xs:element minOccurs="0" name="bank" type="tns:validBankAddress">
            <xs:annotation>
              <xs:documentation>Response for validate BIC And NationalId</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="isSepaAdherent" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Is SEPA adherent or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="isSepaInstantAdherent" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if BIC is SEPA INSTANT adherent or not</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bankBicDirectoryDetailsTokens">
        <xs:annotation>
          <xs:documentation>The bankDirectory Details search token For
                GUI/External System.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:bankDirectorySearchTokens">
            <xs:sequence>
              <xs:element minOccurs="0" name="includeInactive" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Include inactive record(s) if this field have 'true' value.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="headOfficeOnly" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Search only Head Office type of bic details.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="bankBicDirectoryDetailsType">
        <xs:annotation>
          <xs:documentation>Bank Bic directory search details tokens</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element minOccurs="0" name="bankBicDetails" type="tns:bankBicDetailsType">
            <xs:annotation>
              <xs:documentation>BIC related to the bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="bankHeadOfficeBicDetails" type="tns:bankBicDetailsType">
            <xs:annotation>
              <xs:documentation>Head office BIC related to the bank.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="bankBicDetailsType">
        <xs:annotation>
          <xs:documentation>The bankDirectory Details For
                GUI/External System.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
          <xs:extension base="tns:bankIdentifier">
            <xs:sequence>
              <xs:element minOccurs="0" name="city" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>City name of the bank/branch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="countryName" type="common:min1max70stringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Country name of the bank.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="chipsUID" type="common:min0max6numericvalue">
                <xs:annotation>
                  <xs:documentation>This is the CHIPS Universal ID related to the
                                institution.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="institutionStatus" type="tns:institutionType">
                <xs:annotation>
                  <xs:documentation>The license status of the institution.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="institutionName" type="common:min1max105StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>This is the bank name.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="officetype" type="tns:officeType">
                <xs:annotation>
                  <xs:documentation>The status of the entity in the
                                office
                                hierarchy.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="pobNumber" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Post office box number of the
                                institution/branch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress1" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address1.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress2" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address2.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress3" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address3.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="streetAddress4" type="common:min1max35StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Street address4.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="zipCode" type="common:min1max15StringTypeWithSpace">
                <xs:annotation>
                  <xs:documentation>Zip code of the institution/branch.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="nonPublicBic" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>The institutions which do not submit their BICs
                                to SWIFTs directory.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="isSepaAdherent" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Is SEPA adherent SCT or not.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element minOccurs="0" name="isSepaInstantAdherent" type="xs:boolean">
                <xs:annotation>
                  <xs:documentation>Is SEPA instant adherent INST or not.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="recordKey" type="common:max12AlphaNumericWithSpace">
                <xs:annotation>
                  <xs:documentation>Record key as PK (PDBD_RECORD_KEY) of record.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="parentOfficeKey" type="common:max12AlphaNumericWithSpace">
                <xs:annotation>
                  <xs:documentation>Parent office key of record.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="headOfficeKey" type="common:max12AlphaNumericWithSpace">
                <xs:annotation>
                  <xs:documentation>Head office key of record.</xs:documentation>
                </xs:annotation>
              </xs:element>
              <xs:element name="modificationFlag" type="xs:string">
                <xs:annotation>
                  <xs:documentation>Modification flag (A, M, D, U) of record.</xs:documentation>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="sortingElement">
        <xs:annotation>
          <xs:documentation>Describes Sorting details</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="sortField" type="tns:sortField"/>
          <xs:element name="sortDirection" type="common:sortDirection"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="sortField">
        <xs:annotation>
          <xs:documentation>Enumeration for sortField.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:enumeration value="BANK">
            <xs:annotation>
              <xs:documentation>Sorting based on Bank of the record</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="BIC">
            <xs:annotation>
              <xs:documentation>Sorting based on BIC of the record</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="COUNTRY">
            <xs:annotation>
              <xs:documentation>Sorting based on country of the record</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
          <xs:enumeration value="NATIONAL_ID">
            <xs:annotation>
              <xs:documentation>Sorting based on National ID of the record</xs:documentation>
            </xs:annotation>
          </xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:complexType name="ibanStructureDetails">
        <xs:annotation>
          <xs:documentation>Details pertaining to the IBAN structure</xs:documentation>
        </xs:annotation>
        <xs:sequence>
          <xs:element name="countryCode" type="common:countryISOCode"/>
          <xs:element name="countryCodePosition" type="common:min1max2digit"/>
          <xs:element name="countryCodeLength" type="common:max1digit"/>
          <xs:element name="checkDigitPosition" type="common:min1max2digit"/>
          <xs:element name="checkDigitLength" type="common:min1max2digit"/>
          <xs:element name="bankIdPosition" type="common:min1max2digit"/>
          <xs:element name="bankIdLength" type="common:min1max2digit"/>
          <xs:element minOccurs="0" name="branchIdPosition" type="common:min1max2digit"/>
          <xs:element name="branchIdLength" type="common:min1max2digit"/>
          <xs:element name="nationalIdLength" type="common:min1max2digit"/>
          <xs:element name="accNumberPosition" type="common:min1max2digit"/>
          <xs:element name="accNumberLength" type="common:min1max2digit"/>
          <xs:element name="ibanTotalLength" type="common:min1max2digit"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="ibanOnlyGetResponse">
    <wsdl:part element="tns:ibanOnlyGetResponse" name="ibanOnlyGetResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="ibanOnlyGetRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:ibanOnlyGetRequest" name="ibanOnlyGetRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getIbanStructureResponse">
    <wsdl:part element="tns:getIbanStructureResponse" name="getIbanStructureResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bankDirectorySearchV2Response">
    <wsdl:part element="tns:bankDirectorySearchV2Response" name="bankDirectorySearchV2Response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bicAndNationalIdValidateV2Request">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:bicAndNationalIdValidateV2Request" name="bicAndNationalIdValidateV2Request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchIbanDetailsResponse">
    <wsdl:part element="tns:searchIbanDetailsResponse" name="searchIbanDetailsResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bicAndNationalIdValidateV2Response">
    <wsdl:part element="tns:bicAndNationalIdValidateV2Response" name="bicAndNationalIdValidateV2Response"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchIbanDetailsRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:searchIbanDetailsRequest" name="searchIbanDetailsRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bankDirectorySearchV2Request">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:bankDirectorySearchV2Request" name="bankDirectorySearchV2Request"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bankBicDirectoryDetailsSearchResponse">
    <wsdl:part element="tns:bankBicDirectoryDetailsSearchResponse" name="bankBicDirectoryDetailsSearchResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getIbanStructureRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:getIbanStructureRequest" name="getIbanStructureRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="bankBicDirectoryDetailsSearchRequest">
    <wsdl:part element="sch1:AutHeader" name="SoapHeader"></wsdl:part>
    <wsdl:part element="tns:bankBicDirectoryDetailsSearchRequest" name="bankBicDirectoryDetailsSearchRequest"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="PBDSBankDirectory_V2_5PortType">
    <wsdl:operation name="ibanOnlyGet">
      <wsdl:input message="tns:ibanOnlyGetRequest" name="ibanOnlyGetRequest"></wsdl:input>
      <wsdl:output message="tns:ibanOnlyGetResponse" name="ibanOnlyGetResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getIbanStructure">
      <wsdl:input message="tns:getIbanStructureRequest" name="getIbanStructureRequest"></wsdl:input>
      <wsdl:output message="tns:getIbanStructureResponse" name="getIbanStructureResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="bankDirectorySearchV2">
      <wsdl:input message="tns:bankDirectorySearchV2Request" name="bankDirectorySearchV2Request"></wsdl:input>
      <wsdl:output message="tns:bankDirectorySearchV2Response" name="bankDirectorySearchV2Response"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="bicAndNationalIdValidateV2">
      <wsdl:input message="tns:bicAndNationalIdValidateV2Request" name="bicAndNationalIdValidateV2Request"></wsdl:input>
      <wsdl:output message="tns:bicAndNationalIdValidateV2Response" name="bicAndNationalIdValidateV2Response"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchIbanDetails">
      <wsdl:input message="tns:searchIbanDetailsRequest" name="searchIbanDetailsRequest"></wsdl:input>
      <wsdl:output message="tns:searchIbanDetailsResponse" name="searchIbanDetailsResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="bankBicDirectoryDetailsSearch">
      <wsdl:input message="tns:bankBicDirectoryDetailsSearchRequest" name="bankBicDirectoryDetailsSearchRequest"></wsdl:input>
      <wsdl:output message="tns:bankBicDirectoryDetailsSearchResponse" name="bankBicDirectoryDetailsSearchResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PBDSBankDirectory_V2_5PortTypeSoap11" type="tns:PBDSBankDirectory_V2_5PortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="ibanOnlyGet">
      <soap:operation soapAction=""/>
      <wsdl:input name="ibanOnlyGetRequest">
        <soap:header message="tns:ibanOnlyGetRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="ibanOnlyGetRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="ibanOnlyGetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getIbanStructure">
      <soap:operation soapAction=""/>
      <wsdl:input name="getIbanStructureRequest">
        <soap:header message="tns:getIbanStructureRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="getIbanStructureRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getIbanStructureResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="bankDirectorySearchV2">
      <soap:operation soapAction=""/>
      <wsdl:input name="bankDirectorySearchV2Request">
        <soap:header message="tns:bankDirectorySearchV2Request" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="bankDirectorySearchV2Request" use="literal"/>
      </wsdl:input>
      <wsdl:output name="bankDirectorySearchV2Response">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="bicAndNationalIdValidateV2">
      <soap:operation soapAction=""/>
      <wsdl:input name="bicAndNationalIdValidateV2Request">
        <soap:header message="tns:bicAndNationalIdValidateV2Request" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="bicAndNationalIdValidateV2Request" use="literal"/>
      </wsdl:input>
      <wsdl:output name="bicAndNationalIdValidateV2Response">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchIbanDetails">
      <soap:operation soapAction=""/>
      <wsdl:input name="searchIbanDetailsRequest">
        <soap:header message="tns:searchIbanDetailsRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="searchIbanDetailsRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchIbanDetailsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="bankBicDirectoryDetailsSearch">
      <soap:operation soapAction=""/>
      <wsdl:input name="bankBicDirectoryDetailsSearchRequest">
        <soap:header message="tns:bankBicDirectoryDetailsSearchRequest" part="SoapHeader" use="literal"></soap:header>
        <soap:body parts="bankBicDirectoryDetailsSearchRequest" use="literal"/>
      </wsdl:input>
      <wsdl:output name="bankBicDirectoryDetailsSearchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PBDSBankDirectory_V2_5">
    <wsdl:port binding="tns:PBDSBankDirectory_V2_5PortTypeSoap11" name="PBDSBankDirectory_V2_5PortTypeSoap11">
      <soap:address location="http://10.246.89.245:10450/pbdsrv/services/PBDSBankDirectory_V2_5Service"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content>
      <con:type>http://schemas.xmlsoap.org/wsdl/</con:type>
    </con:part>
  </con:definitionCache>
  <con:endpoints>
    <con:endpoint>http://10.246.89.245:10450/pbdsrv/services/PBDSBankDirectory_V2_5Service</con:endpoint>
  </con:endpoints>
</con:interface>
