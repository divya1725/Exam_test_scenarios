<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="b5dc1991-ffb0-4590-b41b-19a9ba476640" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Pain001_Camt055_MESSAGE Log validation RFDD" searchProperties="true" timeout="0" disabled="true" xmlns:con="http://eviware.com/soapui/config">
  <con:description>TC will create PAIN002 Cancel message at</con:description>
  <con:settings>
    <con:setting id="b5dc1991-ffb0-4590-b41b-19a9ba476640fileName">Pain001_Camt055_MESSAGE-Log-validation-RFDD</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep type="jdbc" name="DB Account" id="a7ee8103-419a-4bb9-bc9c-6053126c7513">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>Database</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>jdbc:oracle:thin:pwhdata/pwh@(DESCRIPTION=(ADDRESS_LIST=(LOAD_BALANCE=ON)(FAILOVER=ON)(ADDRESS=(PROTOCOL=TCP)(HOST=dlt-exa853-scan.unix.cosng.net)(PORT=1530)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=pwh_g_s1_19c)))</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>select CUSTOMERID,ACCOUNTNUMBER  from V_authorisation 
where CUSTBANKID='${Properties#bankId}' 
and length(customerID)='11' 
and ROWNUM=1</con:query>
      <con:storedProcedure>false</con:storedProcedure>
      <con:assertion type="MessageContentAssertion" id="8e97c887-32b1-4c89-8f5a-4e8a7d8c4bc2" name="Message Content Assertion">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/@rowNumber</con:xpath>
            <con:element>@rowNumber</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>1</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage><![CDATA[<Results>
   <ResultSet fetchSize="10">
      <Row rowNumber="1">
         <CUSTOMERID>01010077571</CUSTOMERID>
         <ACCOUNTNUMBER>42125748338</ACCOUNTNUMBER>
      </Row>
   </ResultSet>
</Results>]]></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="SetProperties" id="accdfdff-2296-4d65-82f1-c1bae66ac261">
    <con:settings/>
    <con:config>
      <script>import java.text.SimpleDateFormat

def customerID = context.expand( '${DB Account#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/CUSTOMERID[1]}' )
def debtorAccountNumber = context.expand( '${DB Account#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/ACCOUNTNUMBER[1]}' )

testRunner.testCase.getTestStepByName("Properties").setPropertyValue("customerid",customerID)
testRunner.testCase.getTestStepByName("Properties").setPropertyValue("accountNumber",debtorAccountNumber)

Date date = new Date();
SimpleDateFormat fn = new SimpleDateFormat("ddMyyhhmmss");
def datetime = fn.format(date)
log.info datetime

def EndtoEndID = "P002_"+datetime;
log.info EndtoEndID
testRunner.testCase.getTestStepByName("Properties").setPropertyValue("msgID",EndtoEndID );</script>
    </con:config>
  </con:testStep>
  <con:testStep type="properties" name="Properties" id="6e2321de-d05f-49b7-ac81-7315e6a65145">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties>
        <con:property>
          <con:name>customerid</con:name>
          <con:value>01010077571</con:value>
        </con:property>
        <con:property>
          <con:name>bankId</con:name>
          <con:value>4201</con:value>
        </con:property>
        <con:property>
          <con:name>accountNumber</con:name>
          <con:value>42125748338</con:value>
        </con:property>
        <con:property>
          <con:name>MessageToSendFormat</con:name>
          <con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?> <Wrapper xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:pin.payment.edb.com:authpain001wrapper:v1_0" > <auth> <![CDATA[<?xml version="1.0" encoding="UTF-8"?><AgreementAuthorizationRequest><authRequest><agreementData><agreementId>600685</agreementId><bankId>BANKID</bankId><userId>CUSTOMERID</userId><userFirstName>Ext.Telepay</userFirstName><userLastName>EvryFileArchive</userLastName><userIdType>EXTU</userIdType><productID>0</productID><organizationId>921095899</organizationId><preapproved>true</preapproved><rejectionLevel>TRANSACTION</rejectionLevel><origin>PAYMUL</origin></agreementData><agreementAccount><accountNumber>ACCOUNTID</accountNumber><swiftAdress>SPTRNO22XXX</swiftAdress><currencyCode>NOK</currencyCode><accountType>CoreAccount</accountType><access>CREDIT_AND_DEBIT</access><bookingLevel>D</bookingLevel><approvalLimit>10000000</approvalLimit><registerLimit>10000000</registerLimit><numberOfVerifiers>0</numberOfVerifiers><numberOfApprovers>0</numberOfApprovers></agreementAccount><metaInformation><receivedTimestamp>DATET00:05:37</receivedTimestamp></metaInformation></authRequest></AgreementAuthorizationRequest>]]]]>><![CDATA[ </auth> <content> <![CDATA[<?xml version="1.0" encoding="UTF-8"?> <Document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:iso:std:iso:20022:tech:xsd:pain.001.001.04"> <CstmrCdtTrfInitn> <GrpHdr> <MsgId>TIMESTAMP</MsgId> <CreDtTm>DATET00:06:27.355+02:00</CreDtTm> <NbOfTxs>1</NbOfTxs> <CtrlSum>10.00</CtrlSum> <InitgPty> <Nm>Vin fjerner co.</Nm> <Id> <OrgId> <AnyBIC>SPTRNO22XXX</AnyBIC> <Othr> <Id>600685</Id> <SchmeNm> <Cd>BANK</Cd> </SchmeNm> </Othr> </OrgId> </Id> </InitgPty> </GrpHdr> <PmtInf> <PmtInfId>TIMESTAMP.P1</PmtInfId> <PmtMtd>TRF</PmtMtd> <NbOfTxs>1</NbOfTxs> <CtrlSum>10.00</CtrlSum> <PmtTpInf> <InstrPrty>NORM</InstrPrty> </PmtTpInf> <ReqdExctnDt>DATE</ReqdExctnDt> <Dbtr> <Id> <OrgId> <Othr> <Id>921095899</Id> </Othr> </OrgId> </Id> </Dbtr> <DbtrAcct> <Id> <Othr> <Id>ACCOUNTID</Id> <SchmeNm> <Cd>BBAN</Cd> </SchmeNm> </Othr> </Id> </DbtrAcct> <DbtrAgt> <FinInstnId> <BICFI>SPTRNO22XXX</BICFI> </FinInstnId> </DbtrAgt> <ChrgBr>SHAR</ChrgBr> <CdtTrfTxInf> <PmtId> <InstrId>TIMESTAMP.T4</InstrId> <EndToEndId>TIMESTAMP.T4</EndToEndId> </PmtId> <PmtTpInf> <InstrPrty>NORM</InstrPrty> <CtgyPurp> <Cd>NULL</Cd> </CtgyPurp> </PmtTpInf> <Amt> <InstdAmt Ccy="GBP">10.00</InstdAmt> </Amt> <CdtrAgt> <FinInstnId> <BICFI>CLCTGB21XXX</BICFI> <Nm>SwedbankAB</Nm> <PstlAdr> <AdrTp>ADDR</AdrTp> <PstCd>6781</PstCd><Ctry>GB</Ctry> <AdrLine>Brunkerbergstorg 8</AdrLine> <AdrLine>10534 Stockholm</AdrLine> </PstlAdr> </FinInstnId> </CdtrAgt> <Cdtr> <Nm>Nerikes Telecom</Nm> <PstlAdr> <AdrTp>ADDR</AdrTp><PstCd>6781</PstCd> <TwnNm>London</TwnNm> <Ctry>DE</Ctry> <AdrLine>Kamrerarvagen 18</AdrLine> <AdrLine>12930 Hagersten</AdrLine> </PstlAdr> <CtryOfRes>NO</CtryOfRes> </Cdtr> <CdtrAcct> <Id> <IBAN>GB44LOYD77911238108568</IBAN> </Id> </CdtrAcct> </CdtTrfTxInf> </PmtInf> </CstmrCdtTrfInitn> </Document>]]]]>><![CDATA[ </content> </Wrapper>]]></con:value>
        </con:property>
        <con:property>
          <con:name>dueDate</con:name>
          <con:value>${= java.time.LocalDateTime.now().format(java.time.format.DateTimeFormatter.ofPattern('yyyy-MM-dd'))}</con:value>
        </con:property>
        <con:property>
          <con:name>msgID</con:name>
          <con:value>P002_23720113444</con:value>
        </con:property>
        <con:property>
          <con:name>messagetoSend</con:name>
          <con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?> <Wrapper xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:pin.payment.edb.com:authpain001wrapper:v1_0" > <auth> <![CDATA[<?xml version="1.0" encoding="UTF-8"?><AgreementAuthorizationRequest><authRequest><agreementData><agreementId>600685</agreementId><bankId>4201</bankId><userId>01010077571</userId><userFirstName>Ext.Telepay</userFirstName><userLastName>EvryFileArchive</userLastName><userIdType>EXTU</userIdType><productID>0</productID><organizationId>921095899</organizationId><preapproved>true</preapproved><rejectionLevel>TRANSACTION</rejectionLevel><origin>PAYMUL</origin></agreementData><agreementAccount><accountNumber>42125748338</accountNumber><swiftAdress>SPTRNO22XXX</swiftAdress><currencyCode>NOK</currencyCode><accountType>CoreAccount</accountType><access>CREDIT_AND_DEBIT</access><bookingLevel>D</bookingLevel><approvalLimit>10000000</approvalLimit><registerLimit>10000000</registerLimit><numberOfVerifiers>0</numberOfVerifiers><numberOfApprovers>0</numberOfApprovers></agreementAccount><metaInformation><receivedTimestamp>2016-05-04T00:05:37</receivedTimestamp></metaInformation></authRequest></AgreementAuthorizationRequest>]]]]>><![CDATA[ </auth> <content> <![CDATA[<?xml version="1.0" encoding="UTF-8"?> <Document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:iso:std:iso:20022:tech:xsd:pain.001.001.04"> <CstmrCdtTrfInitn> <GrpHdr> <MsgId>P002_23720113444</MsgId> <CreDtTm>2016-05-04T00:06:27.355+02:00</CreDtTm> <NbOfTxs>1</NbOfTxs> <CtrlSum>10.00</CtrlSum> <InitgPty> <Nm>Vin fjerner co.</Nm> <Id> <OrgId> <AnyBIC>SPTRNO22XXX</AnyBIC> <Othr> <Id>600685</Id> <SchmeNm> <Cd>BANK</Cd> </SchmeNm> </Othr> </OrgId> </Id> </InitgPty> </GrpHdr> <PmtInf> <PmtInfId>P002_23720113444.P1</PmtInfId> <PmtMtd>TRF</PmtMtd> <NbOfTxs>1</NbOfTxs> <CtrlSum>10.00</CtrlSum> <PmtTpInf> <InstrPrty>NORM</InstrPrty> </PmtTpInf> <ReqdExctnDt>2016-05-01</ReqdExctnDt> <Dbtr> <Id> <OrgId> <Othr> <Id>921095899</Id> </Othr> </OrgId> </Id> </Dbtr> <DbtrAcct> <Id> <Othr> <Id>42125748338</Id> <SchmeNm> <Cd>BBAN</Cd> </SchmeNm> </Othr> </Id> </DbtrAcct> <DbtrAgt> <FinInstnId> <BICFI>SPTRNO22XXX</BICFI> </FinInstnId> </DbtrAgt> <ChrgBr>SHAR</ChrgBr> <CdtTrfTxInf> <PmtId> <InstrId>P002_23720113444.T4</InstrId> <EndToEndId>P002_23720113444.T4</EndToEndId> </PmtId> <PmtTpInf> <InstrPrty>NORM</InstrPrty> <CtgyPurp> <Cd>NULL</Cd> </CtgyPurp> </PmtTpInf> <Amt> <InstdAmt Ccy="GBP">10.00</InstdAmt> </Amt> <CdtrAgt> <FinInstnId> <BICFI>CLCTGB21XXX</BICFI> <Nm>SwedbankAB</Nm> <PstlAdr> <AdrTp>ADDR</AdrTp> <Ctry>GB</Ctry> <AdrLine>Brunkerbergstorg 8</AdrLine> <AdrLine>10534 Stockholm</AdrLine> </PstlAdr> </FinInstnId> </CdtrAgt> <Cdtr> <Nm>Nerikes Telecom</Nm> <PstlAdr> <AdrTp>ADDR</AdrTp> <TwnNm>London</TwnNm> <Ctry>DE</Ctry> <AdrLine>Kamrerarvagen 18</AdrLine> <AdrLine>12930 Hagersten</AdrLine> </PstlAdr> <CtryOfRes>NO</CtryOfRes> </Cdtr> <CdtrAcct> <Id> <IBAN>GB44LOYD77911238108568</IBAN> </Id> </CdtrAcct> </CdtTrfTxInf> </PmtInf> </CstmrCdtTrfInitn> </Document>]]]]>><![CDATA[ </content> </Wrapper>]]></con:value>
        </con:property>
        <con:property>
          <con:name>currencyCode</con:name>
          <con:value>NOK</con:value>
        </con:property>
        <con:property>
          <con:name>messageToSendCamt055General</con:name>
          <con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><Wrapper xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:pin.payment.edb.com:authpain001wrapper:v1_0"><auth><![CDATA[<?xml version="1.0" encoding="UTF-8"?><AgreementAuthorizationRequest><authRequest><agreementData><agreementId>600685</agreementId><bankId>BANKID</bankId><userId>CUSTOMERID</userId><userFirstName>Ext.Telepay</userFirstName><userLastName>EvryFileArchive</userLastName><userIdType>EXTU</userIdType><productID>0</productID><organizationId>921095899</organizationId><preapproved>true</preapproved><rejectionLevel>TRANSACTION</rejectionLevel><origin>PAYMUL</origin><allowPartialCancellation>false</allowPartialCancellation><allowCancellationPriorToPayment>false</allowCancellationPriorToPayment></agreementData><agreementAccount><accountNumber>ACCOUNTID</accountNumber><swiftAdress>SPTRNO22XXX</swiftAdress><currencyCode>NOK</currencyCode><accountType>CoreAccount</accountType><access>CREDIT_AND_DEBIT</access><bookingLevel>T</bookingLevel><approvalLimit>10000000</approvalLimit><registerLimit>10000000</registerLimit><numberOfVerifiers>0</numberOfVerifiers><numberOfApprovers>0</numberOfApprovers></agreementAccount><metaInformation><receivedTimestamp>DATET00:05:37</receivedTimestamp></metaInformation></authRequest></AgreementAuthorizationRequest>]]]]>><![CDATA[</auth><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?><Document xmlns="urn:iso:std:iso:20022:tech:xsd:camt.055.001.01"><CstmrPmtCxlReq><Assgnmt><Id>ASSIGNMENTID</Id><Assgnr><Pty><Nm>sanath685</Nm><PstlAdr><StrtNm>TimesSquare</StrtNm><BldgNb>7</BldgNb><PstCd>NY</PstCd><TwnNm>NewYork</TwnNm><Ctry>US</Ctry></PstlAdr><Id><PrvtId><Othr><Id>san600685</Id></Othr></PrvtId></Id></Pty></Assgnr><Assgne><Agt><FinInstnId><BIC>BBBBUS33</BIC></FinInstnId></Agt></Assgne><CreDtTm>DATET16:05:30</CreDtTm></Assgnmt><Undrlyg><OrgnlGrpInfAndCxl><OrgnlMsgId>OMSGID</OrgnlMsgId><OrgnlMsgNmId>pain.001.001.04</OrgnlMsgNmId><OrgnlCreDtTm>DATET14:07:00</OrgnlCreDtTm><GrpCxl>true</GrpCxl><CxlRsnInf><Rsn><Cd>DUPL</Cd></Rsn></CxlRsnInf></OrgnlGrpInfAndCxl></Undrlyg></CstmrPmtCxlReq></Document>]]]]>><![CDATA[</content></Wrapper>]]></con:value>
        </con:property>
        <con:property>
          <con:name>assignmentID</con:name>
          <con:value>Camt055_23720113502</con:value>
        </con:property>
        <con:property>
          <con:name>messagetoSendCamt055</con:name>
          <con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><Wrapper xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:pin.payment.edb.com:authpain001wrapper:v1_0"><auth><![CDATA[<?xml version="1.0" encoding="UTF-8"?><AgreementAuthorizationRequest><authRequest><agreementData><agreementId>600685</agreementId><bankId>4201</bankId><userId>01010077571</userId><userFirstName>Ext.Telepay</userFirstName><userLastName>EvryFileArchive</userLastName><userIdType>EXTU</userIdType><productID>0</productID><organizationId>921095899</organizationId><preapproved>true</preapproved><rejectionLevel>TRANSACTION</rejectionLevel><origin>PAYMUL</origin><allowPartialCancellation>false</allowPartialCancellation><allowCancellationPriorToPayment>false</allowCancellationPriorToPayment></agreementData><agreementAccount><accountNumber>42125748338</accountNumber><swiftAdress>SPTRNO22XXX</swiftAdress><currencyCode>NOK</currencyCode><accountType>CoreAccount</accountType><access>CREDIT_AND_DEBIT</access><bookingLevel>T</bookingLevel><approvalLimit>10000000</approvalLimit><registerLimit>10000000</registerLimit><numberOfVerifiers>0</numberOfVerifiers><numberOfApprovers>0</numberOfApprovers></agreementAccount><metaInformation><receivedTimestamp>2016-05-04T00:05:37</receivedTimestamp></metaInformation></authRequest></AgreementAuthorizationRequest>]]]]>><![CDATA[</auth><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?><Document xmlns="urn:iso:std:iso:20022:tech:xsd:camt.055.001.01"><CstmrPmtCxlReq><Assgnmt><Id>Camt055_23720113502</Id><Assgnr><Pty><Nm>sanath685</Nm><PstlAdr><StrtNm>TimesSquare</StrtNm><BldgNb>7</BldgNb><PstCd>NY</PstCd><TwnNm>NewYork</TwnNm><Ctry>US</Ctry></PstlAdr><Id><PrvtId><Othr><Id>san600685</Id></Othr></PrvtId></Id></Pty></Assgnr><Assgne><Agt><FinInstnId><BIC>BBBBUS33</BIC></FinInstnId></Agt></Assgne><CreDtTm>2020-07-23T16:05:30</CreDtTm></Assgnmt><Undrlyg><OrgnlGrpInfAndCxl><OrgnlMsgId>P002_23720113444</OrgnlMsgId><OrgnlMsgNmId>pain.001.001.04</OrgnlMsgNmId><OrgnlCreDtTm>2020-07-23T14:07:00</OrgnlCreDtTm><GrpCxl>true</GrpCxl><CxlRsnInf><Rsn><Cd>DUPL</Cd></Rsn></CxlRsnInf></OrgnlGrpInfAndCxl></Undrlyg></CstmrPmtCxlReq></Document>]]]]>><![CDATA[</content></Wrapper>]]></con:value>
        </con:property>
        <con:property>
          <con:name>pain002Response</con:name>
          <con:value><![CDATA[<Document xmlns="urn:iso:std:iso:20022:tech:xsd:pain.002.001.04">
    <CstmrPmtStsRpt>
        <GrpHdr>
            <MsgId>600685.6496062497512742533.1686</MsgId>
            <CreDtTm>2020-07-14T08:23:55.576+02:00</CreDtTm>
            <InitgPty>
                <Nm>sanath685</Nm>
                <PstlAdr>
                    <StrtNm>TimesSquare</StrtNm>
                    <BldgNb>7</BldgNb>
                    <PstCd>NY</PstCd>
                    <TwnNm>NewYork</TwnNm>
                    <Ctry>US</Ctry>
                </PstlAdr>
                <Id>
                    <OrgId>
                        <AnyBIC>SPTRNO22XXX</AnyBIC>
                    </OrgId>
                    <PrvtId>
                        <Othr>
                            <Id>san600685</Id>
                        </Othr>
                    </PrvtId>
                </Id>
            </InitgPty>
        </GrpHdr>
        <OrgnlGrpInfAndSts>
            <OrgnlMsgId>Camt055_14720115324</OrgnlMsgId>
            <OrgnlMsgNmId>camt.055.001.01</OrgnlMsgNmId>
            <GrpSts>ACCP</GrpSts>
        </OrgnlGrpInfAndSts>
    </CstmrPmtStsRpt>
</Document>]]></con:value>
        </con:property>
        <con:property>
          <con:name>expectedStatusReason</con:name>
          <con:value>ACCP</con:value>
        </con:property>
        <con:property>
          <con:name>actualStatusReason</con:name>
          <con:value>ACCP</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="PreparePAIN001File" id="589ab1e9-ab34-421d-827a-792589c24cc7">
    <con:settings/>
    <con:config>
      <script>import com.eviware.soapui.support.GroovyUtils.*
import java.io.File 
import java.io.Reader

//MsgID
def MsgID = testRunner.testCase.getTestStepByName("Properties").getPropertyValue('msgID');
log.info MsgID;

//Initial Message to send
def messageToSend = context.expand( '${Properties#MessageToSendFormat}' )
log.info(messageToSend)

//Parmeters needed in message
def Account = context.expand( '${Properties#accountNumber}' )
def customerid = context.expand( '${Properties#customerid}' )
def dueDate = context.expand( '${Properties#dueDate}' )
def BANKID = context.expand( '${Properties#bankId}' )


//Replace parmaeters in message by respective values
messageToSend = messageToSend.replaceAll("TIMESTAMP",MsgID) ;
messageToSend = messageToSend.replaceAll("CUSTOMERID",customerid) ;
messageToSend = messageToSend.replaceAll("ACCOUNTID",Account) ;
messageToSend = messageToSend.replaceAll("DATE",dueDate) ;
messageToSend = messageToSend.replaceAll("BANKID",BANKID) ;
log.info messageToSend

//Set 'messagetoSend_currentTC  property value with updated message
def update = testRunner.testCase.getTestStepByName("Properties").setPropertyValue("messagetoSend",messageToSend);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="PushAndReceiveFilePayment" id="959cfcb5-080c-424b-8125-782cee18d007">
    <con:settings/>
    <con:config>
      <script>// File payment content property
import MQMessageUtils;

def filecontent = context.expand( '${Properties#messagetoSend#declare namespace ns1=\'urn:pin.payment.edb.com:authpain001wrapper:v1_0\'; //ns1:Wrapper[1]}' )
log.info(filecontent)

//def filecontent = context.expand( '${TestCase#messagetoSend}' )

// Set MQ properties
def mQHostName = context.expand( '${#Project#mqHostname}' )
def int mQPort = context.expand( '${#Project#mqPort}' ) as Integer
def mQQueuemanager = context.expand( '${#Project#mqManager}' )
def mQChannelAuth = context.expand( '${#Project#mqChannelAuth}' )
def mQMessageQueueSend = context.expand( '${#Project#sendQueuePAIN001}' )
def mQMessageQueueRecieve = context.expand( '${#Project#receiveQueuePAIN001}' )
def msgId = context.expand( '${Properties#msgId}' )


// Create utility class object, Create MQ connection
MQMessageUtils mqMessageUtils = new MQMessageUtils(mQQueuemanager,mQHostName,mQPort,mQChannelAuth,log);
// Send Message to MQ
log.info ("Message Sent :" + mqMessageUtils.sendMessage(mQMessageQueueSend,filecontent));
// Receive message from MQ
String receiveMessage = mqMessageUtils.receiveMessage(mQMessageQueueRecieve);
//Check results only if received message
log.info msgId
if (!(("No messsage").equals(receiveMessage))){
	def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 
	def response = groovyUtils.getXmlHolder(receiveMessage)
	log.info  response.getNodeValue("//*:OrgnlMsgId");
	ArrayList&lt;String> list= response.getNodeValues("//*:AddtlInf");
	log.info list;
// TO DO : Add more things here, Based on subsequest test steps, Take MessageIdentification sent and received message and give input to seaches.
}
// No message
else log.info "No message received"</script>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Delay" id="e9ff01d5-ca31-4c6e-b300-c449e4cea017">
    <con:settings/>
    <con:config>
      <delay>10000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="jdbc" name="TRANSACTIONS" id="96a67991-c165-4936-9e3c-40568e9910db">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>Database</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>jdbc:oracle:thin:pwhdata/pwh@(DESCRIPTION=(ADDRESS_LIST=(LOAD_BALANCE=ON)(FAILOVER=ON)(ADDRESS=(PROTOCOL=TCP)(HOST=dlt-exa853-scan.unix.cosng.net)(PORT=1530)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=pwh_g_s1_19c)))</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>SELECT 
  TRANSACTIONSID ,
  ENDTOENDID ,
  PAYMENTTYPE,
  PAYMENTSTATUS,
  ISPC ,
FK_PROCESSINGLINEID 
FROM 
  TRANSACTIONS 
WHERE 
  ENDTOENDID LIKE '%${Properties#msgID}%'</con:query>
      <con:storedProcedure>false</con:storedProcedure>
      <con:assertion type="MessageContentAssertion" id="8e97c887-32b1-4c89-8f5a-4e8a7d8c4bc2" name="Message Content Assertion">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/@rowNumber</con:xpath>
            <con:element>@rowNumber</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>1</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/TRANSACTIONSID[1]</con:xpath>
            <con:element>TRANSACTIONSID</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>170824</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/ENDTOENDID[1]</con:xpath>
            <con:element>ENDTOENDID</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>ETE_P002_08720034302</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/PAYMENTTYPE[1]</con:xpath>
            <con:element>PAYMENTTYPE</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>DOMS</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/PAYMENTSTATUS[1]</con:xpath>
            <con:element>PAYMENTSTATUS</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>RFDD</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/ISPC[1]</con:xpath>
            <con:element>ISPC</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>PAYCTDOMOUPSME</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/FK_PROCESSINGLINEID[1]</con:xpath>
            <con:element>FK_PROCESSINGLINEID</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>50</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage><![CDATA[<Results>
   <ResultSet fetchSize="10">
      <Row rowNumber="1">
         <TRANSACTIONSID>170824</TRANSACTIONSID>
         <ENDTOENDID>ETE_P002_08720034302</ENDTOENDID>
         <PAYMENTTYPE>DOMS</PAYMENTTYPE>
         <PAYMENTSTATUS>RFDD</PAYMENTSTATUS>
         <ISPC>PAYCTDOMOUPSME</ISPC>
         <FK_PROCESSINGLINEID>50</FK_PROCESSINGLINEID>
      </Row>
      <Row rowNumber="2">
         <TRANSACTIONSID>170825</TRANSACTIONSID>
         <ENDTOENDID>ETE_P002_08720034302</ENDTOENDID>
         <PAYMENTTYPE>DOMS</PAYMENTTYPE>
         <PAYMENTSTATUS>RFDD</PAYMENTSTATUS>
         <ISPC>PAYCTDOMOUPSME</ISPC>
         <FK_PROCESSINGLINEID>50</FK_PROCESSINGLINEID>
      </Row>
      <Row rowNumber="3">
         <TRANSACTIONSID>170826</TRANSACTIONSID>
         <ENDTOENDID>ETE_P002_08720034302</ENDTOENDID>
         <PAYMENTTYPE>DOMS</PAYMENTTYPE>
         <PAYMENTSTATUS>RFDD</PAYMENTSTATUS>
         <ISPC>PAYCTDOMOUPSME</ISPC>
         <FK_PROCESSINGLINEID>50</FK_PROCESSINGLINEID>
      </Row>
      <Row rowNumber="4">
         <TRANSACTIONSID>170827</TRANSACTIONSID>
         <ENDTOENDID>ETE_P002_08720034302</ENDTOENDID>
         <PAYMENTTYPE>DOMS</PAYMENTTYPE>
         <PAYMENTSTATUS>RFDD</PAYMENTSTATUS>
         <ISPC>PAYCTDOMOUPSME</ISPC>
         <FK_PROCESSINGLINEID>50</FK_PROCESSINGLINEID>
      </Row>
   </ResultSet>
</Results>]]></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="PrepareCamt055File" id="36f64e22-acf5-48d5-88ad-f02f14e01de7">
    <con:settings/>
    <con:config>
      <script>import com.eviware.soapui.support.GroovyUtils.*
import java.io.File 
import java.io.Reader
import java.text.SimpleDateFormat

Date date = new Date();
SimpleDateFormat fn = new SimpleDateFormat("ddMyyhhmmss");
def datetime = fn.format(date)
log.info datetime

def assignmentID = "Camt055_"+datetime;
log.info assignmentID
testRunner.testCase.getTestStepByName("Properties").setPropertyValue("assignmentID",assignmentID );

//MsgID
ASSIGNMENTID = testRunner.testCase.getTestStepByName("Properties").getPropertyValue('assignmentID');
log.info ASSIGNMENTID;

//Initial Message to send
def messageToSend = context.expand( '${Properties#messageToSendCamt055General}' )
log.info(messageToSend)

//Parmeters needed in message
def Account = context.expand( '${Properties#accountNumber}' )
def customerid = context.expand( '${Properties#customerid}' )
def dueDate = context.expand( '${Properties#dueDate}' )
def BANKID = context.expand( '${Properties#bankId}' )
def MsgID = context.expand( '${Properties#msgID}' )
def pmtID = context.expand( '${Properties#pmtID}' )




//Replace parmaeters in message by respective values
messageToSend = messageToSend.replaceAll("ASSIGNMENTID",ASSIGNMENTID) ;
messageToSend = messageToSend.replaceAll("OMSGID",MsgID) ;
messageToSend = messageToSend.replaceAll("CUSTOMERID",customerid) ;
messageToSend = messageToSend.replaceAll("ACCOUNTID",Account) ;
messageToSend = messageToSend.replaceAll("DATE",dueDate) ;
messageToSend = messageToSend.replaceAll("BANKID",BANKID) ;
messageToSend = messageToSend.replaceAll("OPMTID",pmtID) ;
log.info messageToSend

//Set 'messagetoSend_currentTC  property value with updated message
def update = testRunner.testCase.getTestStepByName("Properties").setPropertyValue("messagetoSendCamt055",messageToSend);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="PushAndReceive_Camt055" id="419ac76e-5a05-4aae-bdb4-c6babf0264be">
    <con:settings/>
    <con:config>
      <script>// File payment content property
import MQMessageUtils;


def filecontent = context.expand( '${Properties#messagetoSendCamt055#declare namespace ns1=\'urn:pin.payment.edb.com:authpain001wrapper:v1_0\'; //ns1:Wrapper[1]}' )
log.info(filecontent)



// Set MQ properties
def mQHostName = context.expand( '${#Project#mqHostname}' )
def int mQPort = context.expand( '${#Project#mqPort}' ) as Integer
def mQQueuemanager = context.expand( '${#Project#mqManager}' )
def mQChannelAuth = context.expand( '${#Project#mqChannelAuth}' )
def mQMessageQueueSend = context.expand( '${#Project#sendQueueCamt055}' )
def mQMessageQueueRecieve = context.expand( '${#Project#receiveQueueCamt055}' )
def mQMessageQueueReceiveCamt029 = context.expand( '${#Project#receiveQueueCamt029}' )
def assignmentID = context.expand( '${Properties#assignmentID}' )


// Create utility class object, Create MQ connection
MQMessageUtils mqMessageUtils = new MQMessageUtils(mQQueuemanager,mQHostName,mQPort,mQChannelAuth,log);
// Send Message to MQ
log.info ("Message Sent :" + mqMessageUtils.sendMessage(mQMessageQueueSend,filecontent));
// Receive message from MQ

String receiveMessage = mqMessageUtils.receiveMessage(mQMessageQueueRecieve);
//Check results only if received message

log.info "receiveMessage : " + receiveMessage



log.info "assignmentID: " + assignmentID
if (!(("No messsage").equals(receiveMessage))){
	def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 
	def response = groovyUtils.getXmlHolder(receiveMessage)
	log.info  response.getNodeValue("//*:OrgnlMsgId");
	ArrayList&lt;String> list= response.getNodeValues("//*:GrpSts");
	log.info list;
testRunner.testCase.getTestStepByName("Properties").setPropertyValue("actualStatusReason",list[0]);
// TO DO : Add more things here, Based on subsequest test steps, Take MessageIdentification sent and received message and give input to seaches.
}


// No message
else log.info "No message received"</script>
    </con:config>
  </con:testStep>
  <con:testStep type="jdbc" name="TRANSACTIONS_CANC" id="c514e99f-52b2-4254-8dd1-01f7eeaa7855">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>Database</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>jdbc:oracle:thin:pwhdata/pwh@(DESCRIPTION=(ADDRESS_LIST=(LOAD_BALANCE=ON)(FAILOVER=ON)(ADDRESS=(PROTOCOL=TCP)(HOST=dlt-exa853-scan.unix.cosng.net)(PORT=1530)))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=pwh_g_s1_19c)))</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>SELECT 
  TRANSACTIONSID ,
  ENDTOENDID ,
  PAYMENTTYPE,
  PAYMENTSTATUS,
  ISPC ,
FK_PROCESSINGLINEID 
FROM 
  TRANSACTIONS 
WHERE 
  ENDTOENDID LIKE '%${Properties#msgID}%'</con:query>
      <con:storedProcedure>false</con:storedProcedure>
      <con:assertion type="MessageContentAssertion" id="8e97c887-32b1-4c89-8f5a-4e8a7d8c4bc2" name="Message Content Assertion">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/@rowNumber</con:xpath>
            <con:element>@rowNumber</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>1</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/TRANSACTIONSID[1]</con:xpath>
            <con:element>TRANSACTIONSID</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>172315</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/ENDTOENDID[1]</con:xpath>
            <con:element>ENDTOENDID</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>P002_14720115305.T4</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/PAYMENTTYPE[1]</con:xpath>
            <con:element>PAYMENTTYPE</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>INPX</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/PAYMENTSTATUS[1]</con:xpath>
            <con:element>PAYMENTSTATUS</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>CANC</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/ISPC[1]</con:xpath>
            <con:element>ISPC</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>PAYCTINTOUPNPWX</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/Row[1]/FK_PROCESSINGLINEID[1]</con:xpath>
            <con:element>FK_PROCESSINGLINEID</con:element>
            <con:type xsi:nil="true"/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>8</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage><![CDATA[<Results>
   <ResultSet fetchSize="10">
      <Row rowNumber="1">
         <TRANSACTIONSID>172315</TRANSACTIONSID>
         <ENDTOENDID>P002_14720115305.T4</ENDTOENDID>
         <PAYMENTTYPE>INPX</PAYMENTTYPE>
         <PAYMENTSTATUS>CANC</PAYMENTSTATUS>
         <ISPC>PAYCTINTOUPNPWX</ISPC>
         <FK_PROCESSINGLINEID>8</FK_PROCESSINGLINEID>
      </Row>
   </ResultSet>
</Results>]]></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="ValidatePAIN002Logs" id="422d6079-e8bd-4f31-baa6-ec9ec2aa73bd">
    <con:settings/>
    <con:config>
      <script>import groovy.json.JsonSlurper

def strHost = context.expand( '${#Project#EOSHost}' )
def strUsername = context.expand( '${#Project#UserName}' )
def strPassword = context.expand( '${#Project#Password}' )
def  intPort = context.expand( '${#Project#Port}' )
def CPSLogStr
def env = testRunner.testCase.testSuite.project.getActiveEnvironmentName().toLowerCase()
def strFileDirectory = '/ebs/' + 'd4' + '/pin/logs/piPaymentProcessor'

def strLogRef = context.expand( '${Properties#LogRef}' )

if (!(ServerConnect.Connect(strHost ,strUsername, strPassword, Integer.parseInt(intPort)) == "PASS"))
               assert false," Failed to conenct to linux server!!"
else
log.info "Connected to the server successfully!!"

def grepString = context.expand( '${Properties#GrepString}' )
grepString = 'cd ' + strFileDirectory + ';' + grepString

def MSGID = context.expand( '${Properties#ASSIGNMENTID}' )
MSGID = "&lt;OrgnlMsgId>"+MSGID+"&lt;/OrgnlMsgId>"
log.info MSGID
log.info "grepString-->" + grepString
String command2="cd /ebs/d4/pin/logs/piPaymentProcessor;grep -B 27 -A 5 '"+MSGID+"'   mqpayload.log";
log.info command2

def pain002 = ServerConnect.execCommand(command2)
log.info pain002

def pain002Response = testRunner.testCase.getTestStepByName("Properties").setPropertyValue("pain002Response",pain002);
ServerConnect.closeConnection()

def actualStatusReason = context.expand( '${Properties#pain002Response#declare namespace ns1=\'urn:iso:std:iso:20022:tech:xsd:pain.002.001.04\'; //ns1:Document[1]/ns1:CstmrPmtStsRpt[1]/ns1:OrgnlGrpInfAndSts[1]/ns1:GrpSts[1]}' )
log.info actualStatusReason



def expectedStatusReason = context.expand( '${Properties#expectedStatusReason}' )
if (actualStatusReason.equals(expectedStatusReason))
{
	assert true;
}
else 
{
	assert false;
}</script>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>ConnectionString</con:name>
      <con:value>jdbc:oracle:thin:pendata/pen@//10.246.89.97:1530/pen_g_functional</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
  <con:breakPoints>
    <con:testStepId>7ac37089-fb5d-4637-a84a-61afd3ee482d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>da833b45-45b7-45bb-9a38-f483032eaf4d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a7ee8103-419a-4bb9-bc9c-6053126c7513</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:environmentSpec>
    <con:entry environmentId="657a20b2-d63b-4bf3-808e-2c92b686c769">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:testCase>
