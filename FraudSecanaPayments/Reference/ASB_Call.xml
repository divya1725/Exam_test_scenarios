<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="b9341c38-0374-4164-94c1-0c02e1487564" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="ASB_Call" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="b9341c38-0374-4164-94c1-0c02e1487564fileName">ASB_Call</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep type="restrequest" name="ASB_SCA_PERFORMED" id="829b2f1d-3c23-46c5-934e-d7eccb75fcae" disabled="true">
    <con:settings/>
    <con:config service="ASB_SECANA" resourcePath="/asbservices/api/v1/fraud/payment" methodName="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="ASB_SCA_PERFORMED" id="f73e532e-47d5-4449-aa76-a3af7d86fa27" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>https://eos-asb-srv-s1.global.finods.com</con:endpoint>
        <con:request>{
	"context": {
		"transactionId": "${=Math.abs(new Random().nextInt() % 6000000) + 1}",
		"evryAccountId": null,
		"bankOrgId": "9055",
		"transactionStatus": "RCVD",
		"transactionStatusMessage": null,
		"userId": "01010005783",
		"corporateId": "01010005783",
		"psuAgent": null,
		"psuSourceIp": "1.1.1.1",
		"psuGeoLocation": null,
		"systemSourceIp": "1.1.1.1",
		"sourceSystem": "PIN",
		"deviceId": null,
		"additionalDeviceInformation": null,
		"requestTimeStamp": "2020-07-20T11:59:05.262761+02:00",
		"lastSuccessfulSCA": {
			"scaApproach": null,
			"scaStatus": "SCA_PERFORMED",
			"authenticationType": null,
			"timestamp": "2018-11-30T13:37Z",
			"cause": null,
			"details": null,
			"requestId": null,
			"externalRef": null
		},
		"exemptionType": "RECURRING_TRANSACTION"
	},
	"participants": {
		"aspspId": null,
		"pispId": null,
		"piispId": null,
		"aispId": "9055",
		"mcc": null
	},
	"paymentProduct": "norwegian-domestic-credit-transfers",
	"basicPaymentInfo": {
		"ultimateDebtor": null,
		"ultimateCreditor": null,
		"requestedExecutionDate": "2020-07-20",
		"requestedExecutionTime": null,
		"remittanceInfoUnstructured": "FraudMessage\n",
		"remittanceInfoStructured": null,
		"purposeCode": null,
		"instructedAmount": {
			"currency": "NOK",
			"amount": "0.1"
		},
		"endToEndIdentification": null,
		"debtorAccount": {
			"iban": null,
			"bban": "90510762680",
			"pan": null,
			"maskedPan": null,
			"msisdn": null,
			"currency": null
		},
		"creditorName": "Albrekt",
		"creditorAgent": null,
		"creditorAddress": {
			"street": null,
			"buildingNumber": null,
			"city": "city",
			"postalCode": null,
			"country": "NO"
		},
		"creditorAccount": {
			"iban": null,
			"bban": "36250103381",
			"pan": null,
			"maskedPan": null,
			"msisdn": null,
			"currency": null
		},
		"paymentToSelf": false
	}
}</con:request>
        <con:originalUri>http://eos-asb-srv-s1.global.finods.com/asbservices/api/v1/fraud/payment</con:originalUri>
        <con:assertion type="GroovyScriptAssertion" id="b6926d60-0b37-4aff-9fc0-3e52adf5a980" name="Script Assertion">
          <con:configuration>
            <scriptText>import groovy.json.JsonOutput;
import java.util.Date;

Date date	= new Date();
endPoint	= messageExchange.getEndpoint()
testStep		= context.getCurrentStep().getLabel()
datetime	= date.format("dd-M-yyyy hh:mm:ss a zz")
timeStamp	= date.format("dd_M_yyyy_hh_mm_ss_a_zz")
testCase	= context.getCurrentStep().getTestCase().getLabel()
req_head	= messageExchange.getRequestHeaders()
request		= messageExchange.getRequestContent()
resp_head	= messageExchange.getResponseHeaders()
response	= messageExchange.getResponseContent()
path			= context.expand( '${projectDir}')+"\\results"

File dir		= new File(path);
if (!dir.exists())
{
	dir.mkdir();
}

def fout = new File(path+"\\"+testCase+" - "+testStep+"_"+timeStamp+".txt")

fout.write("&lt;!--=======================================================================================================================\r\n","UTF-8")
fout.append("Time Submitted	:	"+datetime+"\r\n")
fout.append("End Point Used	:	"+endPoint+"\r\n")
fout.append("Time Taken		:	"+messageExchange.timeTaken+"ms\r\n")
fout.append("Executed in		:	"+testCase+" - "+testStep+"_"+timeStamp)
fout.append("\n============================================================================================================================\r\n"+"REQUEST\r\n\r\n","UTF-8")
fout.append(req_head)
fout.append("-->\n\n")
fout.append(JsonOutput.prettyPrint(request))
fout.append("\r\n\r\n","UTF-8")
fout.append("&lt;!--=======================================================================================================================\r\n"+"RESPONSE\r\n\r\n","UTF-8")
fout.append(resp_head)
fout.append("-->\n\n")
fout.append(JsonOutput.prettyPrint(response))
fout.append("\r\n\r\n","UTF-8")
fout.append("&lt;!--========================================================================================================================-->\r","UTF-8")</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="MessageContentAssertion" id="1ed8a17d-44d1-4cb8-a24e-b0a9ea101b3b" name="Message Content Assertion">
          <con:configuration xsi:type="con:MessageContentAssertion">
            <con:elements>
              <con:xpath>declare namespace ns1='http://eos-asb-srv-s1.global.finods.com/asbservices/api/v1/fraud/payment';
//ns1:Response[1]/ns1:result[1]</con:xpath>
              <con:element>result</con:element>
              <con:type xsi:nil="true"/>
              <con:operator>=</con:operator>
              <con:enabled>false</con:enabled>
              <con:expectedValue>NOT_ACCEPTED</con:expectedValue>
              <con:hasValue>false</con:hasValue>
              <con:numberType>false</con:numberType>
            </con:elements>
            <con:elements>
              <con:xpath>declare namespace ns1='http://eos-asb-srv-s1.global.finods.com/asbservices/api/v1/fraud/payment';
//ns1:Response[1]/ns1:reasonCode[1]</con:xpath>
              <con:element>reasonCode</con:element>
              <con:type xsi:nil="true"/>
              <con:operator>=</con:operator>
              <con:enabled>true</con:enabled>
              <con:expectedValue>103</con:expectedValue>
              <con:hasValue>false</con:hasValue>
              <con:numberType>false</con:numberType>
            </con:elements>
            <con:elements>
              <con:xpath>declare namespace ns1='http://eos-asb-srv-s1.global.finods.com/asbservices/api/v1/fraud/payment';
//ns1:Response[1]/ns1:reasonText[1]</con:xpath>
              <con:element>reasonText</con:element>
              <con:type xsi:nil="true"/>
              <con:operator>=</con:operator>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Transaction marked as Fraud</con:expectedValue>
              <con:hasValue>false</con:hasValue>
              <con:numberType>false</con:numberType>
            </con:elements>
            <con:originalMessage><![CDATA[<Response xmlns="http://eos-asb-srv-s1.global.finods.com/asbservices/api/v1/fraud/payment">
   <result>NOT_ACCEPTED</result>
   <reasonCode>103</reasonCode>
   <reasonText>Transaction marked as Fraud</reasonText>
</Response>]]></con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="X-EVRY-ESB-SECURITYTOKEN" value="{&quot;tokenType&quot;: &quot;EvrySo&quot;, &quot;token&quot;: &quot;&quot;}"/>
          <con:entry key="X-EVRY-ESB-CLIENTNAME" value="PAYS"/>
          <con:entry key="X-EVRY-ESB-USERSESSION" value="{&quot;bankOrgID&quot;: &quot;9055&quot;,&quot;userID&quot;: &quot;00005925216&quot;,&quot;client&quot;: {&quot;ip&quot;:&quot;127.0.0.1&quot;} }"/>
          <con:entry key="X-EVRY-CLIENT-REQUESTID" value="8fa0e4c9-d831-40d0-baf6-a402033824df"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>X-EVRY-ESB-USERSESSION</con:entry>
          <con:entry>X-EVRY-CLIENT-REQUESTID</con:entry>
          <con:entry>X-EVRY-ESB-SECURITYTOKEN</con:entry>
          <con:entry>X-EVRY-ESB-CLIENTNAME</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="c57aea96-d15f-46e4-bfa2-4b8ef33c6b0e">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="ASB_SCA_NOT_PERFORMED" id="ebe05620-f4ce-45be-ac97-2dd29083b497" disabled="true">
    <con:settings/>
    <con:config service="ASB_SECANA" resourcePath="/asbservices/api/v1/fraud/payment" methodName="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="ASB_SCA_NOT_PERFORMED" id="f73e532e-47d5-4449-aa76-a3af7d86fa27" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>https://eos-asb-srv-s1.global.finods.com</con:endpoint>
        <con:request>{
	"context": {
		"transactionId": "${=Math.abs(new Random().nextInt() % 6000000) + 1}",
		"evryAccountId": null,
		"bankOrgId": "9055",
		"transactionStatus": "RCVD",
		"transactionStatusMessage": null,
		"userId": "01010005783",
		"corporateId": "01010005783",
		"psuAgent": null,
		"psuSourceIp": "1.1.1.1",
		"psuGeoLocation": null,
		"systemSourceIp": "1.1.1.1",
		"sourceSystem": "PIN",
		"deviceId": null,
		"additionalDeviceInformation": null,
		"requestTimeStamp": "2020-07-20T11:59:05.262761+02:00",
		"exemptionType": "RECURRING_TRANSACTION"
	},
	"participants": {
		"aspspId": null,
		"pispId": null,
		"piispId": null,
		"aispId": "9055",
		"mcc": null
	},
	"paymentProduct": "norwegian-domestic-credit-transfers",
	"basicPaymentInfo": {
		"ultimateDebtor": null,
		"ultimateCreditor": null,
		"requestedExecutionDate": "2020-07-20",
		"requestedExecutionTime": null,
		"remittanceInfoUnstructured": "FraudMessage\n",
		"remittanceInfoStructured": null,
		"purposeCode": null,
		"instructedAmount": {
			"currency": "NOK",
			"amount": "1000"
		},
		"endToEndIdentification": null,
		"debtorAccount": {
			"iban": null,
			"bban": "90510762680",
			"pan": null,
			"maskedPan": null,
			"msisdn": null,
			"currency": null
		},
		"creditorName": "Albrekt",
		"creditorAgent": null,
		"creditorAddress": {
			"street": null,
			"buildingNumber": null,
			"city": "city",
			"postalCode": null,
			"country": "NO"
		},
		"creditorAccount": {
			"iban": null,
			"bban": "36250103381",
			"pan": null,
			"maskedPan": null,
			"msisdn": null,
			"currency": null
		},
		"paymentToSelf": false
	}
}</con:request>
        <con:originalUri>http://eos-asb-srv-s1.global.finods.com/asbservices/api/v1/fraud/payment</con:originalUri>
        <con:assertion type="GroovyScriptAssertion" id="b6926d60-0b37-4aff-9fc0-3e52adf5a980" name="Script Assertion">
          <con:configuration>
            <scriptText>import groovy.json.JsonOutput;
import java.util.Date;

Date date	= new Date();
endPoint	= messageExchange.getEndpoint()
testStep		= context.getCurrentStep().getLabel()
datetime	= date.format("dd-M-yyyy hh:mm:ss a zz")
timeStamp	= date.format("dd_M_yyyy_hh_mm_ss_a_zz")
testCase	= context.getCurrentStep().getTestCase().getLabel()
req_head	= messageExchange.getRequestHeaders()
request		= messageExchange.getRequestContent()
resp_head	= messageExchange.getResponseHeaders()
response	= messageExchange.getResponseContent()
path			= context.expand( '${projectDir}')+"\\results"

File dir		= new File(path);
if (!dir.exists())
{
	dir.mkdir();
}

def fout = new File(path+"\\"+testCase+" - "+testStep+"_"+timeStamp+".txt")

fout.write("&lt;!--=======================================================================================================================\r\n","UTF-8")
fout.append("Time Submitted	:	"+datetime+"\r\n")
fout.append("End Point Used	:	"+endPoint+"\r\n")
fout.append("Time Taken		:	"+messageExchange.timeTaken+"ms\r\n")
fout.append("Executed in		:	"+testCase+" - "+testStep+"_"+timeStamp)
fout.append("\n============================================================================================================================\r\n"+"REQUEST\r\n\r\n","UTF-8")
fout.append(req_head)
fout.append("-->\n\n")
fout.append(JsonOutput.prettyPrint(request))
fout.append("\r\n\r\n","UTF-8")
fout.append("&lt;!--=======================================================================================================================\r\n"+"RESPONSE\r\n\r\n","UTF-8")
fout.append(resp_head)
fout.append("-->\n\n")
fout.append(JsonOutput.prettyPrint(response))
fout.append("\r\n\r\n","UTF-8")
fout.append("&lt;!--========================================================================================================================-->\r","UTF-8")</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="MessageContentAssertion" id="01547fbe-b153-4afd-9868-6831fe11bb21" name="Message Content Assertion">
          <con:configuration xsi:type="con:MessageContentAssertion">
            <con:elements>
              <con:xpath>declare namespace ns1='http://eos-asb-srv-s1.global.finods.com/asbservices/api/v1/fraud/payment';
//ns1:Response[1]/ns1:result[1]</con:xpath>
              <con:element>result</con:element>
              <con:type xsi:nil="true"/>
              <con:operator>=</con:operator>
              <con:enabled>false</con:enabled>
              <con:expectedValue>NOT_ACCEPTED</con:expectedValue>
              <con:hasValue>false</con:hasValue>
              <con:numberType>false</con:numberType>
            </con:elements>
            <con:elements>
              <con:xpath>declare namespace ns1='http://eos-asb-srv-s1.global.finods.com/asbservices/api/v1/fraud/payment';
//ns1:Response[1]/ns1:reasonCode[1]</con:xpath>
              <con:element>reasonCode</con:element>
              <con:type xsi:nil="true"/>
              <con:operator>=</con:operator>
              <con:enabled>true</con:enabled>
              <con:expectedValue>103</con:expectedValue>
              <con:hasValue>false</con:hasValue>
              <con:numberType>false</con:numberType>
            </con:elements>
            <con:elements>
              <con:xpath>declare namespace ns1='http://eos-asb-srv-s1.global.finods.com/asbservices/api/v1/fraud/payment';
//ns1:Response[1]/ns1:reasonText[1]</con:xpath>
              <con:element>reasonText</con:element>
              <con:type xsi:nil="true"/>
              <con:operator>=</con:operator>
              <con:enabled>false</con:enabled>
              <con:expectedValue>Transaction marked as Fraud</con:expectedValue>
              <con:hasValue>false</con:hasValue>
              <con:numberType>false</con:numberType>
            </con:elements>
            <con:originalMessage><![CDATA[<Response xmlns="http://eos-asb-srv-s1.global.finods.com/asbservices/api/v1/fraud/payment">
   <result>NOT_ACCEPTED</result>
   <reasonCode>103</reasonCode>
   <reasonText>Transaction marked as Fraud</reasonText>
</Response>]]></con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="X-EVRY-ESB-SECURITYTOKEN" value="{&quot;tokenType&quot;: &quot;EvrySo&quot;, &quot;token&quot;: &quot;&quot;}"/>
          <con:entry key="X-EVRY-ESB-CLIENTNAME" value="PAYS"/>
          <con:entry key="X-EVRY-ESB-USERSESSION" value="{&quot;bankOrgID&quot;: &quot;9055&quot;,&quot;userID&quot;: &quot;00005925216&quot;,&quot;client&quot;: {&quot;ip&quot;:&quot;127.0.0.1&quot;} }"/>
          <con:entry key="X-EVRY-CLIENT-REQUESTID" value="8fa0e4c9-d831-40d0-baf6-a402033824df"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>X-EVRY-ESB-USERSESSION</con:entry>
          <con:entry>X-EVRY-CLIENT-REQUESTID</con:entry>
          <con:entry>X-EVRY-ESB-SECURITYTOKEN</con:entry>
          <con:entry>X-EVRY-ESB-CLIENTNAME</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="c57aea96-d15f-46e4-bfa2-4b8ef33c6b0e">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:setupScript/>
  <con:properties/>
  <con:reportParameters/>
  <con:environmentSpec>
    <con:entry environmentId="c57aea96-d15f-46e4-bfa2-4b8ef33c6b0e">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
</con:testCase>