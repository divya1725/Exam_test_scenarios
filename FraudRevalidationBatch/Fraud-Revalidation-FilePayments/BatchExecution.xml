<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="bb660c12-0724-4ac3-b6d5-6b3505f60bcc" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="BatchExecution" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="bb660c12-0724-4ac3-b6d5-6b3505f60bccfileName">BatchExecution</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep type="properties" name="Properties" id="8c62ce75-5f68-40dc-bee1-3d00107cf392">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties>
        <con:property>
          <con:name>customerid</con:name>
          <con:value>${#TestSuite#customerid}</con:value>
        </con:property>
        <con:property>
          <con:name>bankId</con:name>
          <con:value>4201</con:value>
        </con:property>
        <con:property>
          <con:name>accountNumber</con:name>
          <con:value>${#TestSuite#accountNumberKundner}</con:value>
        </con:property>
        <con:property>
          <con:name>dueDate</con:name>
          <con:value>${=def now = new Date();now.format("yyyy-MM-dd")}</con:value>
        </con:property>
        <con:property>
          <con:name>msgID</con:name>
          <con:value>fraud_30720112004</con:value>
        </con:property>
        <con:property>
          <con:name>messageToSendGeneral</con:name>
          <con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><Wrapper xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:pin.payment.edb.com:authpain001wrapper:v1_0" ><auth><![CDATA[ <?xml version="1.0" encoding="UTF-8"?><AgreementAuthorizationRequest><authRequest><agreementData><agreementId>FRAUDCUSTOMER</agreementId><bankId>BANKID</bankId><userId>FRAUDCUSTOMER</userId><userFirstName>Firstname</userFirstName><userLastName>Lastname</userLastName><userIdType>USAG</userIdType><productID>11</productID><organizationId>FRAUDCUSTOMER</organizationId><preapproved>false</preapproved><rejectionLevel>TRANSACTION</rejectionLevel><origin>NDR</origin><allowPartialCancellation>false</allowPartialCancellation><allowCancellationPriorToPayment>false</allowCancellationPriorToPayment></agreementData><agreementAccount><accountNumber>ACCOUNTID</accountNumber><swiftAdress>SPTRNO22XXX</swiftAdress><currencyCode>NOK</currencyCode><accountType>CurrencyCoreFD</accountType><access>CREDIT_AND_DEBIT</access><bookingLevel>D</bookingLevel><approvalLimit>0</approvalLimit><registerLimit>0</registerLimit><numberOfVerifiers>0</numberOfVerifiers><numberOfApprovers>0</numberOfApprovers></agreementAccount><metaInformation><receivedTimestamp>2019-04-01T16:00:00</receivedTimestamp></metaInformation></authRequest></AgreementAuthorizationRequest> ]]]]>><![CDATA[</auth><content><![CDATA[ <?xml version="1.0" encoding="UTF-8"?><Document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:iso:std:iso:20022:tech:xsd:pain.001.001.04"><CstmrCdtTrfInitn><GrpHdr><MsgId>TIMESTAMP</MsgId><CreDtTm>2019-04-01T16:00:00.053+02:00</CreDtTm><NbOfTxs>4</NbOfTxs><CtrlSum>40.00</CtrlSum><InitgPty><Nm>Fraud testing AS</Nm><Id><OrgId><AnyBIC>SPTRNO22XXX</AnyBIC><Othr><Id>Fraud-testing</Id><SchmeNm><Cd>BANK</Cd></SchmeNm></Othr></OrgId></Id></InitgPty></GrpHdr><PmtInf><PmtInfId>TIMESTAMP.P1</PmtInfId><PmtMtd>TRF</PmtMtd><NbOfTxs>2</NbOfTxs><CtrlSum>20.00</CtrlSum><PmtTpInf><InstrPrty>NORM</InstrPrty></PmtTpInf><ReqdExctnDt>DATE</ReqdExctnDt><Dbtr><Nm>Test Fraud File AS</Nm><PstlAdr><AdrTp>ADDR</AdrTp><AdrLine>Postboks 1337</AdrLine><AdrLine>0107 OSLO</AdrLine></PstlAdr><Id><OrgId><Othr><Id>32000000115</Id><SchmeNm><Cd>CUST</Cd></SchmeNm></Othr></OrgId></Id></Dbtr><DbtrAcct><Id><Othr><Id>ACCOUNTID</Id><SchmeNm><Cd>BBAN</Cd></SchmeNm></Othr></Id></DbtrAcct><DbtrAgt><FinInstnId><BICFI>SPTRNO22XXX</BICFI></FinInstnId></DbtrAgt><ChrgBr>SHAR</ChrgBr><CdtTrfTxInf><PmtId><InstrId>TIMESTAMP.P1T1</InstrId><EndToEndId>TIMESTAMP.P1T1</EndToEndId></PmtId><PmtTpInf><InstrPrty>NORM</InstrPrty><CtgyPurp><Cd>SUPP</Cd></CtgyPurp></PmtTpInf><Amt><InstdAmt Ccy="NOK">10.00</InstdAmt></Amt><CdtrAgt><FinInstnId><BICFI>HAWODEH1XXX</BICFI><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry></PstlAdr></FinInstnId></CdtrAgt><Cdtr><Nm>Alt</Nm><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry><AdrLine>STREET</AdrLine><AdrLine>STREET2</AdrLine></PstlAdr><CtryOfRes>DE</CtryOfRes></Cdtr><CdtrAcct><Id><Othr><Id>DE89370400440532013000</Id></Othr></Id></CdtrAcct></CdtTrfTxInf><CdtTrfTxInf><PmtId><InstrId>TIMESTAMP.P1T2</InstrId><EndToEndId>TIMESTAMP.P1T2</EndToEndId></PmtId><PmtTpInf><InstrPrty>NORM</InstrPrty><CtgyPurp><Cd>SUPP</Cd></CtgyPurp></PmtTpInf><Amt><InstdAmt Ccy="EUR">10.00</InstdAmt></Amt><CdtrAgt><FinInstnId><BICFI>SPTRNO22XXX</BICFI><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>NO</Ctry></PstlAdr></FinInstnId></CdtrAgt><Cdtr><Nm>prefixnamesuffix</Nm><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>NO</Ctry><AdrLine>STREET</AdrLine><AdrLine>STREET2</AdrLine></PstlAdr><CtryOfRes>NO</CtryOfRes></Cdtr><CdtrAcct><Id><Othr><Id>42025301239</Id></Othr></Id></CdtrAcct></CdtTrfTxInf></PmtInf><PmtInf><PmtInfId>TIMESTAMP.P2</PmtInfId><PmtMtd>TRF</PmtMtd><NbOfTxs>2</NbOfTxs><CtrlSum>20.00</CtrlSum><PmtTpInf><InstrPrty>NORM</InstrPrty></PmtTpInf><ReqdExctnDt>DATE</ReqdExctnDt><Dbtr><Nm>Test Fraud CustId AS</Nm><PstlAdr><AdrTp>ADDR</AdrTp><AdrLine>Postboks 1337</AdrLine><AdrLine>0107 OSLO</AdrLine></PstlAdr><Id><OrgId><Othr><Id>32000000115</Id><SchmeNm><Cd>CUST</Cd></SchmeNm></Othr></OrgId></Id></Dbtr><DbtrAcct><Id><Othr><Id>ACCOUNTID</Id><SchmeNm><Cd>BBAN</Cd></SchmeNm></Othr></Id></DbtrAcct><DbtrAgt><FinInstnId><BICFI>SPTRNO22XXX</BICFI></FinInstnId></DbtrAgt><ChrgBr>SHAR</ChrgBr><CdtTrfTxInf><PmtId><InstrId>TIMESTAMP.P2T1</InstrId><EndToEndId>TIMESTAMP.P2T1</EndToEndId></PmtId><PmtTpInf><InstrPrty>NORM</InstrPrty><CtgyPurp><Cd>SUPP</Cd></CtgyPurp></PmtTpInf><Amt><InstdAmt Ccy="NOK">10.00</InstdAmt></Amt><CdtrAgt><FinInstnId><BICFI>HAWODEH1XXX</BICFI><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry></PstlAdr></FinInstnId></CdtrAgt><Cdtr><Nm>Anae</Nm><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry><AdrLine>STREET</AdrLine><AdrLine>STREET2</AdrLine></PstlAdr><CtryOfRes>DE</CtryOfRes></Cdtr><CdtrAcct><Id><Othr><Id>42025301239</Id></Othr></Id></CdtrAcct></CdtTrfTxInf><CdtTrfTxInf><PmtId><InstrId>TIMESTAMP.P2T2</InstrId><EndToEndId>TIMESTAMP.P2T2</EndToEndId></PmtId><PmtTpInf><InstrPrty>NORM</InstrPrty><CtgyPurp><Cd>SUPP</Cd></CtgyPurp></PmtTpInf><Amt><InstdAmt Ccy="NOK">10.00</InstdAmt></Amt><CdtrAgt><FinInstnId><BICFI>HAWODEH1XXX</BICFI><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry></PstlAdr></FinInstnId></CdtrAgt><Cdtr><Nm>nameexyz</Nm><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry><AdrLine>STREET</AdrLine><AdrLine>STREET</AdrLine></PstlAdr><CtryOfRes>DE</CtryOfRes></Cdtr><CdtrAcct><Id><Othr><Id>DE89370400440532013000</Id></Othr></Id></CdtrAcct><RmtInf><Ustrd>random Text</Ustrd></RmtInf></CdtTrfTxInf></PmtInf></CstmrCdtTrfInitn></Document> ]]]]>><![CDATA[</content></Wrapper>]]></con:value>
        </con:property>
        <con:property>
          <con:name>messagetoSend</con:name>
          <con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><Wrapper xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="urn:pin.payment.edb.com:authpain001wrapper:v1_0" ><auth><![CDATA[ <?xml version="1.0" encoding="UTF-8"?><AgreementAuthorizationRequest><authRequest><agreementData><agreementId>32338717708</agreementId><bankId>4201</bankId><userId>32338717708</userId><userFirstName>Firstname</userFirstName><userLastName>Lastname</userLastName><userIdType>USAG</userIdType><productID>11</productID><organizationId>32338717708</organizationId><preapproved>false</preapproved><rejectionLevel>TRANSACTION</rejectionLevel><origin>NDR</origin><allowPartialCancellation>false</allowPartialCancellation><allowCancellationPriorToPayment>false</allowCancellationPriorToPayment></agreementData><agreementAccount><accountNumber>42010305386</accountNumber><swiftAdress>SPTRNO22XXX</swiftAdress><currencyCode>NOK</currencyCode><accountType>CurrencyCoreFD</accountType><access>CREDIT_AND_DEBIT</access><bookingLevel>D</bookingLevel><approvalLimit>0</approvalLimit><registerLimit>0</registerLimit><numberOfVerifiers>0</numberOfVerifiers><numberOfApprovers>0</numberOfApprovers></agreementAccount><metaInformation><receivedTimestamp>2019-04-01T16:00:00</receivedTimestamp></metaInformation></authRequest></AgreementAuthorizationRequest> ]]]]>><![CDATA[</auth><content><![CDATA[ <?xml version="1.0" encoding="UTF-8"?><Document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:iso:std:iso:20022:tech:xsd:pain.001.001.04"><CstmrCdtTrfInitn><GrpHdr><MsgId>fraud_30720090650</MsgId><CreDtTm>2019-04-01T16:00:00.053+02:00</CreDtTm><NbOfTxs>4</NbOfTxs><CtrlSum>40.00</CtrlSum><InitgPty><Nm>Fraud testing AS</Nm><Id><OrgId><AnyBIC>SPTRNO22XXX</AnyBIC><Othr><Id>Fraud-testing</Id><SchmeNm><Cd>BANK</Cd></SchmeNm></Othr></OrgId></Id></InitgPty></GrpHdr><PmtInf><PmtInfId>fraud_30720090650.P1</PmtInfId><PmtMtd>TRF</PmtMtd><NbOfTxs>2</NbOfTxs><CtrlSum>20.00</CtrlSum><PmtTpInf><InstrPrty>NORM</InstrPrty></PmtTpInf><ReqdExctnDt>2020-07-30</ReqdExctnDt><Dbtr><Nm>Test Fraud File AS</Nm><PstlAdr><AdrTp>ADDR</AdrTp><AdrLine>Postboks 1337</AdrLine><AdrLine>0107 OSLO</AdrLine></PstlAdr><Id><OrgId><Othr><Id>32000000115</Id><SchmeNm><Cd>CUST</Cd></SchmeNm></Othr></OrgId></Id></Dbtr><DbtrAcct><Id><Othr><Id>42010305386</Id><SchmeNm><Cd>BBAN</Cd></SchmeNm></Othr></Id></DbtrAcct><DbtrAgt><FinInstnId><BICFI>SPTRNO22XXX</BICFI></FinInstnId></DbtrAgt><ChrgBr>SHAR</ChrgBr><CdtTrfTxInf><PmtId><InstrId>fraud_30720090650.P1T1</InstrId><EndToEndId>fraud_30720090650.P1T1</EndToEndId></PmtId><PmtTpInf><InstrPrty>NORM</InstrPrty><CtgyPurp><Cd>SUPP</Cd></CtgyPurp></PmtTpInf><Amt><InstdAmt Ccy="NOK">10.00</InstdAmt></Amt><CdtrAgt><FinInstnId><BICFI>HAWODEH1XXX</BICFI><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry></PstlAdr></FinInstnId></CdtrAgt><Cdtr><Nm>Alt</Nm><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry><AdrLine>STREET</AdrLine><AdrLine>STREET2</AdrLine></PstlAdr><CtryOfRes>DE</CtryOfRes></Cdtr><CdtrAcct><Id><Othr><Id>DE89370400440532013000</Id></Othr></Id></CdtrAcct></CdtTrfTxInf><CdtTrfTxInf><PmtId><InstrId>fraud_30720090650.P1T2</InstrId><EndToEndId>fraud_30720090650.P1T2</EndToEndId></PmtId><PmtTpInf><InstrPrty>NORM</InstrPrty><CtgyPurp><Cd>SUPP</Cd></CtgyPurp></PmtTpInf><Amt><InstdAmt Ccy="EUR">10.00</InstdAmt></Amt><CdtrAgt><FinInstnId><BICFI>SPTRNO22XXX</BICFI><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>NO</Ctry></PstlAdr></FinInstnId></CdtrAgt><Cdtr><Nm>prefixnamesuffix</Nm><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>NO</Ctry><AdrLine>STREET</AdrLine><AdrLine>STREET2</AdrLine></PstlAdr><CtryOfRes>NO</CtryOfRes></Cdtr><CdtrAcct><Id><Othr><Id>42025301239</Id></Othr></Id></CdtrAcct></CdtTrfTxInf></PmtInf><PmtInf><PmtInfId>fraud_30720090650.P2</PmtInfId><PmtMtd>TRF</PmtMtd><NbOfTxs>2</NbOfTxs><CtrlSum>20.00</CtrlSum><PmtTpInf><InstrPrty>NORM</InstrPrty></PmtTpInf><ReqdExctnDt>2020-07-30</ReqdExctnDt><Dbtr><Nm>Test Fraud CustId AS</Nm><PstlAdr><AdrTp>ADDR</AdrTp><AdrLine>Postboks 1337</AdrLine><AdrLine>0107 OSLO</AdrLine></PstlAdr><Id><OrgId><Othr><Id>32000000115</Id><SchmeNm><Cd>CUST</Cd></SchmeNm></Othr></OrgId></Id></Dbtr><DbtrAcct><Id><Othr><Id>42010305386</Id><SchmeNm><Cd>BBAN</Cd></SchmeNm></Othr></Id></DbtrAcct><DbtrAgt><FinInstnId><BICFI>SPTRNO22XXX</BICFI></FinInstnId></DbtrAgt><ChrgBr>SHAR</ChrgBr><CdtTrfTxInf><PmtId><InstrId>fraud_30720090650.P2T1</InstrId><EndToEndId>fraud_30720090650.P2T1</EndToEndId></PmtId><PmtTpInf><InstrPrty>NORM</InstrPrty><CtgyPurp><Cd>SUPP</Cd></CtgyPurp></PmtTpInf><Amt><InstdAmt Ccy="NOK">10.00</InstdAmt></Amt><CdtrAgt><FinInstnId><BICFI>HAWODEH1XXX</BICFI><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry></PstlAdr></FinInstnId></CdtrAgt><Cdtr><Nm>Anae</Nm><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry><AdrLine>STREET</AdrLine><AdrLine>STREET2</AdrLine></PstlAdr><CtryOfRes>DE</CtryOfRes></Cdtr><CdtrAcct><Id><Othr><Id>42025301239</Id></Othr></Id></CdtrAcct></CdtTrfTxInf><CdtTrfTxInf><PmtId><InstrId>fraud_30720090650.P2T2</InstrId><EndToEndId>fraud_30720090650.P2T2</EndToEndId></PmtId><PmtTpInf><InstrPrty>NORM</InstrPrty><CtgyPurp><Cd>SUPP</Cd></CtgyPurp></PmtTpInf><Amt><InstdAmt Ccy="NOK">10.00</InstdAmt></Amt><CdtrAgt><FinInstnId><BICFI>HAWODEH1XXX</BICFI><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry></PstlAdr></FinInstnId></CdtrAgt><Cdtr><Nm>nameexyz</Nm><PstlAdr><AdrTp>ADDR</AdrTp><Ctry>DE</Ctry><AdrLine>STREET</AdrLine><AdrLine>STREET</AdrLine></PstlAdr><CtryOfRes>DE</CtryOfRes></Cdtr><CdtrAcct><Id><Othr><Id>DE89370400440532013000</Id></Othr></Id></CdtrAcct><RmtInf><Ustrd>random Text</Ustrd></RmtInf></CdtTrfTxInf></PmtInf></CstmrCdtTrfInitn></Document> ]]]]>><![CDATA[</content></Wrapper>]]></con:value>
        </con:property>
        <con:property>
          <con:name>fraudMessage</con:name>
          <con:value>${#TestSuite#fraudMessage}</con:value>
        </con:property>
        <con:property>
          <con:name>fraudCredAccount</con:name>
          <con:value>${#TestSuite#fraudAccountNumber}</con:value>
        </con:property>
        <con:property>
          <con:name>fraudCreditorName</con:name>
          <con:value>${#TestSuite#fraudName}</con:value>
        </con:property>
        <con:property>
          <con:name>fraudCustomerId</con:name>
          <con:value>${#TestSuite#fraudCustomer}</con:value>
        </con:property>
        <con:property>
          <con:name>transactionsIds</con:name>
          <con:value>[185309, 185310, 185311, 185312]</con:value>
        </con:property>
        <con:property>
          <con:name>messageIds</con:name>
          <con:value>[145917, 145917, 145917, 145917]</con:value>
        </con:property>
        <con:property>
          <con:name>kriterieType</con:name>
          <con:value>KUNDENR</con:value>
        </con:property>
        <con:property>
          <con:name>UserID</con:name>
          <con:value>e213476</con:value>
        </con:property>
        <con:property>
          <con:name>credentials</con:name>
          <con:value>03111012010400425kglPboRi3h16OVtVL1neI9CfuAtjCBO603eS0IgWm1WWIO7EfpSL4DE%2FlDFi69n1sSaabKNt2t%2BxJppso23a37Emmmyjbdrflpq4f56YEcTwqPbJGRxTVbEmmmyjbdrfsSaabKNt2t%2FXzlyjxYnxhcG46wcbIKp%2FsSaabKNt2t9wBUG0SyIoqFfig80Gq4uXVBtimDzTiu3EfQIWD5xMfpd8V90wfJqE%2FrpIdBWOZCg%3DWlPV5eZ4diuCWN8n8MioYhhi5y3ry7ocUG557FkHElWUtZW5y2o9bV4kNOBI2eIvhnMNNl4KZzZiP60aZOtzU6qC7h54%2FjtOS9LP2XwPBSwC3jUA00HIe25%2FFBsLnNciYlYLbkWKiTZCji3sjsSuUS8K0sIEsS3qoAJRWadlGrE%3D</con:value>
        </con:property>
        <con:property>
          <con:name>channel</con:name>
          <con:value>INT</con:value>
        </con:property>
        <con:property>
          <con:name>orgid</con:name>
          <con:value>4201</con:value>
        </con:property>
        <con:property>
          <con:name>PaymentChannel</con:name>
          <con:value>INT</con:value>
        </con:property>
        <con:property>
          <con:name>AgreementId</con:name>
          <con:value>${#TestSuite#customerid}</con:value>
        </con:property>
        <con:property>
          <con:name>SourceApplication</con:name>
          <con:value>EVRYINT</con:value>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="BatchExecutionStep" id="69693d32-c0d3-4d74-b6b9-74d90c5afcda">
    <con:settings/>
    <con:config>
      <script>def project = testRunner.testCase.testSuite.getProject()
def currentSuite = testRunner.getTestCase().getTestSuite().name
def currentTestCase= testRunner.getTestCase().name
def currentTestStepName = context.testCase.getTestStepAt(context.getCurrentStepIndex()).getLabel()
List  list = new ArrayList();
def runner = null
//To run all the disabled testcases before running the batch
def testCaseExlusionList = ['DB Properties',currentTestCase]

def testSuiteRes = project.getTestSuiteList().each{ testSuite ->
	if(currentSuite == testSuite.name)
	{		
		testSuite.testCaseList.each { testCase ->
		   def testCaseName = testCase.name
		   if(!testCaseExlusionList.contains(testCaseName)){
			   	try{
				   	 runner = testCase.run(new com.eviware.soapui.support.types.StringToObjectMap(), true);
				  	 runner.waitUntilFinished()
				 	 log.info  "1  runner.getStatus() :"+runner.getStatus()
				 	 list.add(runner)
			   }catch(Exception  e)
			   {
			   	log.info "Error " + e
			   }
		   }	   
		  	 
		}		
	}	
}

// Run the FraudRevalidation Batch after all testcases executed
def batchStepRunner = testRunner.runTestStepByName("fraudReValidationBatch");

if (batchStepRunner.status.toString()  != "PASS") assert false , "Batch Run step :fraudReValidationBatch failed!!!"

log.info "Completed Batch Run!!!"

//Post Batch run validation started for all the disabled testcases
log.info "Post Batch run validation started for all the disabled testcases!!"
def resultSuite  = ""
def a = list.each{ runner1 ->
	testCaseNameTemp = runner1.getTestRunnable().name
	def getTestCaseNameTemp = testRunner.getTestCase().getTestSuite().getTestCaseByName(testCaseNameTemp)
	log.info runner1.getStatus()
	log.info "TestCAse Name :" + runner1.getTestRunnable().name + " : runner1.getStatus()-->" + runner1.getStatus()
	def resultCase = ""
	if((runner1.getStatus().toString() == "PASS") &amp;&amp; testCaseNameTemp != "DB Properties"){
		log.info "inside!!"
		def testCasetemp  = testRunner.getTestCase().testSuite.getTestCaseByName(testCaseNameTemp)
		def transactionsIds = testCasetemp.getTestStepByName("Properties").getPropertyValue("transactionsIds")
		def msgID = testCasetemp.getTestStepByName("Properties").getPropertyValue("msgID")
		def kriterieType = testCasetemp.getTestStepByName("Properties").getPropertyValue("kriterieType")
		log.info "transactionId:" + transactionsIds + " : msgID :" + msgID + " : kriterieType ="  + kriterieType
		
		testRunner.getTestCase().getTestStepByName("Properties").setPropertyValue("transactionsIds",transactionsIds)
		testRunner.getTestCase().getTestStepByName("Properties").setPropertyValue("msgID",msgID)
		testRunner.getTestCase().getTestStepByName("Properties").setPropertyValue("kriterieType",kriterieType)		
			def testStepExlusionList = ['Properties','fraudReValidationBatch',currentTestStepName]
			// run post batch run validation for each disbled testcase
			getTestCaseNameTemp.getTestStepList().each{ testStep ->			
					def testStepTemp = testStep.name
					def resultStep = ""
					log.info "testStep.isDisabled()-->" + testStep.isDisabled() + " :testStep.name->"  + testStep.name
					if(!testStepExlusionList.contains(testStepTemp) &amp;&amp; testStep.isDisabled()){
//							def stepRunner = testRunner.runTestStepByName(testStepTemp)
							def stepRunner = testStep.run(testRunner, context)
							log.info testCaseNameTemp + "-->" + testStepTemp + "-->status=" + stepRunner.status.toString()
							if(stepRunner.status.toString() != 'PASS'){
								
								resultStep = resultStep +" : Failed testStep = " + testStepTemp + " : Failed Reason" + stepRunner.getMessages().toString() + "\n "
								resultCase = resultCase  + resultStep
								log.info "Inside Faield step-->resultStep" +  resultStep
								log.info "Inside Faield step-->resultCase" +  resultCase
							}
					}					
			}
			if(resultCase.trim() != ""){
				resultCase = "\n************************FAILED TESTCASE DETAILS*********************\n"  + "Failed TestCase =" + testCaseNameTemp + "\n" + resultCase 
				resultSuite = resultSuite  +   resultCase	 + "\n"
			}
	
	}	
	else{
		runner1.fail(resultCase)
		resultCase = "\n************************FAILED TESTCASE DETAILS*********************\n"  + "Failed TestCase =" + testCaseNameTemp + "\n" + resultCase  + "\n Failed Reason:" + runner1.getReason()
		resultSuite = resultSuite  +   resultCase	 + "\n"
	}
}

log.info "resultSuite error log-->" + resultSuite
if(resultSuite.trim() != "")
	assert false, resultSuite</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="fraudReValidationBatch" id="1aec288a-ad7c-47b7-a18d-5d2884396345" disabled="true">
    <con:settings/>
    <con:config>
      <script>def strHost = context.expand( '${#Project#EBSHost}' )
def strUsername = context.expand( '${#Project#UserName}' )
def strPassword = context.expand( '${#Project#Password}' )
def  intPort = context.expand( '${#Project#Port}' )

String env = testRunner.testCase.testSuite.project.getActiveEnvironmentName().toLowerCase()
env = env.toString().substring(2)

if (!(ServerConnect.Connect(strHost ,strUsername, strPassword, Integer.parseInt(intPort)) == "PASS"))
	assert false," Failed to conenct to linux server!!"
else
 log.info "Connected to the server successfully!!"

log.info "Running the batch...."

def nextDate =  new Date();
nextDate = nextDate.format("yyyyMMdd")

String shParameter = "pwhFraudRevalidationProcess.sh classpath:spring/pwh-fraud-revalidation-job-batch-context.xml pwhFraudRevalidationProcess paymentStatuses=\"RFDD,LAFU,TERE\" releaseDate=${nextDate} banksInProcess=\"4201\" 2>&amp;1"
String CommandOutPut = ServerConnect.execBatchCommand(env , "pin" ,shParameter)	

log.info "CommandOutput returned-->" + CommandOutPut
ServerConnect.closeConnection()

assert CommandOutPut.trim() != "", "CommandLine OutPut is empty!!, Executed command :" + command2</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Groovy Script" id="d18072fb-4b0e-476d-a717-eee7fec59e86" disabled="true">
    <con:settings/>
    <con:config>
      <script>def testCase = "Fraud Revalidation FIlePayment KONTO MELDING"
def testStepName = "TRANSACTIONS_AfterUpdate"
//testStep.isDisabled()
def testStep = testRunner.getTestCase().getTestSuite().getTestCaseByName(testCase).getTestStepByName(testStepName)
def r = testStep.run(testRunner, context)</script>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
  <con:breakPoints>
    <con:testStepId>b5316503-45d0-4745-a4ce-aa4f8bb9f5f4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
</con:testCase>
