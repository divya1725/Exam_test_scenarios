<?xml version="1.0" encoding="UTF-8"?>
<con:testCase zephyrTestName="" zephyrTestId="" wsrmVersion="1.0" wsrmEnabled="false" wsrmAckTo="" timeout="0" searchProperties="true" name="PDC-265780-PRM-681-11-Step6" keepSession="false" id="e234c6d2-88f6-4b4d-a054-a4fee35cbb20" failTestCaseOnErrors="true" failOnError="true" discardOkResults="false" amfPassword="" amfLogin="" amfEndpoint="" amfAuthorisation="false" xmlns:con="http://eviware.com/soapui/config">
  <con:description>Create Predefined Creditor is added successfully with Ultimate Creditor Address</con:description>
  <con:settings>
    <con:setting id="e234c6d2-88f6-4b4d-a054-a4fee35cbb20fileName">PDC-265780-PRM-681-11-Step6</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep type="request" name="CreditorCreate_v2_1" id="b815b679-df7a-430f-8c70-30323b454480">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>PINSPaymentPredefinedCreditor_V2_1PortTypeSoap11</con:interface>
      <con:operation>CreditorCreate</con:operation>
      <con:request wssPasswordType="" useWsReliableMessaging="false" useWsAddressing="false" timeout="" sslKeystore="" outgoingWss="" name="CreditorCreate_v2_1" incomingWss="" id="523c9182-0dea-4cda-b183-750b1a4fee03">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://${#Project#G_D10}/pin/services/PINSPaymentPredefinedCreditor_V2_1</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsc="http://edb.com/ws/WSCommon_v22" xmlns:urn="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1" xmlns:urn1="urn:pins.payment.evry.com:domain:predefinedcreditor:v2_1" xmlns:urn2="urn:pins.payment.evry.com:domain:complex-types:v2_1">
   <soapenv:Header>
      <wsc:AutHeader>
         <wsc:SourceApplication>${#TestSuite#SourceApplication}</wsc:SourceApplication>
         <wsc:DestinationApplication>PIN</wsc:DestinationApplication>
         <wsc:Function>PIN Create</wsc:Function>
         <wsc:Version>V2.0</wsc:Version>
         <wsc:ClientContext>
            <wsc:userid>${#TestSuite#userid}</wsc:userid>
            <wsc:credentials>${#TestSuite#credentials}</wsc:credentials>
            <wsc:channel>NBA</wsc:channel>
            <wsc:orgid>${#TestSuite#orgid}</wsc:orgid>
            <wsc:orgunit>${#TestSuite#orgid}</wsc:orgunit>
            <wsc:customerid>${#TestSuite#customerid}</wsc:customerid>
            <wsc:locale>en</wsc:locale>
            <wsc:ip>1.1.1.1</wsc:ip>
            <wsc:item value="${#TestSuite#value1}" key="${#TestSuite#item1}"/>
            <wsc:item value="${#TestSuite#value2}" key="${#TestSuite#item2}"/>
            <wsc:item value="${#TestSuite#value3}" key="${#TestSuite#item3}"/>
            <wsc:item value="${#TestSuite#value4}" key="${#TestSuite#item4}"/>
         </wsc:ClientContext>
      </wsc:AutHeader>
   </soapenv:Header>
   <soapenv:Body>
      <urn:CreditorCreateRequest>
         <urn:creditorInformation>
            <urn1:alias>${=org.apache.commons.lang.RandomStringUtils.random(35, true, true)}</urn1:alias>
            <urn1:type>INTERNATIONAL</urn1:type>
            <!--Optional:-->
            <urn1:instructionPriority>NORM</urn1:instructionPriority>
            <!--Optional:-->
            <urn1:debtorAccount>
               <urn2:identification>${#TestSuite#debitAccount}</urn2:identification>
               <urn2:currency>${#TestSuite#debitAcntccy}</urn2:currency>
               <!--Optional:-->
            </urn1:debtorAccount>
            <!--Optional:-->
            <!--Optional:-->
            <urn1:ultimateDebtor><urn2:name>Ult Deb Name</urn2:name><urn2:postalAddress><urn2:addressType>MLTO</urn2:addressType><urn2:department>dep</urn2:department><urn2:subDepartment>sub dep</urn2:subDepartment><urn2:streetName>str name</urn2:streetName><urn2:buildingNumber>232</urn2:buildingNumber><urn2:postCode>234234</urn2:postCode><urn2:townName>t name</urn2:townName><urn2:countrySubDivision>county sub</urn2:countrySubDivision><urn2:country>${#TestSuite#debtCountry}</urn2:country><urn2:addressLine>asd</urn2:addressLine></urn2:postalAddress></urn1:ultimateDebtor><urn1:amount>
               <!--You have a CHOICE of the next 2 items at this level-->
                <urn2:instructedAmount currency="${#TestSuite#amountCurrency1}">
                  <urn2:amount>1</urn2:amount>
               </urn2:instructedAmount>
            </urn1:amount>
            <urn1:creditorAccount>
               <urn2:identification>${#TestSuite#intCreditAccount}</urn2:identification><urn2:currency>${#TestSuite#debitAcntccy}</urn2:currency>
               <!--Optional:-->
            </urn1:creditorAccount>
            <!--Optional:-->
            <urn1:ultimateCreditor><urn2:name>ULT cred</urn2:name><urn2:postalAddress><urn2:addressType>MLTO</urn2:addressType><urn2:department>Dept</urn2:department><urn2:subDepartment>Su  Dep</urn2:subDepartment><urn2:streetName>Str name</urn2:streetName><urn2:buildingNumber>1234</urn2:buildingNumber><urn2:postCode>43211</urn2:postCode><urn2:townName>t name</urn2:townName><urn2:countrySubDivision>cout su </urn2:countrySubDivision><urn2:country>${#TestSuite#debtCountry}</urn2:country><urn2:addressLine>Adddddddd</urn2:addressLine></urn2:postalAddress><urn2:faxNumber>+358-18-234123</urn2:faxNumber><urn2:emailAddress>asdsdad@@@gmail.coom</urn2:emailAddress><urn2:contactDetailsName>sASasdsd +358-18-234123</urn2:contactDetailsName></urn1:ultimateCreditor><urn1:creditor>
               <!--Optional:-->
               <urn2:name>CredName</urn2:name>
               <urn2:postalAddress>
                  <urn2:addressType>MLTO</urn2:addressType><urn2:department>dep</urn2:department><urn2:subDepartment>sub dept</urn2:subDepartment><urn2:streetName>st name</urn2:streetName><urn2:buildingNumber>123</urn2:buildingNumber><urn2:postCode>3322</urn2:postCode><urn2:townName>t name</urn2:townName><urn2:countrySubDivision>cont sub div</urn2:countrySubDivision><urn2:country>${#TestSuite#intCredAgentCountry}</urn2:country>
               </urn2:postalAddress><urn2:faxNumber>+358-18-234123</urn2:faxNumber><urn2:emailAddress>sadasds@2z2@gmail.com</urn2:emailAddress><urn2:contactDetailsName>adasd</urn2:contactDetailsName>
               <!--Optional:-->
               <!--Optional:-->
               <!--Optional:-->
               <!--Optional:-->
            </urn1:creditor>
            <urn1:creditorAgent>
               <urn2:bic>${#TestSuite#intCredAgentBic}</urn2:bic>
               <urn2:name>cred</urn2:name><urn2:postalAddress>
                  <urn2:addressType>MLTO</urn2:addressType><urn2:department>dep</urn2:department><urn2:subDepartment>sept dep</urn2:subDepartment><urn2:streetName>st name</urn2:streetName><urn2:buildingNumber>234</urn2:buildingNumber><urn2:postCode>42233</urn2:postCode><urn2:townName>tname</urn2:townName><urn2:countrySubDivision>sub count</urn2:countrySubDivision><urn2:country>${#TestSuite#intCredAgentCountry}</urn2:country>
               </urn2:postalAddress>
            </urn1:creditorAgent><urn1:chargeBearer>CRED</urn1:chargeBearer><urn1:supplierNumber>${=Math.abs(new Random().nextInt() % 6000000) + 1}</urn1:supplierNumber>
            <!--Optional:-->
         </urn:creditorInformation>
      </urn:CreditorCreateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="XPath Match" name="Match content of [ErrorCode]" id="1778142e-7bba-4adc-ac4a-d066ebfd25c5">
          <con:configuration>
            <path>${#Response#//*:ErrorCode}</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="MessageContentAssertion" name="Message Content Assertion" id="c0d4c4b9-1898-4f13-8b2b-40918f459ec6">
          <con:configuration xsi:type="con:MessageContentAssertion">
            <con:elements>
              <con:xpath>declare namespace ns1='http://edb.com/ws/WSCommon_v22';
declare namespace ns2='urn:pins.payment.evry.com:domain:common:v2_0';
declare namespace ns3='urn:pins.payment.evry.com:ws:paymentcreditor:v2_1';
//ns3:CreditorCreateResponse[1]/ns2:ResponseState[1]/ns1:ErrorCode[1]</con:xpath>
              <con:element>ErrorCode</con:element>
              <con:type>XmlInt</con:type>
              <con:operator>=</con:operator>
              <con:enabled>true</con:enabled>
              <con:expectedValue>0</con:expectedValue>
              <con:hasValue>false</con:hasValue>
              <con:numberType>true</con:numberType>
            </con:elements>
            <con:elements>
              <con:xpath>declare namespace ns1='http://edb.com/ws/WSCommon_v22';
declare namespace ns2='urn:pins.payment.evry.com:domain:common:v2_0';
declare namespace ns3='urn:pins.payment.evry.com:ws:paymentcreditor:v2_1';
//ns3:CreditorCreateResponse[1]/ns2:ResponseState[1]/ns1:Message[1]</con:xpath>
              <con:element>Message</con:element>
              <con:type>XmlString</con:type>
              <con:operator>=</con:operator>
              <con:enabled>true</con:enabled>
              <con:expectedValue>OK</con:expectedValue>
              <con:hasValue>false</con:hasValue>
              <con:numberType>false</con:numberType>
            </con:elements>
            <con:originalMessage><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   <soap:Body>
      <ns4:CreditorCreateResponse xmlns:ns9="urn:pins.payment.evry.com:domain:nationalinformation-nor:v2_0" xmlns:ns8="urn:pins.payment.evry.com:ws:paymentutil:v2_0" xmlns:ns7="urn:pins.payment.evry.com:domain:complex-types:v2_0" xmlns:ns6="urn:pins.payment.evry.com:domain:paymentutil:v2_0" xmlns:ns5="urn:pins.payment.evry.com:domain:complex-types:v2_1" xmlns:ns4="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1" xmlns:ns3="urn:pins.payment.evry.com:domain:common:v2_0" xmlns:ns2="urn:pins.payment.evry.com:domain:predefinedcreditor:v2_1" xmlns="http://edb.com/ws/WSCommon_v22">
         <ns3:ResponseState>
            <ErrorCode>0</ErrorCode>
            <Severity>0</Severity>
            <ComponentId>111</ComponentId>
            <Message>OK</Message>
            <LogSequence xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </ns3:ResponseState>
         <ns4:creditorInformation>
            <ns2:alias>hkWUqVS42NbC5jYfp5vh7T7DBZgZXFuZrSj</ns2:alias>
            <ns2:type>INTERNATIONAL</ns2:type>
            <ns2:instructionPriority>NORM</ns2:instructionPriority>
            <ns2:debtorAccount>
               <ns5:identification>FI2031512000004264</ns5:identification>
               <ns5:currency>EUR</ns5:currency>
            </ns2:debtorAccount>
            <ns2:amount>
               <ns5:instructedAmount currency="EUR">
                  <ns5:amount>1.00</ns5:amount>
               </ns5:instructedAmount>
            </ns2:amount>
            <ns2:creditorAccount>
               <ns5:identification>1233443554656</ns5:identification>
            </ns2:creditorAccount>
            <ns2:creditor>
               <ns5:name>CredName</ns5:name>
               <ns5:postalAddress>
                  <ns5:country>US</ns5:country>
               </ns5:postalAddress>
            </ns2:creditor>
            <ns2:creditorAgent>
               <ns5:bic>CITIUS33XXX</ns5:bic>
               <ns5:postalAddress>
                  <ns5:country>US</ns5:country>
               </ns5:postalAddress>
            </ns2:creditorAgent>
            <ns2:chargeBearer>SHAR</ns2:chargeBearer>
         </ns4:creditorInformation>
         <ns4:predefinedCreditorId>1049</ns4:predefinedCreditorId>
      </ns4:CreditorCreateResponse>
   </soap:Body>
</soap:Envelope>]]></con:originalMessage>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig version="200508" mustUnderstand="NONE" action="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1/PINSPaymentPredefinedCreditor_V2_1PortType/CreditorCreateRequest"/>
        <con:wsrmConfig version="1.2"/>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="jdbc" name="PDC_PREDEFINEDCREDITOR" id="3073b1e6-acf2-4cf9-a2c9-b544748310fe">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>PWH</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>${#Project#G_D10_PWH}</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>select * from PDC_PREDEFINEDCREDITOR 
where SUPPLIERNUMBER='${CreditorCreate_v2_1#Response#declare namespace ns2='urn:pins.payment.evry.com:domain:predefinedcreditor:v2_1'; declare namespace ns4='urn:pins.payment.evry.com:ws:paymentcreditor:v2_1'; //ns4:CreditorCreateResponse[1]/ns4:creditorInformation[1]/ns2:supplierNumber[1]}'</con:query>
      <con:assertion type="MessageContentAssertion" name="Message Content Assertion" id="be9dd9cf-2224-4cc9-80c9-c67765f301c2">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage>&lt;Results>
   &lt;ResultSet fetchSize="10"/>
&lt;/Results></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="jdbc" name="PDC_AGENT" id="76fdf137-9a34-4e62-829e-63a4f1185159">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>PWH</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>${#Project#G_D10_PWH}</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>select * from PDC_AGENT 
where FK_PREDEFINEDCREDITORID = '${PDC_PREDEFINEDCREDITOR#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/PREDEFINEDCREDITORID[1]}'</con:query>
      <con:assertion type="MessageContentAssertion" name="Message Content Assertion" id="be9dd9cf-2224-4cc9-80c9-c67765f301c2">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage>&lt;Results>
   &lt;ResultSet fetchSize="10"/>
&lt;/Results></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="jdbc" name="PDC_PARTY" id="3ad5f83c-c5ed-4064-9c1f-3b0ed1726e47">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>PWH</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>${#Project#G_D10_PWH}</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>select * from PDC_PARTY 
where FK_PREDEFINEDCREDITORID = '${PDC_PREDEFINEDCREDITOR#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/PREDEFINEDCREDITORID[1]}'
order by PARTYID asc</con:query>
      <con:assertion type="MessageContentAssertion" name="Message Content Assertion" id="be9dd9cf-2224-4cc9-80c9-c67765f301c2">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>false</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage>&lt;Results>
   &lt;ResultSet fetchSize="10"/>
&lt;/Results></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="jdbc" name="PDC_PAYMENTTEMPLATE" id="d670c44c-12b8-484b-b230-9b060e77a22c">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>PWH</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>${#Project#G_D10_PWH}</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>select * from PDC_PAYMENTTEMPLATE
where FK_PREDEFINEDCREDITORID = '${CreditorCreate_v2_1#Response#declare namespace ns4='urn:pins.payment.evry.com:ws:paymentcreditor:v2_1'; //ns4:CreditorCreateResponse[1]/ns4:predefinedCreditorId[1]}'</con:query>
      <con:assertion type="MessageContentAssertion" name="Message Content Assertion" id="be9dd9cf-2224-4cc9-80c9-c67765f301c2">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage>&lt;Results>
   &lt;ResultSet fetchSize="10"/>
&lt;/Results></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="jdbc" name="PDC_POSTALADDRESS-AgentID" id="44b7e54d-ffc9-410b-83da-520443e4ee66">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>PWH</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>${#Project#G_D10_PWH}</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>select * from PDC_POSTALADDRESS 
where FK_AGENTID = '${PDC_AGENT#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/AGENTID[1]}'</con:query>
      <con:assertion type="MessageContentAssertion" name="Message Content Assertion" id="be9dd9cf-2224-4cc9-80c9-c67765f301c2">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage>&lt;Results>
   &lt;ResultSet fetchSize="10"/>
&lt;/Results></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="jdbc" name="PDC_POSTALADDRESS-InterAgent" id="ab1a3eba-71ef-4c2c-b44d-967f2473ec5d">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>PWH</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>${#Project#G_D10_PWH}</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>select * from PDC_POSTALADDRESS 
where FK_AGENTID= '${PDC_AGENT#ResponseAsXml#//Results[1]/ResultSet[1]/Row[2]/AGENTID[1]}'</con:query>
      <con:assertion type="MessageContentAssertion" name="Message Content Assertion" id="be9dd9cf-2224-4cc9-80c9-c67765f301c2">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage>&lt;Results>
   &lt;ResultSet fetchSize="10"/>
&lt;/Results></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="jdbc" name="PDC_POSTALADDRESS-CredPartyID" id="7691ae6f-29f3-4098-b06e-1f29abdefea1">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>PWH</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>${#Project#G_D10_PWH}</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>select * from PDC_POSTALADDRESS 
where FK_PARTYID = '${PDC_PARTY#ResponseAsXml#//Results[1]/ResultSet[1]/Row[1]/PARTYID[1]}'</con:query>
      <con:assertion type="MessageContentAssertion" name="Message Content Assertion" id="be9dd9cf-2224-4cc9-80c9-c67765f301c2">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage>&lt;Results>
   &lt;ResultSet fetchSize="10"/>
&lt;/Results></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="jdbc" name="PDC_POSTALADDRESS-UltCredorID" id="18d8f755-069b-4121-96a6-675937f3c897">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>PWH</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>${#Project#G_D10_PWH}</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>select * from PDC_POSTALADDRESS 
where FK_PARTYID = '${PDC_PARTY#ResponseAsXml#//Results[1]/ResultSet[1]/Row[2]/PARTYID[1]}'</con:query>
      <con:assertion type="MessageContentAssertion" name="Message Content Assertion" id="be9dd9cf-2224-4cc9-80c9-c67765f301c2">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage>&lt;Results>
   &lt;ResultSet fetchSize="10"/>
&lt;/Results></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="jdbc" name="PDC_POSTALADDRESS-UltDEBTID" id="8a76eda7-0e8d-4b2a-928f-66cfaa8a9285">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>PWH</con:dbConnectionName>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>${#Project#G_D10_PWH}</con:connectionString>
      <con:password/>
      <con:connectionProperties/>
      <con:query>select * from PDC_POSTALADDRESS 
where FK_PARTYID = '${PDC_PARTY#ResponseAsXml#//Results[1]/ResultSet[1]/Row[3]/PARTYID[1]}'</con:query>
      <con:assertion type="MessageContentAssertion" name="Message Content Assertion" id="be9dd9cf-2224-4cc9-80c9-c67765f301c2">
        <con:configuration xsi:type="con:MessageContentAssertion">
          <con:elements>
            <con:xpath>//Results[1]/ResultSet[1]/@fetchSize</con:xpath>
            <con:element>@fetchSize</con:element>
            <con:type/>
            <con:operator>=</con:operator>
            <con:enabled>true</con:enabled>
            <con:expectedValue>10</con:expectedValue>
            <con:hasValue>false</con:hasValue>
            <con:numberType>false</con:numberType>
          </con:elements>
          <con:originalMessage>&lt;Results>
   &lt;ResultSet fetchSize="10"/>
&lt;/Results></con:originalMessage>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="CreditorSearch_v2_1" id="a6e84417-04e3-4dd6-8936-94e53621cc83">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>PINSPaymentPredefinedCreditor_V2_1PortTypeSoap11</con:interface>
      <con:operation>CreditorSearch</con:operation>
      <con:request wssPasswordType="" useWsReliableMessaging="false" useWsAddressing="false" timeout="" sslKeystore="" outgoingWss="" name="CreditorSearch_v2_1" incomingWss="" id="4b7392e2-738f-4108-bbad-d230999dd39a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://${#Project#G_D10}/pin/services/PINSPaymentPredefinedCreditor_V2_1</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsc="http://edb.com/ws/WSCommon_v22" xmlns:urn="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1" xmlns:urn1="urn:pins.payment.evry.com:domain:predefinedcreditor:v2_1" xmlns:urn2="urn:pins.payment.evry.com:domain:common:v2_0">
   <soapenv:Header>
      <wsc:AutHeader>
         <wsc:SourceApplication>${#TestSuite#SourceApplication}</wsc:SourceApplication>
         <wsc:DestinationApplication>PIN</wsc:DestinationApplication>
         <wsc:Function>PIN Create</wsc:Function>
         <wsc:Version>V2.0</wsc:Version>
         <wsc:ClientContext>
            <wsc:userid>${#TestSuite#userid}</wsc:userid>
            <wsc:credentials>${#TestSuite#credentials}</wsc:credentials>
            <wsc:channel>NBA</wsc:channel>
            <wsc:orgid>${#TestSuite#orgid}</wsc:orgid>
            <wsc:orgunit>${#TestSuite#orgid}</wsc:orgunit>
            <wsc:customerid>${#TestSuite#customerid}</wsc:customerid>
            <wsc:locale>en</wsc:locale>
            <wsc:ip>1.1.1.1</wsc:ip>
            <wsc:item value="${#TestSuite#value1}" key="${#TestSuite#item1}"/>
            <wsc:item value="${#TestSuite#value2}" key="${#TestSuite#item2}"/>
            <wsc:item value="${#TestSuite#value3}" key="${#TestSuite#item3}"/>
            <wsc:item value="${#TestSuite#value4}" key="${#TestSuite#item4}"/>
         </wsc:ClientContext>
      </wsc:AutHeader>
   </soapenv:Header>
   <soapenv:Body>
      <urn:CreditorSearchRequest>
         <urn:searchCriteria>
            <!--Optional:-->
            <urn1:alias>${CreditorCreate_v2_1#Response#//*:alias}</urn1:alias>
            <urn1:type>${CreditorCreate_v2_1#Response#//*:creditorInformation[1]//*:type[1]}</urn1:type>
            <!--Optional:-->
            <!--Optional:-->
            <!--Optional:-->
            <urn1:elementControl>
               <urn2:StartIndex>0</urn2:StartIndex>
               <urn2:MaximumNumberOfElements>10</urn2:MaximumNumberOfElements>
            </urn1:elementControl>
         </urn:searchCriteria>
      </urn:CreditorSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="XPath Match" name="Match content of [NumberOfElements]" id="eeb39711-9b3c-47b0-a4b9-da35ed53716f">
          <con:configuration>
            <path>${#Response#//*:NumberOfElements}>0</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="writeToFile" id="693c1c64-a810-4092-85c2-2fbe323c58ef">
          <con:configuration>
            <scriptText>import com.eviware.soapui.support.XmlHolder
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

def path=context.expand( '${projectDir}')
String curStepName = (String)context.getCurrentStep().getLabel()

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 
def response = groovyUtils.getXmlHolder(curStepName + "#Response")
def errorCode=response.getNodeValue("//*:ErrorCode");
def testCase = context.getCurrentStep().getTestCase().getLabel()
def endPoint = messageExchange.getEndpoint()

path=path+"\\results"
File dir = new File(path);
if (!dir.exists())
{
                log.info 'Creating Directory'
                dir.mkdir();
}

Date date = new Date();
SimpleDateFormat df = new SimpleDateFormat("dd-M-yyyy hh:mm:ss a zz");    
df.setTimeZone(TimeZone.getTimeZone("Europe/Oslo"));

def datetime = df.format(date)

SimpleDateFormat fn = new SimpleDateFormat("dd-M-yyyy hh_mm_ss a zz");    
def fileName = fn.format(date)

//log.info path 
def fout = new File(path+"\\"+testCase+" - "+curStepName+"_"+fileName+"_"+errorCode+".txt",)


fout.write("Time Submitted		:	"+datetime+"\r\n")
fout.append("End Point Used		:	"+endPoint+"\r\n")
fout.append("Time Taken		:	"+messageExchange.timeTaken+"ms\r\n")
fout.append("Executed in test set	:	"+testCase+" - "+curStepName+"_"+fileName)
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   REQUEST\r\n\r\n","UTF-8")
fout.append(messageExchange.getRequestHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getRequestContent() ).replace("\n","\r\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   RESPONSE\r\n\r\n","UTF-8")
fout.append(messageExchange.getResponseHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getResponseContent() ).replace("\n","\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig version="200508" mustUnderstand="NONE" action="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1/PINSPaymentPredefinedCreditor_V2_1PortType/CreditorSearchRequest"/>
        <con:wsrmConfig version="1.2"/>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="CreditorRead_v2_1" id="c9d92b75-1a2f-4295-a141-3ad8eaf6d95e">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>PINSPaymentPredefinedCreditor_V2_1PortTypeSoap11</con:interface>
      <con:operation>CreditorRead</con:operation>
      <con:request wssPasswordType="" useWsReliableMessaging="false" useWsAddressing="false" timeout="" sslKeystore="" outgoingWss="" name="CreditorRead_v2_1" incomingWss="" id="8798c74d-4171-43e9-884d-fb003073f694">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://${#Project#G_D10}/pin/services/PINSPaymentPredefinedCreditor_V2_1</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsc="http://edb.com/ws/WSCommon_v22" xmlns:urn="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1">
   <soapenv:Header>
      <wsc:AutHeader>
         <wsc:SourceApplication>${#TestSuite#SourceApplication}</wsc:SourceApplication>
         <wsc:DestinationApplication>PIN</wsc:DestinationApplication>
         <wsc:Function>PIN Create</wsc:Function>
         <wsc:Version>V2.0</wsc:Version>
         <wsc:ClientContext>
            <wsc:userid>${#TestSuite#userid}</wsc:userid>
            <wsc:credentials>${#TestSuite#credentials}</wsc:credentials>
            <wsc:channel>NBA</wsc:channel>
            <wsc:orgid>${#TestSuite#orgid}</wsc:orgid>
            <wsc:orgunit>${#TestSuite#orgid}</wsc:orgunit>
            <wsc:customerid>${#TestSuite#customerid}</wsc:customerid>
            <wsc:locale>en</wsc:locale>
            <wsc:ip>1.1.1.1</wsc:ip>
            <wsc:item value="${#TestSuite#value1}" key="${#TestSuite#item1}"/>
            <wsc:item value="${#TestSuite#value2}" key="${#TestSuite#item2}"/>
            <wsc:item value="${#TestSuite#value3}" key="${#TestSuite#item3}"/>
            <wsc:item value="${#TestSuite#value4}" key="${#TestSuite#item4}"/>
         </wsc:ClientContext>
      </wsc:AutHeader>
   </soapenv:Header>
   <soapenv:Body>
      <urn:CreditorReadRequest>
         <urn:predefinedCreditorId>${CreditorCreate_v2_1#Response#//*:predefinedCreditorId}</urn:predefinedCreditorId>
      </urn:CreditorReadRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="XPath Match" name="Match content of [ErrorCode]" id="7df7019d-7fee-48d8-a2eb-b999810fac91">
          <con:configuration>
            <path>${#Response#//*:ErrorCode}</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="writeToFile" id="a33006d4-3846-48c1-8539-038f5ab4b9b4">
          <con:configuration>
            <scriptText>import com.eviware.soapui.support.XmlHolder
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

def path=context.expand( '${projectDir}')
String curStepName = (String)context.getCurrentStep().getLabel()

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 
def response = groovyUtils.getXmlHolder(curStepName + "#Response")
def errorCode=response.getNodeValue("//*:ErrorCode");
def testCase = context.getCurrentStep().getTestCase().getLabel()
def endPoint = messageExchange.getEndpoint()

path=path+"\\results"
File dir = new File(path);
if (!dir.exists())
{
                log.info 'Creating Directory'
                dir.mkdir();
}

Date date = new Date();
SimpleDateFormat df = new SimpleDateFormat("dd-M-yyyy hh:mm:ss a zz");    
df.setTimeZone(TimeZone.getTimeZone("Europe/Oslo"));

def datetime = df.format(date)

SimpleDateFormat fn = new SimpleDateFormat("dd-M-yyyy hh_mm_ss a zz");    
def fileName = fn.format(date)

//log.info path 
def fout = new File(path+"\\"+testCase+" - "+curStepName+"_"+fileName+"_"+errorCode+".txt",)


fout.write("Time Submitted		:	"+datetime+"\r\n")
fout.append("End Point Used		:	"+endPoint+"\r\n")
fout.append("Time Taken		:	"+messageExchange.timeTaken+"ms\r\n")
fout.append("Executed in test set	:	"+testCase+" - "+curStepName+"_"+fileName)
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   REQUEST\r\n\r\n","UTF-8")
fout.append(messageExchange.getRequestHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getRequestContent() ).replace("\n","\r\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   RESPONSE\r\n\r\n","UTF-8")
fout.append(messageExchange.getResponseHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getResponseContent() ).replace("\n","\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig version="200508" mustUnderstand="NONE" action="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1/PINSPaymentPredefinedCreditor_V2_1PortType/CreditorReadRequest"/>
        <con:wsrmConfig version="1.2"/>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="CreditorUpdate_v2_1" id="a1f499cc-28e5-427e-bf85-9da08abda6b8">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>PINSPaymentPredefinedCreditor_V2_1PortTypeSoap11</con:interface>
      <con:operation>CreditorUpdate</con:operation>
      <con:request wssPasswordType="" useWsReliableMessaging="false" useWsAddressing="false" timeout="" sslKeystore="" outgoingWss="" name="CreditorUpdate_v2_1" incomingWss="" id="e4c0949f-3c0a-468c-a9f6-66dca5cd6da8">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://${#Project#G_D10}/pin/services/PINSPaymentPredefinedCreditor_V2_1</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsc="http://edb.com/ws/WSCommon_v22" xmlns:urn="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1" xmlns:urn1="urn:pins.payment.evry.com:domain:predefinedcreditor:v2_1" xmlns:urn2="urn:pins.payment.evry.com:domain:complex-types:v2_1">
   <soapenv:Header>
      <wsc:AutHeader>
         <wsc:SourceApplication>${#TestSuite#SourceApplication}</wsc:SourceApplication>
         <wsc:DestinationApplication>PIN</wsc:DestinationApplication>
         <wsc:Function>PIN Create</wsc:Function>
         <wsc:Version>V2.0</wsc:Version>
         <wsc:ClientContext>
            <wsc:userid>${#TestSuite#userid}</wsc:userid>
            <wsc:credentials>${#TestSuite#credentials}</wsc:credentials>
            <wsc:channel>NBA</wsc:channel>
            <wsc:orgid>${#TestSuite#orgid}</wsc:orgid>
            <wsc:orgunit>${#TestSuite#orgid}</wsc:orgunit>
            <wsc:customerid>${#TestSuite#customerid}</wsc:customerid>
            <wsc:locale>en</wsc:locale>
            <wsc:ip>1.1.1.1</wsc:ip>
            <wsc:item value="${#TestSuite#value1}" key="${#TestSuite#item1}"/>
            <wsc:item value="${#TestSuite#value2}" key="${#TestSuite#item2}"/>
            <wsc:item value="${#TestSuite#value3}" key="${#TestSuite#item3}"/>
            <wsc:item value="${#TestSuite#value4}" key="${#TestSuite#item4}"/>
         </wsc:ClientContext>
      </wsc:AutHeader>
   </soapenv:Header>
   <soapenv:Body>
      <urn:CreditorUpdateRequest>
         <urn:creditorInformation>
            <urn1:alias>${=org.apache.commons.lang.RandomStringUtils.random(35, true, true)}</urn1:alias>
            <urn1:type>INTERNATIONAL</urn1:type>
            <!--Optional:-->
            <!--Optional:-->
            <urn1:debtorAccount>
               <urn2:identification>${#TestSuite#debitAccount}</urn2:identification>
               <!--Optional:-->
               <urn2:currency>${#TestSuite#debitAcntccy}</urn2:currency>
            </urn1:debtorAccount>
            <!--Optional:-->
            <!--Optional:-->
            <urn1:amount>
               <!--You have a CHOICE of the next 2 items at this level-->
               <urn2:instructedAmount currency="${#TestSuite#amountCurrency1}">
                  <urn2:amount>1</urn2:amount>
               </urn2:instructedAmount>
            </urn1:amount>
            <urn1:creditorAccount>
               <urn2:identification>${#TestSuite#intCreditAccount}</urn2:identification>
               <!--Optional:-->
            </urn1:creditorAccount>
            <!--Optional:-->
            <urn1:creditor>
               <!--Optional:-->
               <urn2:name>Cred</urn2:name><urn2:postalAddress><urn2:country>${#TestSuite#intCredAgentCountry}</urn2:country></urn2:postalAddress>
               <!--Optional:-->
               <!--Optional:-->
               <!--Optional:-->
               <!--Optional:-->
            </urn1:creditor>
            <!--Optional:-->
            <urn1:creditorAgent>
               <!--Optional:-->
               <!--Optional:-->
               <!--Optional:-->
               <urn2:bic>${#TestSuite#intCredAgentBic}</urn2:bic>
               <urn2:postalAddress>
                  <!--Optional:-->
                  <!--Optional:-->
                  <!--Optional:-->
                  <!--Optional:-->
                  <!--Optional:-->
                  <!--Optional:-->
                  <!--Optional:-->
                  <!--Optional:-->
                  <!--Optional:-->
                  <urn2:country>${#TestSuite#intCredAgentCountry}</urn2:country>
                  <!--0 to 7 repetitions:-->
               </urn2:postalAddress>
            </urn1:creditorAgent>
            <!--Optional:-->
            <!--Optional:-->
            <!--Optional:-->
            <!--Optional:-->
            <!--Optional:-->
            <!--Optional:-->
            <!--Optional:-->
         </urn:creditorInformation>
         <urn:predefinedCreditorId>${CreditorCreate_v2_1#Response#//*:predefinedCreditorId}</urn:predefinedCreditorId>
      </urn:CreditorUpdateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="XPath Match" name="Match content of [ErrorCode]" id="f17d9fab-2a87-40a0-b3d9-866cc9a9d7db">
          <con:configuration>
            <path>${#Response#//*:ErrorCode}</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="writeToFile" id="c5da81c6-419e-4e6b-8803-84b86e57c197">
          <con:configuration>
            <scriptText>import com.eviware.soapui.support.XmlHolder
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

def path=context.expand( '${projectDir}')
String curStepName = (String)context.getCurrentStep().getLabel()

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 
def response = groovyUtils.getXmlHolder(curStepName + "#Response")
def errorCode=response.getNodeValue("//*:ErrorCode");
def testCase = context.getCurrentStep().getTestCase().getLabel()
def endPoint = messageExchange.getEndpoint()

path=path+"\\results"
File dir = new File(path);
if (!dir.exists())
{
                log.info 'Creating Directory'
                dir.mkdir();
}

Date date = new Date();
SimpleDateFormat df = new SimpleDateFormat("dd-M-yyyy hh:mm:ss a zz");    
df.setTimeZone(TimeZone.getTimeZone("Europe/Oslo"));

def datetime = df.format(date)

SimpleDateFormat fn = new SimpleDateFormat("dd-M-yyyy hh_mm_ss a zz");    
def fileName = fn.format(date)

//log.info path 
def fout = new File(path+"\\"+testCase+" - "+curStepName+"_"+fileName+"_"+errorCode+".txt",)


fout.write("Time Submitted		:	"+datetime+"\r\n")
fout.append("End Point Used		:	"+endPoint+"\r\n")
fout.append("Time Taken		:	"+messageExchange.timeTaken+"ms\r\n")
fout.append("Executed in test set	:	"+testCase+" - "+curStepName+"_"+fileName)
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   REQUEST\r\n\r\n","UTF-8")
fout.append(messageExchange.getRequestHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getRequestContent() ).replace("\n","\r\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   RESPONSE\r\n\r\n","UTF-8")
fout.append(messageExchange.getResponseHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getResponseContent() ).replace("\n","\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig version="200508" mustUnderstand="NONE" action="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1/PINSPaymentPredefinedCreditor_V2_1PortType/CreditorUpdateRequest"/>
        <con:wsrmConfig version="1.2"/>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="CreditorSearch_v2_1_afterUpdate" id="c997236b-00a1-4cb4-b52b-8a1d19d86d24">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>PINSPaymentPredefinedCreditor_V2_1PortTypeSoap11</con:interface>
      <con:operation>CreditorSearch</con:operation>
      <con:request wssPasswordType="" useWsReliableMessaging="false" useWsAddressing="false" timeout="" sslKeystore="" outgoingWss="" name="CreditorSearch_v2_1_afterUpdate" incomingWss="" id="4b7392e2-738f-4108-bbad-d230999dd39a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://${#Project#G_D10}/pin/services/PINSPaymentPredefinedCreditor_V2_1</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsc="http://edb.com/ws/WSCommon_v22" xmlns:urn="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1" xmlns:urn1="urn:pins.payment.evry.com:domain:predefinedcreditor:v2_1" xmlns:urn2="urn:pins.payment.evry.com:domain:common:v2_0">
   <soapenv:Header>
      <wsc:AutHeader>
         <wsc:SourceApplication>${#TestSuite#SourceApplication}</wsc:SourceApplication>
         <wsc:DestinationApplication>PIN</wsc:DestinationApplication>
         <wsc:Function>PIN Create</wsc:Function>
         <wsc:Version>V2.0</wsc:Version>
         <wsc:ClientContext>
            <wsc:userid>${#TestSuite#userid}</wsc:userid>
            <wsc:credentials>${#TestSuite#credentials}</wsc:credentials>
            <wsc:channel>NBA</wsc:channel>
            <wsc:orgid>${#TestSuite#orgid}</wsc:orgid>
            <wsc:orgunit>${#TestSuite#orgid}</wsc:orgunit>
            <wsc:customerid>${#TestSuite#customerid}</wsc:customerid>
            <wsc:locale>en</wsc:locale>
            <wsc:ip>1.1.1.1</wsc:ip>
            <wsc:item value="${#TestSuite#value1}" key="${#TestSuite#item1}"/>
            <wsc:item value="${#TestSuite#value2}" key="${#TestSuite#item2}"/>
            <wsc:item value="${#TestSuite#value3}" key="${#TestSuite#item3}"/>
            <wsc:item value="${#TestSuite#value4}" key="${#TestSuite#item4}"/>
         </wsc:ClientContext>
      </wsc:AutHeader>
   </soapenv:Header>
   <soapenv:Body>
      <urn:CreditorSearchRequest>
         <urn:searchCriteria>
            <!--Optional:-->
            <urn1:alias>${CreditorUpdate_v2_1#Response#//*:alias}</urn1:alias>
            <urn1:type>${CreditorUpdate_v2_1#Response#//*:creditorInformation[1]//*:type[1]}</urn1:type>
            <!--Optional:-->
            <!--Optional:-->
            <!--Optional:-->
            <urn1:elementControl>
               <urn2:StartIndex>0</urn2:StartIndex>
               <urn2:MaximumNumberOfElements>10</urn2:MaximumNumberOfElements>
            </urn1:elementControl>
         </urn:searchCriteria>
      </urn:CreditorSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="XPath Match" name="Match content of [NumberOfElements]" id="c90e610b-20fd-4cc4-a71f-73becafcc40f">
          <con:configuration>
            <path>${#Response#//*:NumberOfElements}>0</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="writeToFile" id="ce0edb42-4a5d-4160-8c99-d69b09d97234">
          <con:configuration>
            <scriptText>import com.eviware.soapui.support.XmlHolder
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

def path=context.expand( '${projectDir}')
String curStepName = (String)context.getCurrentStep().getLabel()

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 
def response = groovyUtils.getXmlHolder(curStepName + "#Response")
def errorCode=response.getNodeValue("//*:ErrorCode");
def testCase = context.getCurrentStep().getTestCase().getLabel()
def endPoint = messageExchange.getEndpoint()

path=path+"\\results"
File dir = new File(path);
if (!dir.exists())
{
                log.info 'Creating Directory'
                dir.mkdir();
}

Date date = new Date();
SimpleDateFormat df = new SimpleDateFormat("dd-M-yyyy hh:mm:ss a zz");    
df.setTimeZone(TimeZone.getTimeZone("Europe/Oslo"));

def datetime = df.format(date)

SimpleDateFormat fn = new SimpleDateFormat("dd-M-yyyy hh_mm_ss a zz");    
def fileName = fn.format(date)

//log.info path 
def fout = new File(path+"\\"+testCase+" - "+curStepName+"_"+fileName+"_"+errorCode+".txt",)


fout.write("Time Submitted		:	"+datetime+"\r\n")
fout.append("End Point Used		:	"+endPoint+"\r\n")
fout.append("Time Taken		:	"+messageExchange.timeTaken+"ms\r\n")
fout.append("Executed in test set	:	"+testCase+" - "+curStepName+"_"+fileName)
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   REQUEST\r\n\r\n","UTF-8")
fout.append(messageExchange.getRequestHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getRequestContent() ).replace("\n","\r\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   RESPONSE\r\n\r\n","UTF-8")
fout.append(messageExchange.getResponseHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getResponseContent() ).replace("\n","\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig version="200508" mustUnderstand="NONE" action="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1/PINSPaymentPredefinedCreditor_V2_1PortType/CreditorSearchRequest"/>
        <con:wsrmConfig version="1.2"/>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="CreditorRead_v2_1_afterUpdate" id="56e60c39-50ba-451b-99ab-75cc41aff3c5">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>PINSPaymentPredefinedCreditor_V2_1PortTypeSoap11</con:interface>
      <con:operation>CreditorRead</con:operation>
      <con:request wssPasswordType="" useWsReliableMessaging="false" useWsAddressing="false" timeout="" sslKeystore="" outgoingWss="" name="CreditorRead_v2_1_afterUpdate" incomingWss="" id="8798c74d-4171-43e9-884d-fb003073f694">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://${#Project#G_D10}/pin/services/PINSPaymentPredefinedCreditor_V2_1</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsc="http://edb.com/ws/WSCommon_v22" xmlns:urn="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1">
   <soapenv:Header>
      <wsc:AutHeader>
         <wsc:SourceApplication>${#TestSuite#SourceApplication}</wsc:SourceApplication>
         <wsc:DestinationApplication>PIN</wsc:DestinationApplication>
         <wsc:Function>PIN Create</wsc:Function>
         <wsc:Version>V2.0</wsc:Version>
         <wsc:ClientContext>
            <wsc:userid>${#TestSuite#userid}</wsc:userid>
            <wsc:credentials>${#TestSuite#credentials}</wsc:credentials>
            <wsc:channel>NBA</wsc:channel>
            <wsc:orgid>${#TestSuite#orgid}</wsc:orgid>
            <wsc:orgunit>${#TestSuite#orgid}</wsc:orgunit>
            <wsc:customerid>${#TestSuite#customerid}</wsc:customerid>
            <wsc:locale>en</wsc:locale>
            <wsc:ip>1.1.1.1</wsc:ip>
            <wsc:item value="${#TestSuite#value1}" key="${#TestSuite#item1}"/>
            <wsc:item value="${#TestSuite#value2}" key="${#TestSuite#item2}"/>
            <wsc:item value="${#TestSuite#value3}" key="${#TestSuite#item3}"/>
            <wsc:item value="${#TestSuite#value4}" key="${#TestSuite#item4}"/>
         </wsc:ClientContext>
      </wsc:AutHeader>
   </soapenv:Header>
   <soapenv:Body>
      <urn:CreditorReadRequest>
         <urn:predefinedCreditorId>${CreditorUpdate_v2_1#Response#//*:predefinedCreditorId}</urn:predefinedCreditorId>
      </urn:CreditorReadRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="XPath Match" name="Match content of [ErrorCode]" id="7df7019d-7fee-48d8-a2eb-b999810fac91">
          <con:configuration>
            <path>${#Response#//*:ErrorCode}</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="writeToFile" id="a33006d4-3846-48c1-8539-038f5ab4b9b4">
          <con:configuration>
            <scriptText>import com.eviware.soapui.support.XmlHolder
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

def path=context.expand( '${projectDir}')
String curStepName = (String)context.getCurrentStep().getLabel()

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 
def response = groovyUtils.getXmlHolder(curStepName + "#Response")
def errorCode=response.getNodeValue("//*:ErrorCode");
def testCase = context.getCurrentStep().getTestCase().getLabel()
def endPoint = messageExchange.getEndpoint()

path=path+"\\results"
File dir = new File(path);
if (!dir.exists())
{
                log.info 'Creating Directory'
                dir.mkdir();
}

Date date = new Date();
SimpleDateFormat df = new SimpleDateFormat("dd-M-yyyy hh:mm:ss a zz");    
df.setTimeZone(TimeZone.getTimeZone("Europe/Oslo"));

def datetime = df.format(date)

SimpleDateFormat fn = new SimpleDateFormat("dd-M-yyyy hh_mm_ss a zz");    
def fileName = fn.format(date)

//log.info path 
def fout = new File(path+"\\"+testCase+" - "+curStepName+"_"+fileName+"_"+errorCode+".txt",)


fout.write("Time Submitted		:	"+datetime+"\r\n")
fout.append("End Point Used		:	"+endPoint+"\r\n")
fout.append("Time Taken		:	"+messageExchange.timeTaken+"ms\r\n")
fout.append("Executed in test set	:	"+testCase+" - "+curStepName+"_"+fileName)
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   REQUEST\r\n\r\n","UTF-8")
fout.append(messageExchange.getRequestHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getRequestContent() ).replace("\n","\r\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   RESPONSE\r\n\r\n","UTF-8")
fout.append(messageExchange.getResponseHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getResponseContent() ).replace("\n","\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig version="200508" mustUnderstand="NONE" action="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1/PINSPaymentPredefinedCreditor_V2_1PortType/CreditorReadRequest"/>
        <con:wsrmConfig version="1.2"/>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="CreditorDelete_v2_1" id="148c99df-3342-48e9-abee-88c8a9b7dc3c">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>PINSPaymentPredefinedCreditor_V2_1PortTypeSoap11</con:interface>
      <con:operation>CreditorDelete</con:operation>
      <con:request wssPasswordType="" useWsReliableMessaging="false" useWsAddressing="false" timeout="" sslKeystore="" outgoingWss="" name="CreditorDelete_v2_1" incomingWss="" id="315126ce-a2a4-448b-aae6-d9b21507cfad">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://${#Project#G_D10}/pin/services/PINSPaymentPredefinedCreditor_V2_1</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsc="http://edb.com/ws/WSCommon_v22" xmlns:urn="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1">
   <soapenv:Header>
     <wsc:AutHeader>
         <wsc:SourceApplication>${#TestSuite#SourceApplication}</wsc:SourceApplication>
         <wsc:DestinationApplication>PIN</wsc:DestinationApplication>
         <wsc:Function>PIN Create</wsc:Function>
         <wsc:Version>V2.0</wsc:Version>
         <wsc:ClientContext>
            <wsc:userid>${#TestSuite#userid}</wsc:userid>
            <wsc:credentials>${#TestSuite#credentials}</wsc:credentials>
            <wsc:channel>NBA</wsc:channel>
            <wsc:orgid>${#TestSuite#orgid}</wsc:orgid>
            <wsc:orgunit>${#TestSuite#orgid}</wsc:orgunit>
            <wsc:customerid>${#TestSuite#customerid}</wsc:customerid>
            <wsc:locale>en</wsc:locale>
            <wsc:ip>1.1.1.1</wsc:ip>
            <wsc:item value="${#TestSuite#value1}" key="${#TestSuite#item1}"/>
            <wsc:item value="${#TestSuite#value2}" key="${#TestSuite#item2}"/>
            <wsc:item value="${#TestSuite#value3}" key="${#TestSuite#item3}"/>
            <wsc:item value="${#TestSuite#value4}" key="${#TestSuite#item4}"/>
         </wsc:ClientContext>
      </wsc:AutHeader>
   </soapenv:Header>
   <soapenv:Body>
      <urn:CreditorDeleteRequest>
         <urn:predefinedCreditorId>${CreditorCreate_v2_1#Response#//*:predefinedCreditorId}</urn:predefinedCreditorId>
      </urn:CreditorDeleteRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="XPath Match" name="Match content of [ErrorCode]" id="c7715144-5b14-4f6d-95f9-63165db57017">
          <con:configuration>
            <path>${#Response#//*:ErrorCode}</path>
            <content>0</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="writeToFile" id="17a5535d-0108-4ba8-bce1-839ea4cf7fff">
          <con:configuration>
            <scriptText>import com.eviware.soapui.support.XmlHolder
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

def path=context.expand( '${projectDir}')
String curStepName = (String)context.getCurrentStep().getLabel()

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 
def response = groovyUtils.getXmlHolder(curStepName + "#Response")
def errorCode=response.getNodeValue("//*:ErrorCode");
def testCase = context.getCurrentStep().getTestCase().getLabel()
def endPoint = messageExchange.getEndpoint()

path=path+"\\results"
File dir = new File(path);
if (!dir.exists())
{
                log.info 'Creating Directory'
                dir.mkdir();
}

Date date = new Date();
SimpleDateFormat df = new SimpleDateFormat("dd-M-yyyy hh:mm:ss a zz");    
df.setTimeZone(TimeZone.getTimeZone("Europe/Oslo"));

def datetime = df.format(date)

SimpleDateFormat fn = new SimpleDateFormat("dd-M-yyyy hh_mm_ss a zz");    
def fileName = fn.format(date)

//log.info path 
def fout = new File(path+"\\"+testCase+" - "+curStepName+"_"+fileName+"_"+errorCode+".txt",)


fout.write("Time Submitted		:	"+datetime+"\r\n")
fout.append("End Point Used		:	"+endPoint+"\r\n")
fout.append("Time Taken		:	"+messageExchange.timeTaken+"ms\r\n")
fout.append("Executed in test set	:	"+testCase+" - "+curStepName+"_"+fileName)
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   REQUEST\r\n\r\n","UTF-8")
fout.append(messageExchange.getRequestHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getRequestContent() ).replace("\n","\r\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   RESPONSE\r\n\r\n","UTF-8")
fout.append(messageExchange.getResponseHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getResponseContent() ).replace("\n","\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig version="200508" mustUnderstand="NONE" action="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1/PINSPaymentPredefinedCreditor_V2_1PortType/CreditorDeleteRequest"/>
        <con:wsrmConfig version="1.2"/>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="CreditorSearch_v2_1_afterDelete" id="51e56fb2-65c1-454c-9b30-e109b24600cd">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>PINSPaymentPredefinedCreditor_V2_1PortTypeSoap11</con:interface>
      <con:operation>CreditorSearch</con:operation>
      <con:request wssPasswordType="" useWsReliableMessaging="false" useWsAddressing="false" timeout="" sslKeystore="" outgoingWss="" name="CreditorSearch_v2_1_afterDelete" incomingWss="" id="4b7392e2-738f-4108-bbad-d230999dd39a">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://${#Project#G_D10}/pin/services/PINSPaymentPredefinedCreditor_V2_1</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsc="http://edb.com/ws/WSCommon_v22" xmlns:urn="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1" xmlns:urn1="urn:pins.payment.evry.com:domain:predefinedcreditor:v2_1" xmlns:urn2="urn:pins.payment.evry.com:domain:common:v2_0">
   <soapenv:Header>
      <wsc:AutHeader>
         <wsc:SourceApplication>${#TestSuite#SourceApplication}</wsc:SourceApplication>
         <wsc:DestinationApplication>PIN</wsc:DestinationApplication>
         <wsc:Function>PIN Create</wsc:Function>
         <wsc:Version>V2.0</wsc:Version>
         <wsc:ClientContext>
            <wsc:userid>${#TestSuite#userid}</wsc:userid>
            <wsc:credentials>${#TestSuite#credentials}</wsc:credentials>
            <wsc:channel>NBA</wsc:channel>
            <wsc:orgid>${#TestSuite#orgid}</wsc:orgid>
            <wsc:orgunit>${#TestSuite#orgid}</wsc:orgunit>
            <wsc:customerid>${#TestSuite#customerid}</wsc:customerid>
            <wsc:locale>en</wsc:locale>
            <wsc:ip>1.1.1.1</wsc:ip>
            <wsc:item value="${#TestSuite#value1}" key="${#TestSuite#item1}"/>
            <wsc:item value="${#TestSuite#value2}" key="${#TestSuite#item2}"/>
            <wsc:item value="${#TestSuite#value3}" key="${#TestSuite#item3}"/>
            <wsc:item value="${#TestSuite#value4}" key="${#TestSuite#item4}"/>
         </wsc:ClientContext>
      </wsc:AutHeader>
   </soapenv:Header>
   <soapenv:Body>
      <urn:CreditorSearchRequest>
         <urn:searchCriteria>
            <!--Optional:-->
            <urn1:alias>${CreditorUpdate_v2_1#Response#//*:alias}</urn1:alias>
            <urn1:type>${CreditorUpdate_v2_1#Response#//*:creditorInformation[1]//*:type[1]}</urn1:type>
            <!--Optional:-->
            <!--Optional:-->
            <!--Optional:-->
            <urn1:elementControl>
               <urn2:StartIndex>0</urn2:StartIndex>
               <urn2:MaximumNumberOfElements>10</urn2:MaximumNumberOfElements>
            </urn1:elementControl>
         </urn:searchCriteria>
      </urn:CreditorSearchRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="XPath Match" name="Match content of [NumberOfElements]" id="a9e3a46c-3ccc-4022-8aa7-7a3bc9cf85c0">
          <con:configuration>
            <path>${#Response#//*:NumberOfElements}=0</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="writeToFile" id="e1b31a07-b5d6-41f2-b545-678aaadfe956">
          <con:configuration>
            <scriptText>import com.eviware.soapui.support.XmlHolder
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

def path=context.expand( '${projectDir}')
String curStepName = (String)context.getCurrentStep().getLabel()

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 
def response = groovyUtils.getXmlHolder(curStepName + "#Response")
def errorCode=response.getNodeValue("//*:ErrorCode");
def testCase = context.getCurrentStep().getTestCase().getLabel()
def endPoint = messageExchange.getEndpoint()

path=path+"\\results"
File dir = new File(path);
if (!dir.exists())
{
                log.info 'Creating Directory'
                dir.mkdir();
}

Date date = new Date();
SimpleDateFormat df = new SimpleDateFormat("dd-M-yyyy hh:mm:ss a zz");    
df.setTimeZone(TimeZone.getTimeZone("Europe/Oslo"));

def datetime = df.format(date)

SimpleDateFormat fn = new SimpleDateFormat("dd-M-yyyy hh_mm_ss a zz");    
def fileName = fn.format(date)

//log.info path 
def fout = new File(path+"\\"+testCase+" - "+curStepName+"_"+fileName+"_"+errorCode+".txt",)


fout.write("Time Submitted		:	"+datetime+"\r\n")
fout.append("End Point Used		:	"+endPoint+"\r\n")
fout.append("Time Taken		:	"+messageExchange.timeTaken+"ms\r\n")
fout.append("Executed in test set	:	"+testCase+" - "+curStepName+"_"+fileName)
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   REQUEST\r\n\r\n","UTF-8")
fout.append(messageExchange.getRequestHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getRequestContent() ).replace("\n","\r\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   RESPONSE\r\n\r\n","UTF-8")
fout.append(messageExchange.getResponseHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getResponseContent() ).replace("\n","\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig version="200508" mustUnderstand="NONE" action="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1/PINSPaymentPredefinedCreditor_V2_1PortType/CreditorSearchRequest"/>
        <con:wsrmConfig version="1.2"/>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="CreditorRead_v2_1_afterDelete" id="0ba188e1-b7c8-4256-8518-850a1a48126b">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>PINSPaymentPredefinedCreditor_V2_1PortTypeSoap11</con:interface>
      <con:operation>CreditorRead</con:operation>
      <con:request wssPasswordType="" useWsReliableMessaging="false" useWsAddressing="false" timeout="" sslKeystore="" outgoingWss="" name="CreditorRead_v2_1_afterDelete" incomingWss="" id="8798c74d-4171-43e9-884d-fb003073f694">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>http://${#Project#G_D10}/pin/services/PINSPaymentPredefinedCreditor_V2_1</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:wsc="http://edb.com/ws/WSCommon_v22" xmlns:urn="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1">
   <soapenv:Header>
      <wsc:AutHeader>
         <wsc:SourceApplication>${#TestSuite#SourceApplication}</wsc:SourceApplication>
         <wsc:DestinationApplication>PIN</wsc:DestinationApplication>
         <wsc:Function>PIN Create</wsc:Function>
         <wsc:Version>V2.0</wsc:Version>
         <wsc:ClientContext>
            <wsc:userid>${#TestSuite#userid}</wsc:userid>
            <wsc:credentials>${#TestSuite#credentials}</wsc:credentials>
            <wsc:channel>NBA</wsc:channel>
            <wsc:orgid>${#TestSuite#orgid}</wsc:orgid>
            <wsc:orgunit>${#TestSuite#orgid}</wsc:orgunit>
            <wsc:customerid>${#TestSuite#customerid}</wsc:customerid>
            <wsc:locale>en</wsc:locale>
            <wsc:ip>1.1.1.1</wsc:ip>
            <wsc:item value="${#TestSuite#value1}" key="${#TestSuite#item1}"/>
            <wsc:item value="${#TestSuite#value2}" key="${#TestSuite#item2}"/>
            <wsc:item value="${#TestSuite#value3}" key="${#TestSuite#item3}"/>
            <wsc:item value="${#TestSuite#value4}" key="${#TestSuite#item4}"/>
         </wsc:ClientContext>
      </wsc:AutHeader>
   </soapenv:Header>
   <soapenv:Body>
      <urn:CreditorReadRequest>
         <urn:predefinedCreditorId>${CreditorCreate_v2_1#Response#//*:predefinedCreditorId}</urn:predefinedCreditorId>
      </urn:CreditorReadRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="XPath Match" name="Match content of [ErrorCode]" id="7df7019d-7fee-48d8-a2eb-b999810fac91">
          <con:configuration>
            <path>${#Response#//*:ErrorCode}</path>
            <content>6435</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="writeToFile" id="a33006d4-3846-48c1-8539-038f5ab4b9b4">
          <con:configuration>
            <scriptText>import com.eviware.soapui.support.XmlHolder
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

def path=context.expand( '${projectDir}')
String curStepName = (String)context.getCurrentStep().getLabel()

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context ) 
def response = groovyUtils.getXmlHolder(curStepName + "#Response")
def errorCode=response.getNodeValue("//*:ErrorCode");
def testCase = context.getCurrentStep().getTestCase().getLabel()
def endPoint = messageExchange.getEndpoint()

path=path+"\\results"
File dir = new File(path);
if (!dir.exists())
{
                log.info 'Creating Directory'
                dir.mkdir();
}

Date date = new Date();
SimpleDateFormat df = new SimpleDateFormat("dd-M-yyyy hh:mm:ss a zz");    
df.setTimeZone(TimeZone.getTimeZone("Europe/Oslo"));

def datetime = df.format(date)

SimpleDateFormat fn = new SimpleDateFormat("dd-M-yyyy hh_mm_ss a zz");    
def fileName = fn.format(date)

//log.info path 
def fout = new File(path+"\\"+testCase+" - "+curStepName+"_"+fileName+"_"+errorCode+".txt",)


fout.write("Time Submitted		:	"+datetime+"\r\n")
fout.append("End Point Used		:	"+endPoint+"\r\n")
fout.append("Time Taken		:	"+messageExchange.timeTaken+"ms\r\n")
fout.append("Executed in test set	:	"+testCase+" - "+curStepName+"_"+fileName)
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   REQUEST\r\n\r\n","UTF-8")
fout.append(messageExchange.getRequestHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getRequestContent() ).replace("\n","\r\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")
fout.append("                                                                                                   RESPONSE\r\n\r\n","UTF-8")
fout.append(messageExchange.getResponseHeaders())
fout.append("\n\n")
fout.append(new String( messageExchange.getResponseContent() ).replace("\n","\n"),"UTF-8")
fout.append("\r\n\r\n","UTF-8")
fout.append("=========================================================================================================================\r\n","UTF-8")</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig version="200508" mustUnderstand="NONE" action="urn:pins.payment.evry.com:ws:paymentcreditor:v2_1/PINSPaymentPredefinedCreditor_V2_1PortType/CreditorReadRequest"/>
        <con:wsrmConfig version="1.2"/>
      </con:request>
    </con:config>
  </con:testStep>
  <con:properties/>
  <con:reportParameters/>
  <con:breakPoints>
    <con:testStepId>ac2bef6f-b2db-43e2-a7a8-002bdc43b7d6</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4fad1fba-354d-41dd-bc7e-8c93eb1e1382</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>3cb5ae88-0b09-4e5d-805e-a533d8082f51</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1e8b0176-8ee0-415e-a1cd-ce6c921e2f02</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>1eaf3c83-9b37-4478-8991-16f4ba53228c</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0d938ba4-a70e-46d2-9760-9b67f05ec017</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>66feb8b1-4121-4d03-a320-9160e9ec7bb2</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e78693f9-5442-4515-ade6-197bf8ffdb80</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>e43c3d9d-4cdf-4b1a-9974-35f02f657325</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b19cece5-0e4c-4fa1-819e-f8fc8d1dcc69</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>84135d68-19c8-497b-8d9d-d970639627ed</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>5d30bda6-5d5c-4c50-b055-8b453b18d797</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>aefb92fd-b9b1-4c20-8cad-db65909dc209</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4df3b3ac-1ac4-462b-8f53-35a56a5c5b0a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>338ca072-d56c-4a21-9de0-1b7f46876272</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>9addda0d-7ca5-4db2-9e70-39d1a980ac97</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>91ea4e27-98e5-4969-86f1-c987f8a29091</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b8b7360b-e01a-48f3-8a61-a154fea73280</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
</con:testCase>
